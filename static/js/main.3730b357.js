/*! For license information please see main.3730b357.js.LICENSE.txt */
(()=>{var e={704:(e,t)=>{"use strict";function n(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function r(){const e=(e,t)=>n=>e(t(n));for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];const i=Array.from(n).reverse().reduce(((t,n)=>t?e(t,n.encode):n.encode),void 0),o=n.reduce(((t,n)=>t?e(t,n.decode):n.decode),void 0);return{encode:i,decode:o}}function i(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!==typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(n(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!==typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{if("string"!==typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const n=e.indexOf(t);if(-1===n)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return n}))}}}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if("string"!==typeof e)throw new Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!==typeof t[0])throw new Error("join.encode input should be array of strings");for(let e of t)if("string"!==typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if("string"!==typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"=";if(n(e),"string"!==typeof t)throw new Error("padding chr should be string");return{encode(n){if(!Array.isArray(n)||n.length&&"string"!==typeof n[0])throw new Error("padding.encode input should be array of strings");for(let e of n)if("string"!==typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;n.length*e%8;)n.push(t);return n},decode(n){if(!Array.isArray(n)||n.length&&"string"!==typeof n[0])throw new Error("padding.encode input should be array of strings");for(let e of n)if("string"!==typeof e)throw new Error(`padding.decode: non-string input=${e}`);let r=n.length;if(r*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;r>0&&n[r-1]===t;r--)if(!((r-1)*e%8))throw new Error("Invalid padding: string has too much padding");return n.slice(0,r)}}}function s(e){if("function"!==typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:t=>e(t)}}function l(e,t,r){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(r<2)throw new Error(`convertRadix: wrong to=${r}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let i=0;const o=[],a=Array.from(e);for(a.forEach((e=>{if(n(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,n=!0;for(let o=i;o<a.length;o++){const s=a[o],l=t*e+s;if(!Number.isSafeInteger(l)||t*e/t!==e||l-s!==t*e)throw new Error("convertRadix: carry overflow");if(e=l%r,a[o]=Math.floor(l/r),!Number.isSafeInteger(a[o])||a[o]*r+e!==l)throw new Error("convertRadix: carry overflow");n&&(a[o]?n=!1:i=o)}if(o.push(e),n)break}for(let n=0;n<e.length-1&&0===e[n];n++)o.push(0);return o.reverse()}t.qX=t.d3=t.$v=t.KA=t.S_=t.Jq=t.tH=t.US=t.pJ=t.YU=void 0;const u=(e,t)=>t?u(t,e%t):e,c=(e,t)=>e+(t-u(e,t));function f(e,t,r,i){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(r<=0||r>32)throw new Error(`convertRadix2: wrong to=${r}`);if(c(t,r)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${r} carryBits=${c(t,r)}`);let o=0,a=0;const s=2**r-1,l=[];for(const u of e){if(n(u),u>=2**t)throw new Error(`convertRadix2: invalid data word=${u} from=${t}`);if(o=o<<t|u,a+t>32)throw new Error(`convertRadix2: carry overflow pos=${a} from=${t}`);for(a+=t;a>=r;a-=r)l.push((o>>a-r&s)>>>0);o&=2**a-1}if(o=o<<r-a&s,!i&&a>=t)throw new Error("Excess padding");if(!i&&o)throw new Error(`Non-zero padding: ${o}`);return i&&a>0&&l.push(o>>>0),l}function d(e){return n(e),{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return l(Array.from(t),256,e)},decode:t=>{if(!Array.isArray(t)||t.length&&"number"!==typeof t[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(l(t,e,256))}}}function h(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(n(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(c(8,e)>32||c(e,8)>32)throw new Error("radix2: carry overflow");return{encode:n=>{if(!(n instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return f(Array.from(n),8,e,!t)},decode:n=>{if(!Array.isArray(n)||n.length&&"number"!==typeof n[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(f(n,e,8,t))}}}function p(e){if("function"!==typeof e)throw new Error("unsafeWrapper fn should be function");return function(){try{for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.apply(null,n)}catch(i){}}}function m(e,t){if(n(e),"function"!==typeof t)throw new Error("checksum fn should be function");return{encode(n){if(!(n instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const r=t(n).slice(0,e),i=new Uint8Array(n.length+e);return i.set(n),i.set(r,n.length),i},decode(n){if(!(n instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const r=n.slice(0,-e),i=t(r).slice(0,e),o=n.slice(-e);for(let t=0;t<e;t++)if(i[t]!==o[t])throw new Error("Invalid checksum");return r}}}t.YU=r(h(4),i("0123456789ABCDEF"),o("")),t.pJ=r(h(5),i("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),a(5),o("")),r(h(5),i("0123456789ABCDEFGHIJKLMNOPQRSTUV"),a(5),o("")),r(h(5),i("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),o(""),s((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),t.US=r(h(6),i("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),a(6),o("")),t.tH=r(h(6),i("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),a(6),o(""));const y=e=>r(d(58),i(e),o(""));t.Jq=y("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),y("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),y("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const v=[0,2,3,5,6,7,9,10,11];t.S_={encode(e){let n="";for(let r=0;r<e.length;r+=8){const i=e.subarray(r,r+8);n+=t.Jq.encode(i).padStart(v[i.length],"1")}return n},decode(e){let n=[];for(let r=0;r<e.length;r+=11){const i=e.slice(r,r+11),o=v.indexOf(i.length),a=t.Jq.decode(i);for(let e=0;e<a.length-o;e++)if(0!==a[e])throw new Error("base58xmr: wrong padding");n=n.concat(Array.from(a.slice(a.length-o)))}return Uint8Array.from(n)}};const b=r(i("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),o("")),g=[996825010,642813549,513874426,1027748829,705979059];function w(e){const t=e>>25;let n=(33554431&e)<<5;for(let r=0;r<g.length;r++)1===(t>>r&1)&&(n^=g[r]);return n}function x(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=e.length;let i=1;for(let o=0;o<r;o++){const t=e.charCodeAt(o);if(t<33||t>126)throw new Error(`Invalid prefix (${e})`);i=w(i)^t>>5}i=w(i);for(let o=0;o<r;o++)i=w(i)^31&e.charCodeAt(o);for(let o of t)i=w(i)^o;for(let o=0;o<6;o++)i=w(i);return i^=n,b.encode(f([i%2**30],30,5,!1))}function P(e){const t="bech32"===e?1:734539939,n=h(5),r=n.decode,i=n.encode,o=p(r);function a(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:90;if("string"!==typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==n&&e.length>n)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${n})`);const r=e.toLowerCase();if(e!==r&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const i=(e=r).lastIndexOf("1");if(0===i||-1===i)throw new Error('Letter "1" must be present between prefix and data only');const[o,a]=[e.slice(0,i),e.slice(i+1)];if(a.length<6)throw new Error("Data must be at least 6 characters long");const s=b.decode(a).slice(0,-6),l=x(o,s,t);if(!a.endsWith(l))throw new Error(`Invalid checksum in ${e}: expected "${l}"`);return{prefix:o,words:s}}return{encode:function(e,n){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:90;if("string"!==typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(!Array.isArray(n)||n.length&&"number"!==typeof n[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof n);const i=e.length+7+n.length;if(!1!==r&&i>r)throw new TypeError(`Length ${i} exceeds limit ${r}`);return`${e=e.toLowerCase()}1${b.encode(n)}${x(e,n,t)}`},decode:a,decodeToBytes:function(e){const{prefix:t,words:n}=a(e,!1);return{prefix:t,words:n,bytes:r(n)}},decodeUnsafe:p(a),fromWords:r,fromWordsUnsafe:o,toWords:i}}P("bech32"),P("bech32m"),t.KA={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},t.$v=r(h(4),i("0123456789abcdef"),o(""),s((e=>{if("string"!==typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()})));const k={utf8:t.KA,hex:t.$v,base16:t.YU,base32:t.pJ,base64:t.US,base64url:t.tH,base58:t.Jq,base58xmr:t.S_},z=`Invalid encoding type. Available types: ${Object.keys(k).join(", ")}`;t.d3=(e,t)=>{if("string"!==typeof e||!k.hasOwnProperty(e))throw new TypeError(z);if(!(t instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return k[e].encode(t)},t.d3;t.qX=(e,t)=>{if(!k.hasOwnProperty(e))throw new TypeError(z);if("string"!==typeof t)throw new TypeError("stringToBytes() expects string");return k[e].decode(t)},t.qX},518:function(e,t,n){!function(e,t){"use strict";function r(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}function o(e,t,n){if(o.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(n=t,t=10),this._init(e||0,t||10,n||"be"))}var a;"object"===typeof e?e.exports=o:t.BN=o,o.BN=o,o.wordSize=26;try{a="undefined"!==typeof window&&"undefined"!==typeof window.Buffer?window.Buffer:n(601).Buffer}catch(T){}function s(e,t){var n=e.charCodeAt(t);return n>=48&&n<=57?n-48:n>=65&&n<=70?n-55:n>=97&&n<=102?n-87:void r(!1,"Invalid character in "+e)}function l(e,t,n){var r=s(e,n);return n-1>=t&&(r|=s(e,n-1)<<4),r}function u(e,t,n,i){for(var o=0,a=0,s=Math.min(e.length,n),l=t;l<s;l++){var u=e.charCodeAt(l)-48;o*=i,a=u>=49?u-49+10:u>=17?u-17+10:u,r(u>=0&&a<i,"Invalid character"),o+=a}return o}function c(e,t){e.words=t.words,e.length=t.length,e.negative=t.negative,e.red=t.red}if(o.isBN=function(e){return e instanceof o||null!==e&&"object"===typeof e&&e.constructor.wordSize===o.wordSize&&Array.isArray(e.words)},o.max=function(e,t){return e.cmp(t)>0?e:t},o.min=function(e,t){return e.cmp(t)<0?e:t},o.prototype._init=function(e,t,n){if("number"===typeof e)return this._initNumber(e,t,n);if("object"===typeof e)return this._initArray(e,t,n);"hex"===t&&(t=16),r(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,n):(this._parseBase(e,t,i),"le"===n&&this._initArray(this.toArray(),t,n)))},o.prototype._initNumber=function(e,t,n){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(r(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),t,n)},o.prototype._initArray=function(e,t,n){if(r("number"===typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,a,s=0;if("be"===n)for(i=e.length-1,o=0;i>=0;i-=3)a=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[o]|=a<<s&67108863,this.words[o+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);else if("le"===n)for(i=0,o=0;i<e.length;i+=3)a=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[o]|=a<<s&67108863,this.words[o+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);return this._strip()},o.prototype._parseHex=function(e,t,n){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var i,o=0,a=0;if("be"===n)for(r=e.length-1;r>=t;r-=2)i=l(e,t,r)<<o,this.words[a]|=67108863&i,o>=18?(o-=18,a+=1,this.words[a]|=i>>>26):o+=8;else for(r=(e.length-t)%2===0?t+1:t;r<e.length;r+=2)i=l(e,t,r)<<o,this.words[a]|=67108863&i,o>=18?(o-=18,a+=1,this.words[a]|=i>>>26):o+=8;this._strip()},o.prototype._parseBase=function(e,t,n){this.words=[0],this.length=1;for(var r=0,i=1;i<=67108863;i*=t)r++;r--,i=i/t|0;for(var o=e.length-n,a=o%r,s=Math.min(o,o-a)+n,l=0,c=n;c<s;c+=r)l=u(e,c,c+r,t),this.imuln(i),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l);if(0!==a){var f=1;for(l=u(e,c,e.length,t),c=0;c<a;c++)f*=t;this.imuln(f),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l)}this._strip()},o.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},o.prototype._move=function(e){c(e,this)},o.prototype.clone=function(){var e=new o(null);return this.copy(e),e},o.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},o.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!==typeof Symbol&&"function"===typeof Symbol.for)try{o.prototype[Symbol.for("nodejs.util.inspect.custom")]=f}catch(T){o.prototype.inspect=f}else o.prototype.inspect=f;function f(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var d=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],h=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];o.prototype.toString=function(e,t){var n;if(t=0|t||1,16===(e=e||10)||"hex"===e){n="";for(var i=0,o=0,a=0;a<this.length;a++){var s=this.words[a],l=(16777215&(s<<i|o)).toString(16);n=0!==(o=s>>>24-i&16777215)||a!==this.length-1?d[6-l.length]+l+n:l+n,(i+=2)>=26&&(i-=26,a--)}for(0!==o&&(n=o.toString(16)+n);n.length%t!==0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(e===(0|e)&&e>=2&&e<=36){var u=h[e],c=p[e];n="";var f=this.clone();for(f.negative=0;!f.isZero();){var m=f.modrn(c).toString(e);n=(f=f.idivn(c)).isZero()?m+n:d[u-m.length]+m+n}for(this.isZero()&&(n="0"+n);n.length%t!==0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},o.prototype.toJSON=function(){return this.toString(16,2)},a&&(o.prototype.toBuffer=function(e,t){return this.toArrayLike(a,e,t)}),o.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)};function m(e,t,n){n.negative=t.negative^e.negative;var r=e.length+t.length|0;n.length=r,r=r-1|0;var i=0|e.words[0],o=0|t.words[0],a=i*o,s=67108863&a,l=a/67108864|0;n.words[0]=s;for(var u=1;u<r;u++){for(var c=l>>>26,f=67108863&l,d=Math.min(u,t.length-1),h=Math.max(0,u-e.length+1);h<=d;h++){var p=u-h|0;c+=(a=(i=0|e.words[p])*(o=0|t.words[h])+f)/67108864|0,f=67108863&a}n.words[u]=0|f,l=0|c}return 0!==l?n.words[u]=0|l:n.length--,n._strip()}o.prototype.toArrayLike=function(e,t,n){this._strip();var i=this.byteLength(),o=n||Math.max(1,i);r(i<=o,"byte array longer than desired length"),r(o>0,"Requested array length <= 0");var a=function(e,t){return e.allocUnsafe?e.allocUnsafe(t):new e(t)}(e,o);return this["_toArrayLike"+("le"===t?"LE":"BE")](a,i),a},o.prototype._toArrayLikeLE=function(e,t){for(var n=0,r=0,i=0,o=0;i<this.length;i++){var a=this.words[i]<<o|r;e[n++]=255&a,n<e.length&&(e[n++]=a>>8&255),n<e.length&&(e[n++]=a>>16&255),6===o?(n<e.length&&(e[n++]=a>>24&255),r=0,o=0):(r=a>>>24,o+=2)}if(n<e.length)for(e[n++]=r;n<e.length;)e[n++]=0},o.prototype._toArrayLikeBE=function(e,t){for(var n=e.length-1,r=0,i=0,o=0;i<this.length;i++){var a=this.words[i]<<o|r;e[n--]=255&a,n>=0&&(e[n--]=a>>8&255),n>=0&&(e[n--]=a>>16&255),6===o?(n>=0&&(e[n--]=a>>24&255),r=0,o=0):(r=a>>>24,o+=2)}if(n>=0)for(e[n--]=r;n>=0;)e[n--]=0},Math.clz32?o.prototype._countBits=function(e){return 32-Math.clz32(e)}:o.prototype._countBits=function(e){var t=e,n=0;return t>=4096&&(n+=13,t>>>=13),t>=64&&(n+=7,t>>>=7),t>=8&&(n+=4,t>>>=4),t>=2&&(n+=2,t>>>=2),n+t},o.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,n=0;return 0===(8191&t)&&(n+=13,t>>>=13),0===(127&t)&&(n+=7,t>>>=7),0===(15&t)&&(n+=4,t>>>=4),0===(3&t)&&(n+=2,t>>>=2),0===(1&t)&&n++,n},o.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var n=this._zeroBits(this.words[t]);if(e+=n,26!==n)break}return e},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},o.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},o.prototype.ior=function(e){return r(0===(this.negative|e.negative)),this.iuor(e)},o.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},o.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},o.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var n=0;n<t.length;n++)this.words[n]=this.words[n]&e.words[n];return this.length=t.length,this._strip()},o.prototype.iand=function(e){return r(0===(this.negative|e.negative)),this.iuand(e)},o.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},o.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},o.prototype.iuxor=function(e){var t,n;this.length>e.length?(t=this,n=e):(t=e,n=this);for(var r=0;r<n.length;r++)this.words[r]=t.words[r]^n.words[r];if(this!==t)for(;r<t.length;r++)this.words[r]=t.words[r];return this.length=t.length,this._strip()},o.prototype.ixor=function(e){return r(0===(this.negative|e.negative)),this.iuxor(e)},o.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},o.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},o.prototype.inotn=function(e){r("number"===typeof e&&e>=0);var t=0|Math.ceil(e/26),n=e%26;this._expand(t),n>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return n>0&&(this.words[i]=~this.words[i]&67108863>>26-n),this._strip()},o.prototype.notn=function(e){return this.clone().inotn(e)},o.prototype.setn=function(e,t){r("number"===typeof e&&e>=0);var n=e/26|0,i=e%26;return this._expand(n+1),this.words[n]=t?this.words[n]|1<<i:this.words[n]&~(1<<i),this._strip()},o.prototype.iadd=function(e){var t,n,r;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(n=this,r=e):(n=e,r=this);for(var i=0,o=0;o<r.length;o++)t=(0|n.words[o])+(0|r.words[o])+i,this.words[o]=67108863&t,i=t>>>26;for(;0!==i&&o<n.length;o++)t=(0|n.words[o])+i,this.words[o]=67108863&t,i=t>>>26;if(this.length=n.length,0!==i)this.words[this.length]=i,this.length++;else if(n!==this)for(;o<n.length;o++)this.words[o]=n.words[o];return this},o.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},o.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var n,r,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(n=this,r=e):(n=e,r=this);for(var o=0,a=0;a<r.length;a++)o=(t=(0|n.words[a])-(0|r.words[a])+o)>>26,this.words[a]=67108863&t;for(;0!==o&&a<n.length;a++)o=(t=(0|n.words[a])+o)>>26,this.words[a]=67108863&t;if(0===o&&a<n.length&&n!==this)for(;a<n.length;a++)this.words[a]=n.words[a];return this.length=Math.max(this.length,a),n!==this&&(this.negative=1),this._strip()},o.prototype.sub=function(e){return this.clone().isub(e)};var y=function(e,t,n){var r,i,o,a=e.words,s=t.words,l=n.words,u=0,c=0|a[0],f=8191&c,d=c>>>13,h=0|a[1],p=8191&h,m=h>>>13,y=0|a[2],v=8191&y,b=y>>>13,g=0|a[3],w=8191&g,x=g>>>13,P=0|a[4],k=8191&P,z=P>>>13,M=0|a[5],N=8191&M,O=M>>>13,T=0|a[6],j=8191&T,L=T>>>13,E=0|a[7],H=8191&E,X=E>>>13,A=0|a[8],S=8191&A,Z=A>>>13,D=0|a[9],R=8191&D,U=D>>>13,F=0|s[0],W=8191&F,C=F>>>13,q=0|s[1],I=8191&q,B=q>>>13,Y=0|s[2],V=8191&Y,G=Y>>>13,K=0|s[3],J=8191&K,Q=K>>>13,_=0|s[4],$=8191&_,ee=_>>>13,te=0|s[5],ne=8191&te,re=te>>>13,ie=0|s[6],oe=8191&ie,ae=ie>>>13,se=0|s[7],le=8191&se,ue=se>>>13,ce=0|s[8],fe=8191&ce,de=ce>>>13,he=0|s[9],pe=8191&he,me=he>>>13;n.negative=e.negative^t.negative,n.length=19;var ye=(u+(r=Math.imul(f,W))|0)+((8191&(i=(i=Math.imul(f,C))+Math.imul(d,W)|0))<<13)|0;u=((o=Math.imul(d,C))+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,r=Math.imul(p,W),i=(i=Math.imul(p,C))+Math.imul(m,W)|0,o=Math.imul(m,C);var ve=(u+(r=r+Math.imul(f,I)|0)|0)+((8191&(i=(i=i+Math.imul(f,B)|0)+Math.imul(d,I)|0))<<13)|0;u=((o=o+Math.imul(d,B)|0)+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,r=Math.imul(v,W),i=(i=Math.imul(v,C))+Math.imul(b,W)|0,o=Math.imul(b,C),r=r+Math.imul(p,I)|0,i=(i=i+Math.imul(p,B)|0)+Math.imul(m,I)|0,o=o+Math.imul(m,B)|0;var be=(u+(r=r+Math.imul(f,V)|0)|0)+((8191&(i=(i=i+Math.imul(f,G)|0)+Math.imul(d,V)|0))<<13)|0;u=((o=o+Math.imul(d,G)|0)+(i>>>13)|0)+(be>>>26)|0,be&=67108863,r=Math.imul(w,W),i=(i=Math.imul(w,C))+Math.imul(x,W)|0,o=Math.imul(x,C),r=r+Math.imul(v,I)|0,i=(i=i+Math.imul(v,B)|0)+Math.imul(b,I)|0,o=o+Math.imul(b,B)|0,r=r+Math.imul(p,V)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,V)|0,o=o+Math.imul(m,G)|0;var ge=(u+(r=r+Math.imul(f,J)|0)|0)+((8191&(i=(i=i+Math.imul(f,Q)|0)+Math.imul(d,J)|0))<<13)|0;u=((o=o+Math.imul(d,Q)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,r=Math.imul(k,W),i=(i=Math.imul(k,C))+Math.imul(z,W)|0,o=Math.imul(z,C),r=r+Math.imul(w,I)|0,i=(i=i+Math.imul(w,B)|0)+Math.imul(x,I)|0,o=o+Math.imul(x,B)|0,r=r+Math.imul(v,V)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(b,V)|0,o=o+Math.imul(b,G)|0,r=r+Math.imul(p,J)|0,i=(i=i+Math.imul(p,Q)|0)+Math.imul(m,J)|0,o=o+Math.imul(m,Q)|0;var we=(u+(r=r+Math.imul(f,$)|0)|0)+((8191&(i=(i=i+Math.imul(f,ee)|0)+Math.imul(d,$)|0))<<13)|0;u=((o=o+Math.imul(d,ee)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,r=Math.imul(N,W),i=(i=Math.imul(N,C))+Math.imul(O,W)|0,o=Math.imul(O,C),r=r+Math.imul(k,I)|0,i=(i=i+Math.imul(k,B)|0)+Math.imul(z,I)|0,o=o+Math.imul(z,B)|0,r=r+Math.imul(w,V)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(x,V)|0,o=o+Math.imul(x,G)|0,r=r+Math.imul(v,J)|0,i=(i=i+Math.imul(v,Q)|0)+Math.imul(b,J)|0,o=o+Math.imul(b,Q)|0,r=r+Math.imul(p,$)|0,i=(i=i+Math.imul(p,ee)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,ee)|0;var xe=(u+(r=r+Math.imul(f,ne)|0)|0)+((8191&(i=(i=i+Math.imul(f,re)|0)+Math.imul(d,ne)|0))<<13)|0;u=((o=o+Math.imul(d,re)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,r=Math.imul(j,W),i=(i=Math.imul(j,C))+Math.imul(L,W)|0,o=Math.imul(L,C),r=r+Math.imul(N,I)|0,i=(i=i+Math.imul(N,B)|0)+Math.imul(O,I)|0,o=o+Math.imul(O,B)|0,r=r+Math.imul(k,V)|0,i=(i=i+Math.imul(k,G)|0)+Math.imul(z,V)|0,o=o+Math.imul(z,G)|0,r=r+Math.imul(w,J)|0,i=(i=i+Math.imul(w,Q)|0)+Math.imul(x,J)|0,o=o+Math.imul(x,Q)|0,r=r+Math.imul(v,$)|0,i=(i=i+Math.imul(v,ee)|0)+Math.imul(b,$)|0,o=o+Math.imul(b,ee)|0,r=r+Math.imul(p,ne)|0,i=(i=i+Math.imul(p,re)|0)+Math.imul(m,ne)|0,o=o+Math.imul(m,re)|0;var Pe=(u+(r=r+Math.imul(f,oe)|0)|0)+((8191&(i=(i=i+Math.imul(f,ae)|0)+Math.imul(d,oe)|0))<<13)|0;u=((o=o+Math.imul(d,ae)|0)+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,r=Math.imul(H,W),i=(i=Math.imul(H,C))+Math.imul(X,W)|0,o=Math.imul(X,C),r=r+Math.imul(j,I)|0,i=(i=i+Math.imul(j,B)|0)+Math.imul(L,I)|0,o=o+Math.imul(L,B)|0,r=r+Math.imul(N,V)|0,i=(i=i+Math.imul(N,G)|0)+Math.imul(O,V)|0,o=o+Math.imul(O,G)|0,r=r+Math.imul(k,J)|0,i=(i=i+Math.imul(k,Q)|0)+Math.imul(z,J)|0,o=o+Math.imul(z,Q)|0,r=r+Math.imul(w,$)|0,i=(i=i+Math.imul(w,ee)|0)+Math.imul(x,$)|0,o=o+Math.imul(x,ee)|0,r=r+Math.imul(v,ne)|0,i=(i=i+Math.imul(v,re)|0)+Math.imul(b,ne)|0,o=o+Math.imul(b,re)|0,r=r+Math.imul(p,oe)|0,i=(i=i+Math.imul(p,ae)|0)+Math.imul(m,oe)|0,o=o+Math.imul(m,ae)|0;var ke=(u+(r=r+Math.imul(f,le)|0)|0)+((8191&(i=(i=i+Math.imul(f,ue)|0)+Math.imul(d,le)|0))<<13)|0;u=((o=o+Math.imul(d,ue)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,r=Math.imul(S,W),i=(i=Math.imul(S,C))+Math.imul(Z,W)|0,o=Math.imul(Z,C),r=r+Math.imul(H,I)|0,i=(i=i+Math.imul(H,B)|0)+Math.imul(X,I)|0,o=o+Math.imul(X,B)|0,r=r+Math.imul(j,V)|0,i=(i=i+Math.imul(j,G)|0)+Math.imul(L,V)|0,o=o+Math.imul(L,G)|0,r=r+Math.imul(N,J)|0,i=(i=i+Math.imul(N,Q)|0)+Math.imul(O,J)|0,o=o+Math.imul(O,Q)|0,r=r+Math.imul(k,$)|0,i=(i=i+Math.imul(k,ee)|0)+Math.imul(z,$)|0,o=o+Math.imul(z,ee)|0,r=r+Math.imul(w,ne)|0,i=(i=i+Math.imul(w,re)|0)+Math.imul(x,ne)|0,o=o+Math.imul(x,re)|0,r=r+Math.imul(v,oe)|0,i=(i=i+Math.imul(v,ae)|0)+Math.imul(b,oe)|0,o=o+Math.imul(b,ae)|0,r=r+Math.imul(p,le)|0,i=(i=i+Math.imul(p,ue)|0)+Math.imul(m,le)|0,o=o+Math.imul(m,ue)|0;var ze=(u+(r=r+Math.imul(f,fe)|0)|0)+((8191&(i=(i=i+Math.imul(f,de)|0)+Math.imul(d,fe)|0))<<13)|0;u=((o=o+Math.imul(d,de)|0)+(i>>>13)|0)+(ze>>>26)|0,ze&=67108863,r=Math.imul(R,W),i=(i=Math.imul(R,C))+Math.imul(U,W)|0,o=Math.imul(U,C),r=r+Math.imul(S,I)|0,i=(i=i+Math.imul(S,B)|0)+Math.imul(Z,I)|0,o=o+Math.imul(Z,B)|0,r=r+Math.imul(H,V)|0,i=(i=i+Math.imul(H,G)|0)+Math.imul(X,V)|0,o=o+Math.imul(X,G)|0,r=r+Math.imul(j,J)|0,i=(i=i+Math.imul(j,Q)|0)+Math.imul(L,J)|0,o=o+Math.imul(L,Q)|0,r=r+Math.imul(N,$)|0,i=(i=i+Math.imul(N,ee)|0)+Math.imul(O,$)|0,o=o+Math.imul(O,ee)|0,r=r+Math.imul(k,ne)|0,i=(i=i+Math.imul(k,re)|0)+Math.imul(z,ne)|0,o=o+Math.imul(z,re)|0,r=r+Math.imul(w,oe)|0,i=(i=i+Math.imul(w,ae)|0)+Math.imul(x,oe)|0,o=o+Math.imul(x,ae)|0,r=r+Math.imul(v,le)|0,i=(i=i+Math.imul(v,ue)|0)+Math.imul(b,le)|0,o=o+Math.imul(b,ue)|0,r=r+Math.imul(p,fe)|0,i=(i=i+Math.imul(p,de)|0)+Math.imul(m,fe)|0,o=o+Math.imul(m,de)|0;var Me=(u+(r=r+Math.imul(f,pe)|0)|0)+((8191&(i=(i=i+Math.imul(f,me)|0)+Math.imul(d,pe)|0))<<13)|0;u=((o=o+Math.imul(d,me)|0)+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,r=Math.imul(R,I),i=(i=Math.imul(R,B))+Math.imul(U,I)|0,o=Math.imul(U,B),r=r+Math.imul(S,V)|0,i=(i=i+Math.imul(S,G)|0)+Math.imul(Z,V)|0,o=o+Math.imul(Z,G)|0,r=r+Math.imul(H,J)|0,i=(i=i+Math.imul(H,Q)|0)+Math.imul(X,J)|0,o=o+Math.imul(X,Q)|0,r=r+Math.imul(j,$)|0,i=(i=i+Math.imul(j,ee)|0)+Math.imul(L,$)|0,o=o+Math.imul(L,ee)|0,r=r+Math.imul(N,ne)|0,i=(i=i+Math.imul(N,re)|0)+Math.imul(O,ne)|0,o=o+Math.imul(O,re)|0,r=r+Math.imul(k,oe)|0,i=(i=i+Math.imul(k,ae)|0)+Math.imul(z,oe)|0,o=o+Math.imul(z,ae)|0,r=r+Math.imul(w,le)|0,i=(i=i+Math.imul(w,ue)|0)+Math.imul(x,le)|0,o=o+Math.imul(x,ue)|0,r=r+Math.imul(v,fe)|0,i=(i=i+Math.imul(v,de)|0)+Math.imul(b,fe)|0,o=o+Math.imul(b,de)|0;var Ne=(u+(r=r+Math.imul(p,pe)|0)|0)+((8191&(i=(i=i+Math.imul(p,me)|0)+Math.imul(m,pe)|0))<<13)|0;u=((o=o+Math.imul(m,me)|0)+(i>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,r=Math.imul(R,V),i=(i=Math.imul(R,G))+Math.imul(U,V)|0,o=Math.imul(U,G),r=r+Math.imul(S,J)|0,i=(i=i+Math.imul(S,Q)|0)+Math.imul(Z,J)|0,o=o+Math.imul(Z,Q)|0,r=r+Math.imul(H,$)|0,i=(i=i+Math.imul(H,ee)|0)+Math.imul(X,$)|0,o=o+Math.imul(X,ee)|0,r=r+Math.imul(j,ne)|0,i=(i=i+Math.imul(j,re)|0)+Math.imul(L,ne)|0,o=o+Math.imul(L,re)|0,r=r+Math.imul(N,oe)|0,i=(i=i+Math.imul(N,ae)|0)+Math.imul(O,oe)|0,o=o+Math.imul(O,ae)|0,r=r+Math.imul(k,le)|0,i=(i=i+Math.imul(k,ue)|0)+Math.imul(z,le)|0,o=o+Math.imul(z,ue)|0,r=r+Math.imul(w,fe)|0,i=(i=i+Math.imul(w,de)|0)+Math.imul(x,fe)|0,o=o+Math.imul(x,de)|0;var Oe=(u+(r=r+Math.imul(v,pe)|0)|0)+((8191&(i=(i=i+Math.imul(v,me)|0)+Math.imul(b,pe)|0))<<13)|0;u=((o=o+Math.imul(b,me)|0)+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,r=Math.imul(R,J),i=(i=Math.imul(R,Q))+Math.imul(U,J)|0,o=Math.imul(U,Q),r=r+Math.imul(S,$)|0,i=(i=i+Math.imul(S,ee)|0)+Math.imul(Z,$)|0,o=o+Math.imul(Z,ee)|0,r=r+Math.imul(H,ne)|0,i=(i=i+Math.imul(H,re)|0)+Math.imul(X,ne)|0,o=o+Math.imul(X,re)|0,r=r+Math.imul(j,oe)|0,i=(i=i+Math.imul(j,ae)|0)+Math.imul(L,oe)|0,o=o+Math.imul(L,ae)|0,r=r+Math.imul(N,le)|0,i=(i=i+Math.imul(N,ue)|0)+Math.imul(O,le)|0,o=o+Math.imul(O,ue)|0,r=r+Math.imul(k,fe)|0,i=(i=i+Math.imul(k,de)|0)+Math.imul(z,fe)|0,o=o+Math.imul(z,de)|0;var Te=(u+(r=r+Math.imul(w,pe)|0)|0)+((8191&(i=(i=i+Math.imul(w,me)|0)+Math.imul(x,pe)|0))<<13)|0;u=((o=o+Math.imul(x,me)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,r=Math.imul(R,$),i=(i=Math.imul(R,ee))+Math.imul(U,$)|0,o=Math.imul(U,ee),r=r+Math.imul(S,ne)|0,i=(i=i+Math.imul(S,re)|0)+Math.imul(Z,ne)|0,o=o+Math.imul(Z,re)|0,r=r+Math.imul(H,oe)|0,i=(i=i+Math.imul(H,ae)|0)+Math.imul(X,oe)|0,o=o+Math.imul(X,ae)|0,r=r+Math.imul(j,le)|0,i=(i=i+Math.imul(j,ue)|0)+Math.imul(L,le)|0,o=o+Math.imul(L,ue)|0,r=r+Math.imul(N,fe)|0,i=(i=i+Math.imul(N,de)|0)+Math.imul(O,fe)|0,o=o+Math.imul(O,de)|0;var je=(u+(r=r+Math.imul(k,pe)|0)|0)+((8191&(i=(i=i+Math.imul(k,me)|0)+Math.imul(z,pe)|0))<<13)|0;u=((o=o+Math.imul(z,me)|0)+(i>>>13)|0)+(je>>>26)|0,je&=67108863,r=Math.imul(R,ne),i=(i=Math.imul(R,re))+Math.imul(U,ne)|0,o=Math.imul(U,re),r=r+Math.imul(S,oe)|0,i=(i=i+Math.imul(S,ae)|0)+Math.imul(Z,oe)|0,o=o+Math.imul(Z,ae)|0,r=r+Math.imul(H,le)|0,i=(i=i+Math.imul(H,ue)|0)+Math.imul(X,le)|0,o=o+Math.imul(X,ue)|0,r=r+Math.imul(j,fe)|0,i=(i=i+Math.imul(j,de)|0)+Math.imul(L,fe)|0,o=o+Math.imul(L,de)|0;var Le=(u+(r=r+Math.imul(N,pe)|0)|0)+((8191&(i=(i=i+Math.imul(N,me)|0)+Math.imul(O,pe)|0))<<13)|0;u=((o=o+Math.imul(O,me)|0)+(i>>>13)|0)+(Le>>>26)|0,Le&=67108863,r=Math.imul(R,oe),i=(i=Math.imul(R,ae))+Math.imul(U,oe)|0,o=Math.imul(U,ae),r=r+Math.imul(S,le)|0,i=(i=i+Math.imul(S,ue)|0)+Math.imul(Z,le)|0,o=o+Math.imul(Z,ue)|0,r=r+Math.imul(H,fe)|0,i=(i=i+Math.imul(H,de)|0)+Math.imul(X,fe)|0,o=o+Math.imul(X,de)|0;var Ee=(u+(r=r+Math.imul(j,pe)|0)|0)+((8191&(i=(i=i+Math.imul(j,me)|0)+Math.imul(L,pe)|0))<<13)|0;u=((o=o+Math.imul(L,me)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,r=Math.imul(R,le),i=(i=Math.imul(R,ue))+Math.imul(U,le)|0,o=Math.imul(U,ue),r=r+Math.imul(S,fe)|0,i=(i=i+Math.imul(S,de)|0)+Math.imul(Z,fe)|0,o=o+Math.imul(Z,de)|0;var He=(u+(r=r+Math.imul(H,pe)|0)|0)+((8191&(i=(i=i+Math.imul(H,me)|0)+Math.imul(X,pe)|0))<<13)|0;u=((o=o+Math.imul(X,me)|0)+(i>>>13)|0)+(He>>>26)|0,He&=67108863,r=Math.imul(R,fe),i=(i=Math.imul(R,de))+Math.imul(U,fe)|0,o=Math.imul(U,de);var Xe=(u+(r=r+Math.imul(S,pe)|0)|0)+((8191&(i=(i=i+Math.imul(S,me)|0)+Math.imul(Z,pe)|0))<<13)|0;u=((o=o+Math.imul(Z,me)|0)+(i>>>13)|0)+(Xe>>>26)|0,Xe&=67108863;var Ae=(u+(r=Math.imul(R,pe))|0)+((8191&(i=(i=Math.imul(R,me))+Math.imul(U,pe)|0))<<13)|0;return u=((o=Math.imul(U,me))+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,l[0]=ye,l[1]=ve,l[2]=be,l[3]=ge,l[4]=we,l[5]=xe,l[6]=Pe,l[7]=ke,l[8]=ze,l[9]=Me,l[10]=Ne,l[11]=Oe,l[12]=Te,l[13]=je,l[14]=Le,l[15]=Ee,l[16]=He,l[17]=Xe,l[18]=Ae,0!==u&&(l[19]=u,n.length++),n};function v(e,t,n){n.negative=t.negative^e.negative,n.length=e.length+t.length;for(var r=0,i=0,o=0;o<n.length-1;o++){var a=i;i=0;for(var s=67108863&r,l=Math.min(o,t.length-1),u=Math.max(0,o-e.length+1);u<=l;u++){var c=o-u,f=(0|e.words[c])*(0|t.words[u]),d=67108863&f;s=67108863&(d=d+s|0),i+=(a=(a=a+(f/67108864|0)|0)+(d>>>26)|0)>>>26,a&=67108863}n.words[o]=s,r=a,a=i}return 0!==r?n.words[o]=r:n.length--,n._strip()}function b(e,t,n){return v(e,t,n)}function g(e,t){this.x=e,this.y=t}Math.imul||(y=m),o.prototype.mulTo=function(e,t){var n=this.length+e.length;return 10===this.length&&10===e.length?y(this,e,t):n<63?m(this,e,t):n<1024?v(this,e,t):b(this,e,t)},g.prototype.makeRBT=function(e){for(var t=new Array(e),n=o.prototype._countBits(e)-1,r=0;r<e;r++)t[r]=this.revBin(r,n,e);return t},g.prototype.revBin=function(e,t,n){if(0===e||e===n-1)return e;for(var r=0,i=0;i<t;i++)r|=(1&e)<<t-i-1,e>>=1;return r},g.prototype.permute=function(e,t,n,r,i,o){for(var a=0;a<o;a++)r[a]=t[e[a]],i[a]=n[e[a]]},g.prototype.transform=function(e,t,n,r,i,o){this.permute(o,e,t,n,r,i);for(var a=1;a<i;a<<=1)for(var s=a<<1,l=Math.cos(2*Math.PI/s),u=Math.sin(2*Math.PI/s),c=0;c<i;c+=s)for(var f=l,d=u,h=0;h<a;h++){var p=n[c+h],m=r[c+h],y=n[c+h+a],v=r[c+h+a],b=f*y-d*v;v=f*v+d*y,y=b,n[c+h]=p+y,r[c+h]=m+v,n[c+h+a]=p-y,r[c+h+a]=m-v,h!==s&&(b=l*f-u*d,d=l*d+u*f,f=b)}},g.prototype.guessLen13b=function(e,t){var n=1|Math.max(t,e),r=1&n,i=0;for(n=n/2|0;n;n>>>=1)i++;return 1<<i+1+r},g.prototype.conjugate=function(e,t,n){if(!(n<=1))for(var r=0;r<n/2;r++){var i=e[r];e[r]=e[n-r-1],e[n-r-1]=i,i=t[r],t[r]=-t[n-r-1],t[n-r-1]=-i}},g.prototype.normalize13b=function(e,t){for(var n=0,r=0;r<t/2;r++){var i=8192*Math.round(e[2*r+1]/t)+Math.round(e[2*r]/t)+n;e[r]=67108863&i,n=i<67108864?0:i/67108864|0}return e},g.prototype.convert13b=function(e,t,n,i){for(var o=0,a=0;a<t;a++)o+=0|e[a],n[2*a]=8191&o,o>>>=13,n[2*a+1]=8191&o,o>>>=13;for(a=2*t;a<i;++a)n[a]=0;r(0===o),r(0===(-8192&o))},g.prototype.stub=function(e){for(var t=new Array(e),n=0;n<e;n++)t[n]=0;return t},g.prototype.mulp=function(e,t,n){var r=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(r),o=this.stub(r),a=new Array(r),s=new Array(r),l=new Array(r),u=new Array(r),c=new Array(r),f=new Array(r),d=n.words;d.length=r,this.convert13b(e.words,e.length,a,r),this.convert13b(t.words,t.length,u,r),this.transform(a,o,s,l,r,i),this.transform(u,o,c,f,r,i);for(var h=0;h<r;h++){var p=s[h]*c[h]-l[h]*f[h];l[h]=s[h]*f[h]+l[h]*c[h],s[h]=p}return this.conjugate(s,l,r),this.transform(s,l,d,o,r,i),this.conjugate(d,o,r),this.normalize13b(d,r),n.negative=e.negative^t.negative,n.length=e.length+t.length,n._strip()},o.prototype.mul=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},o.prototype.mulf=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),b(this,e,t)},o.prototype.imul=function(e){return this.clone().mulTo(e,this)},o.prototype.imuln=function(e){var t=e<0;t&&(e=-e),r("number"===typeof e),r(e<67108864);for(var n=0,i=0;i<this.length;i++){var o=(0|this.words[i])*e,a=(67108863&o)+(67108863&n);n>>=26,n+=o/67108864|0,n+=a>>>26,this.words[i]=67108863&a}return 0!==n&&(this.words[i]=n,this.length++),t?this.ineg():this},o.prototype.muln=function(e){return this.clone().imuln(e)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),n=0;n<t.length;n++){var r=n/26|0,i=n%26;t[n]=e.words[r]>>>i&1}return t}(e);if(0===t.length)return new o(1);for(var n=this,r=0;r<t.length&&0===t[r];r++,n=n.sqr());if(++r<t.length)for(var i=n.sqr();r<t.length;r++,i=i.sqr())0!==t[r]&&(n=n.mul(i));return n},o.prototype.iushln=function(e){r("number"===typeof e&&e>=0);var t,n=e%26,i=(e-n)/26,o=67108863>>>26-n<<26-n;if(0!==n){var a=0;for(t=0;t<this.length;t++){var s=this.words[t]&o,l=(0|this.words[t])-s<<n;this.words[t]=l|a,a=s>>>26-n}a&&(this.words[t]=a,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this._strip()},o.prototype.ishln=function(e){return r(0===this.negative),this.iushln(e)},o.prototype.iushrn=function(e,t,n){var i;r("number"===typeof e&&e>=0),i=t?(t-t%26)/26:0;var o=e%26,a=Math.min((e-o)/26,this.length),s=67108863^67108863>>>o<<o,l=n;if(i-=a,i=Math.max(0,i),l){for(var u=0;u<a;u++)l.words[u]=this.words[u];l.length=a}if(0===a);else if(this.length>a)for(this.length-=a,u=0;u<this.length;u++)this.words[u]=this.words[u+a];else this.words[0]=0,this.length=1;var c=0;for(u=this.length-1;u>=0&&(0!==c||u>=i);u--){var f=0|this.words[u];this.words[u]=c<<26-o|f>>>o,c=f&s}return l&&0!==c&&(l.words[l.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},o.prototype.ishrn=function(e,t,n){return r(0===this.negative),this.iushrn(e,t,n)},o.prototype.shln=function(e){return this.clone().ishln(e)},o.prototype.ushln=function(e){return this.clone().iushln(e)},o.prototype.shrn=function(e){return this.clone().ishrn(e)},o.prototype.ushrn=function(e){return this.clone().iushrn(e)},o.prototype.testn=function(e){r("number"===typeof e&&e>=0);var t=e%26,n=(e-t)/26,i=1<<t;return!(this.length<=n)&&!!(this.words[n]&i)},o.prototype.imaskn=function(e){r("number"===typeof e&&e>=0);var t=e%26,n=(e-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==t&&n++,this.length=Math.min(n,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this._strip()},o.prototype.maskn=function(e){return this.clone().imaskn(e)},o.prototype.iaddn=function(e){return r("number"===typeof e),r(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},o.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},o.prototype.isubn=function(e){if(r("number"===typeof e),r(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},o.prototype.addn=function(e){return this.clone().iaddn(e)},o.prototype.subn=function(e){return this.clone().isubn(e)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(e,t,n){var i,o,a=e.length+n;this._expand(a);var s=0;for(i=0;i<e.length;i++){o=(0|this.words[i+n])+s;var l=(0|e.words[i])*t;s=((o-=67108863&l)>>26)-(l/67108864|0),this.words[i+n]=67108863&o}for(;i<this.length-n;i++)s=(o=(0|this.words[i+n])+s)>>26,this.words[i+n]=67108863&o;if(0===s)return this._strip();for(r(-1===s),s=0,i=0;i<this.length;i++)s=(o=-(0|this.words[i])+s)>>26,this.words[i]=67108863&o;return this.negative=1,this._strip()},o.prototype._wordDiv=function(e,t){var n=(this.length,e.length),r=this.clone(),i=e,a=0|i.words[i.length-1];0!==(n=26-this._countBits(a))&&(i=i.ushln(n),r.iushln(n),a=0|i.words[i.length-1]);var s,l=r.length-i.length;if("mod"!==t){(s=new o(null)).length=l+1,s.words=new Array(s.length);for(var u=0;u<s.length;u++)s.words[u]=0}var c=r.clone()._ishlnsubmul(i,1,l);0===c.negative&&(r=c,s&&(s.words[l]=1));for(var f=l-1;f>=0;f--){var d=67108864*(0|r.words[i.length+f])+(0|r.words[i.length+f-1]);for(d=Math.min(d/a|0,67108863),r._ishlnsubmul(i,d,f);0!==r.negative;)d--,r.negative=0,r._ishlnsubmul(i,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=d)}return s&&s._strip(),r._strip(),"div"!==t&&0!==n&&r.iushrn(n),{div:s||null,mod:r}},o.prototype.divmod=function(e,t,n){return r(!e.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===e.negative?(s=this.neg().divmod(e,t),"mod"!==t&&(i=s.div.neg()),"div"!==t&&(a=s.mod.neg(),n&&0!==a.negative&&a.iadd(e)),{div:i,mod:a}):0===this.negative&&0!==e.negative?(s=this.divmod(e.neg(),t),"mod"!==t&&(i=s.div.neg()),{div:i,mod:s.mod}):0!==(this.negative&e.negative)?(s=this.neg().divmod(e.neg(),t),"div"!==t&&(a=s.mod.neg(),n&&0!==a.negative&&a.isub(e)),{div:s.div,mod:a}):e.length>this.length||this.cmp(e)<0?{div:new o(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new o(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new o(this.modrn(e.words[0]))}:this._wordDiv(e,t);var i,a,s},o.prototype.div=function(e){return this.divmod(e,"div",!1).div},o.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},o.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},o.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var n=0!==t.div.negative?t.mod.isub(e):t.mod,r=e.ushrn(1),i=e.andln(1),o=n.cmp(r);return o<0||1===i&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},o.prototype.modrn=function(e){var t=e<0;t&&(e=-e),r(e<=67108863);for(var n=(1<<26)%e,i=0,o=this.length-1;o>=0;o--)i=(n*i+(0|this.words[o]))%e;return t?-i:i},o.prototype.modn=function(e){return this.modrn(e)},o.prototype.idivn=function(e){var t=e<0;t&&(e=-e),r(e<=67108863);for(var n=0,i=this.length-1;i>=0;i--){var o=(0|this.words[i])+67108864*n;this.words[i]=o/e|0,n=o%e}return this._strip(),t?this.ineg():this},o.prototype.divn=function(e){return this.clone().idivn(e)},o.prototype.egcd=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new o(1),a=new o(0),s=new o(0),l=new o(1),u=0;t.isEven()&&n.isEven();)t.iushrn(1),n.iushrn(1),++u;for(var c=n.clone(),f=t.clone();!t.isZero();){for(var d=0,h=1;0===(t.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(i.isOdd()||a.isOdd())&&(i.iadd(c),a.isub(f)),i.iushrn(1),a.iushrn(1);for(var p=0,m=1;0===(n.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(n.iushrn(p);p-- >0;)(s.isOdd()||l.isOdd())&&(s.iadd(c),l.isub(f)),s.iushrn(1),l.iushrn(1);t.cmp(n)>=0?(t.isub(n),i.isub(s),a.isub(l)):(n.isub(t),s.isub(i),l.isub(a))}return{a:s,b:l,gcd:n.iushln(u)}},o.prototype._invmp=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i,a=new o(1),s=new o(0),l=n.clone();t.cmpn(1)>0&&n.cmpn(1)>0;){for(var u=0,c=1;0===(t.words[0]&c)&&u<26;++u,c<<=1);if(u>0)for(t.iushrn(u);u-- >0;)a.isOdd()&&a.iadd(l),a.iushrn(1);for(var f=0,d=1;0===(n.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(n.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(l),s.iushrn(1);t.cmp(n)>=0?(t.isub(n),a.isub(s)):(n.isub(t),s.isub(a))}return(i=0===t.cmpn(1)?a:s).cmpn(0)<0&&i.iadd(e),i},o.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),n=e.clone();t.negative=0,n.negative=0;for(var r=0;t.isEven()&&n.isEven();r++)t.iushrn(1),n.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;n.isEven();)n.iushrn(1);var i=t.cmp(n);if(i<0){var o=t;t=n,n=o}else if(0===i||0===n.cmpn(1))break;t.isub(n)}return n.iushln(r)},o.prototype.invm=function(e){return this.egcd(e).a.umod(e)},o.prototype.isEven=function(){return 0===(1&this.words[0])},o.prototype.isOdd=function(){return 1===(1&this.words[0])},o.prototype.andln=function(e){return this.words[0]&e},o.prototype.bincn=function(e){r("number"===typeof e);var t=e%26,n=(e-t)/26,i=1<<t;if(this.length<=n)return this._expand(n+1),this.words[n]|=i,this;for(var o=i,a=n;0!==o&&a<this.length;a++){var s=0|this.words[a];o=(s+=o)>>>26,s&=67108863,this.words[a]=s}return 0!==o&&(this.words[a]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(e){var t,n=e<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this._strip(),this.length>1)t=1;else{n&&(e=-e),r(e<=67108863,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},o.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},o.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,n=this.length-1;n>=0;n--){var r=0|this.words[n],i=0|e.words[n];if(r!==i){r<i?t=-1:r>i&&(t=1);break}}return t},o.prototype.gtn=function(e){return 1===this.cmpn(e)},o.prototype.gt=function(e){return 1===this.cmp(e)},o.prototype.gten=function(e){return this.cmpn(e)>=0},o.prototype.gte=function(e){return this.cmp(e)>=0},o.prototype.ltn=function(e){return-1===this.cmpn(e)},o.prototype.lt=function(e){return-1===this.cmp(e)},o.prototype.lten=function(e){return this.cmpn(e)<=0},o.prototype.lte=function(e){return this.cmp(e)<=0},o.prototype.eqn=function(e){return 0===this.cmpn(e)},o.prototype.eq=function(e){return 0===this.cmp(e)},o.red=function(e){return new N(e)},o.prototype.toRed=function(e){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},o.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(e){return this.red=e,this},o.prototype.forceRed=function(e){return r(!this.red,"Already a number in reduction context"),this._forceRed(e)},o.prototype.redAdd=function(e){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},o.prototype.redIAdd=function(e){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},o.prototype.redSub=function(e){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},o.prototype.redISub=function(e){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},o.prototype.redShl=function(e){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},o.prototype.redMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},o.prototype.redIMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},o.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(e){return r(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var w={k256:null,p224:null,p192:null,p25519:null};function x(e,t){this.name=e,this.p=new o(t,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function P(){x.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function k(){x.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function z(){x.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function M(){x.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(e){if("string"===typeof e){var t=o._prime(e);this.m=t.p,this.prime=t}else r(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function O(e){N.call(this,e),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}x.prototype._tmp=function(){var e=new o(null);return e.words=new Array(Math.ceil(this.n/13)),e},x.prototype.ireduce=function(e){var t,n=e;do{this.split(n,this.tmp),t=(n=(n=this.imulK(n)).iadd(this.tmp)).bitLength()}while(t>this.n);var r=t<this.n?-1:n.ucmp(this.p);return 0===r?(n.words[0]=0,n.length=1):r>0?n.isub(this.p):void 0!==n.strip?n.strip():n._strip(),n},x.prototype.split=function(e,t){e.iushrn(this.n,0,t)},x.prototype.imulK=function(e){return e.imul(this.k)},i(P,x),P.prototype.split=function(e,t){for(var n=4194303,r=Math.min(e.length,9),i=0;i<r;i++)t.words[i]=e.words[i];if(t.length=r,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&n,i=10;i<e.length;i++){var a=0|e.words[i];e.words[i-10]=(a&n)<<4|o>>>22,o=a}o>>>=22,e.words[i-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9},P.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,n=0;n<e.length;n++){var r=0|e.words[n];t+=977*r,e.words[n]=67108863&t,t=64*r+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(k,x),i(z,x),i(M,x),M.prototype.imulK=function(e){for(var t=0,n=0;n<e.length;n++){var r=19*(0|e.words[n])+t,i=67108863&r;r>>>=26,e.words[n]=i,t=r}return 0!==t&&(e.words[e.length++]=t),e},o._prime=function(e){if(w[e])return w[e];var t;if("k256"===e)t=new P;else if("p224"===e)t=new k;else if("p192"===e)t=new z;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new M}return w[e]=t,t},N.prototype._verify1=function(e){r(0===e.negative,"red works only with positives"),r(e.red,"red works only with red numbers")},N.prototype._verify2=function(e,t){r(0===(e.negative|t.negative),"red works only with positives"),r(e.red&&e.red===t.red,"red works only with red numbers")},N.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(c(e,e.umod(this.m)._forceRed(this)),e)},N.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},N.prototype.add=function(e,t){this._verify2(e,t);var n=e.add(t);return n.cmp(this.m)>=0&&n.isub(this.m),n._forceRed(this)},N.prototype.iadd=function(e,t){this._verify2(e,t);var n=e.iadd(t);return n.cmp(this.m)>=0&&n.isub(this.m),n},N.prototype.sub=function(e,t){this._verify2(e,t);var n=e.sub(t);return n.cmpn(0)<0&&n.iadd(this.m),n._forceRed(this)},N.prototype.isub=function(e,t){this._verify2(e,t);var n=e.isub(t);return n.cmpn(0)<0&&n.iadd(this.m),n},N.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},N.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},N.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},N.prototype.isqr=function(e){return this.imul(e,e.clone())},N.prototype.sqr=function(e){return this.mul(e,e)},N.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(r(t%2===1),3===t){var n=this.m.add(new o(1)).iushrn(2);return this.pow(e,n)}for(var i=this.m.subn(1),a=0;!i.isZero()&&0===i.andln(1);)a++,i.iushrn(1);r(!i.isZero());var s=new o(1).toRed(this),l=s.redNeg(),u=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new o(2*c*c).toRed(this);0!==this.pow(c,u).cmp(l);)c.redIAdd(l);for(var f=this.pow(c,i),d=this.pow(e,i.addn(1).iushrn(1)),h=this.pow(e,i),p=a;0!==h.cmp(s);){for(var m=h,y=0;0!==m.cmp(s);y++)m=m.redSqr();r(y<p);var v=this.pow(f,new o(1).iushln(p-y-1));d=d.redMul(v),f=v.redSqr(),h=h.redMul(f),p=y}return d},N.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},N.prototype.pow=function(e,t){if(t.isZero())return new o(1).toRed(this);if(0===t.cmpn(1))return e.clone();var n=new Array(16);n[0]=new o(1).toRed(this),n[1]=e;for(var r=2;r<n.length;r++)n[r]=this.mul(n[r-1],e);var i=n[0],a=0,s=0,l=t.bitLength()%26;for(0===l&&(l=26),r=t.length-1;r>=0;r--){for(var u=t.words[r],c=l-1;c>=0;c--){var f=u>>c&1;i!==n[0]&&(i=this.sqr(i)),0!==f||0!==a?(a<<=1,a|=f,(4===++s||0===r&&0===c)&&(i=this.mul(i,n[a]),s=0,a=0)):s=0}l=26}return i},N.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},N.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},o.mont=function(e){return new O(e)},i(O,N),O.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},O.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},O.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var n=e.imul(t),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},O.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new o(0)._forceRed(this);var n=e.mul(t),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),a=i;return i.cmp(this.m)>=0?a=i.isub(this.m):i.cmpn(0)<0&&(a=i.iadd(this.m)),a._forceRed(this)},O.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e=n.nmd(e),this)},694:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var o=typeof n;if("string"===o||"number"===o)e.push(n);else if(Array.isArray(n)){if(n.length){var a=i.apply(null,n);a&&e.push(a)}}else if("object"===o)if(n.toString===Object.prototype.toString)for(var s in n)r.call(n,s)&&n[s]&&e.push(s);else e.push(n.toString())}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n)}()},686:function(e,t,n){!function(t,r){"use strict";e.exports?e.exports=r(n(826)):t.ed2curve=r(t.nacl)}(this,(function(e){"use strict";if(!e)throw new Error("tweetnacl not loaded");var t=function(e){var t,n=new Float64Array(16);if(e)for(t=0;t<e.length;t++)n[t]=e[t];return n},n=t(),r=t([1]),i=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),o=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function a(e){var t,n;for(n=0;n<16;n++)e[n]+=65536,t=Math.floor(e[n]/65536),e[(n+1)*(n<15?1:0)]+=t-1+37*(t-1)*(15===n?1:0),e[n]-=65536*t}function s(e,t,n){for(var r,i=~(n-1),o=0;o<16;o++)r=i&(e[o]^t[o]),e[o]^=r,t[o]^=r}function l(e,t,n){var r;for(r=0;r<16;r++)e[r]=t[r]+n[r]|0}function u(e,t,n){var r;for(r=0;r<16;r++)e[r]=t[r]-n[r]|0}function c(e,t,n){var r,i,o=new Float64Array(31);for(r=0;r<31;r++)o[r]=0;for(r=0;r<16;r++)for(i=0;i<16;i++)o[r+i]+=t[r]*n[i];for(r=0;r<15;r++)o[r]+=38*o[r+16];for(r=0;r<16;r++)e[r]=o[r];a(e),a(e)}function f(e,t){c(e,t,t)}function d(e,n){var r,i,o,l=t(),u=t();for(r=0;r<16;r++)u[r]=n[r];for(a(u),a(u),a(u),i=0;i<2;i++){for(l[0]=u[0]-65517,r=1;r<15;r++)l[r]=u[r]-65535-(l[r-1]>>16&1),l[r-1]&=65535;l[15]=u[15]-32767-(l[14]>>16&1),o=l[15]>>16&1,l[14]&=65535,s(u,l,1-o)}for(r=0;r<16;r++)e[2*r]=255&u[r],e[2*r+1]=u[r]>>8}function h(e,t){var n=new Uint8Array(32),r=new Uint8Array(32);return d(n,e),d(r,t),function(e,t,n,r,i){var o,a=0;for(o=0;o<i;o++)a|=e[t+o]^n[r+o];return(1&a-1>>>8)-1}(n,0,r,0,32)}function p(e,a){var s=t(),p=t(),m=t(),y=t(),v=t(),b=t(),g=t();return function(e,t){var n;for(n=0;n<16;n++)e[n]=0|t[n]}(e[2],r),function(e,t){var n;for(n=0;n<16;n++)e[n]=t[2*n]+(t[2*n+1]<<8);e[15]&=32767}(e[1],a),f(m,e[1]),c(y,m,i),u(m,m,e[2]),l(y,e[2],y),f(v,y),f(b,v),c(g,b,v),c(s,g,m),c(s,s,y),function(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=250;r>=0;r--)f(i,i),1!==r&&c(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}(s,s),c(s,s,m),c(s,s,y),c(s,s,y),c(e[0],s,y),f(p,e[0]),c(p,p,y),h(p,m)&&c(e[0],e[0],o),f(p,e[0]),c(p,p,y),h(p,m)?-1:(function(e){var t=new Uint8Array(32);return d(t,e),1&t[0]}(e[0])===a[31]>>7&&u(e[0],n,e[0]),c(e[3],e[0],e[1]),0)}function m(e){var n=new Uint8Array(32),i=[t(),t(),t(),t()],o=t(),a=t();if(p(i,e))return null;var s=i[1];return l(o,r,s),u(a,r,s),function(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=253;r>=0;r--)f(i,i),2!==r&&4!==r&&c(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}(a,a),c(o,o,a),d(n,o),n}function y(t){var n,r=new Uint8Array(64),i=new Uint8Array(32);for(e.lowlevel.crypto_hash(r,t,32),r[0]&=248,r[31]&=127,r[31]|=64,n=0;n<32;n++)i[n]=r[n];for(n=0;n<64;n++)r[n]=0;return i}return{convertPublicKey:m,convertSecretKey:y,convertKeyPair:function(e){var t=m(e.publicKey);return t?{publicKey:t,secretKey:y(e.secretKey)}:null}}}))},176:e=>{"use strict";e.exports=function(e,t,n,r,i,o,a,s){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,i,o,a,s],c=0;(l=new Error(t.replace(/%s/g,(function(){return u[c++]})))).name="Invariant Violation"}throw l.framesToPop=1,l}}},725:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(i){return!1}}()?Object.assign:function(e,o){for(var a,s,l=i(e),u=1;u<arguments.length;u++){for(var c in a=Object(arguments[u]))n.call(a,c)&&(l[c]=a[c]);if(t){s=t(a);for(var f=0;f<s.length;f++)r.call(a,s[f])&&(l[s[f]]=a[s[f]])}}return l}},573:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];function r(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];var i=null;return t.forEach((function(e){if(null==i){var t=e.apply(void 0,n);null!=t&&(i=t)}})),i}return(0,o.default)(r)};var r,i=n(54),o=(r=i)&&r.__esModule?r:{default:r};e.exports=t.default},54:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){function t(t,n,r,i,o,a){var s=i||"<<anonymous>>",l=a||r;if(null==n[r])return t?new Error("Required "+o+" `"+l+"` was not specified in `"+s+"`."):null;for(var u=arguments.length,c=Array(u>6?u-6:0),f=6;f<u;f++)c[f-6]=arguments[f];return e.apply(void 0,[n,r,s,o,l].concat(c))}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n},e.exports=t.default},888:(e,t,n)=>{"use strict";var r=n(47);function i(){}function o(){}o.resetWarningCache=i,e.exports=function(){function e(e,t,n,i,o,a){if(a!==r){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:i};return n.PropTypes=n,n}},7:(e,t,n)=>{e.exports=n(888)()},47:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},463:(e,t,n)=>{"use strict";var r=n(791),i=n(725),o=n(296);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var s=new Set,l={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(l[e]=t,e=0;e<t.length;e++)s.add(t[e])}var f=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h=Object.prototype.hasOwnProperty,p={},m={};function y(e,t,n,r,i,o,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=a}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new y(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new y(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new y(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new y(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new y(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new y(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new y(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new y(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new y(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function g(e){return e[1].toUpperCase()}function w(e,t,n,r){var i=v.hasOwnProperty(t)?v[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!h.call(m,e)||!h.call(p,e)&&(d.test(e)?m[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,g);v[t]=new y(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,g);v[t]=new y(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,g);v[t]=new y(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new y(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new y(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,P=60103,k=60106,z=60107,M=60108,N=60114,O=60109,T=60110,j=60112,L=60113,E=60120,H=60115,X=60116,A=60121,S=60128,Z=60129,D=60130,R=60131;if("function"===typeof Symbol&&Symbol.for){var U=Symbol.for;P=U("react.element"),k=U("react.portal"),z=U("react.fragment"),M=U("react.strict_mode"),N=U("react.profiler"),O=U("react.provider"),T=U("react.context"),j=U("react.forward_ref"),L=U("react.suspense"),E=U("react.suspense_list"),H=U("react.memo"),X=U("react.lazy"),A=U("react.block"),U("react.scope"),S=U("react.opaque.id"),Z=U("react.debug_trace_mode"),D=U("react.offscreen"),R=U("react.legacy_hidden")}var F,W="function"===typeof Symbol&&Symbol.iterator;function C(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=W&&e[W]||e["@@iterator"])?e:null}function q(e){if(void 0===F)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);F=t&&t[1]||""}return"\n"+F+e}var I=!1;function B(e,t){if(!e||I)return"";I=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var r=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){r=l}e.call(t.prototype)}else{try{throw Error()}catch(l){r=l}e()}}catch(l){if(l&&r&&"string"===typeof l.stack){for(var i=l.stack.split("\n"),o=r.stack.split("\n"),a=i.length-1,s=o.length-1;1<=a&&0<=s&&i[a]!==o[s];)s--;for(;1<=a&&0<=s;a--,s--)if(i[a]!==o[s]){if(1!==a||1!==s)do{if(a--,0>--s||i[a]!==o[s])return"\n"+i[a].replace(" at new "," at ")}while(1<=a&&0<=s);break}}}finally{I=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?q(e):""}function Y(e){switch(e.tag){case 5:return q(e.type);case 16:return q("Lazy");case 13:return q("Suspense");case 19:return q("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 22:return e=B(e.type._render,!1);case 1:return e=B(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case z:return"Fragment";case k:return"Portal";case N:return"Profiler";case M:return"StrictMode";case L:return"Suspense";case E:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case O:return(e._context.displayName||"Context")+".Provider";case j:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case H:return V(e.type);case A:return V(e._render);case X:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function G(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function J(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=K(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function _(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function $(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=G(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=G(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ie(e,t.type,n):t.hasOwnProperty("defaultValue")&&ie(e,t.type,G(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ie(e,t,n){"number"===t&&_(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ae(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+G(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function se(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:G(n)}}function ue(e,t){var n=G(t.value),r=G(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function he(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?he(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,ye,ve=(ye=function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ye(e,t)}))}:ye);function be(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},we=["Webkit","ms","Moz","O"];function xe(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function Pe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=xe(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(ge).forEach((function(e){we.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var ke=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ze(e,t){if(t){if(ke[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(a(62))}}function Me(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ne(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Oe=null,Te=null,je=null;function Le(e){if(e=ri(e)){if("function"!==typeof Oe)throw Error(a(280));var t=e.stateNode;t&&(t=oi(t),Oe(e.stateNode,e.type,t))}}function Ee(e){Te?je?je.push(e):je=[e]:Te=e}function He(){if(Te){var e=Te,t=je;if(je=Te=null,Le(e),t)for(e=0;e<t.length;e++)Le(t[e])}}function Xe(e,t){return e(t)}function Ae(e,t,n,r,i){return e(t,n,r,i)}function Se(){}var Ze=Xe,De=!1,Re=!1;function Ue(){null===Te&&null===je||(Se(),He())}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=oi(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(a(231,t,typeof n));return n}var We=!1;if(f)try{var Ce={};Object.defineProperty(Ce,"passive",{get:function(){We=!0}}),window.addEventListener("test",Ce,Ce),window.removeEventListener("test",Ce,Ce)}catch(ye){We=!1}function qe(e,t,n,r,i,o,a,s,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Ie=!1,Be=null,Ye=!1,Ve=null,Ge={onError:function(e){Ie=!0,Be=e}};function Ke(e,t,n,r,i,o,a,s,l){Ie=!1,Be=null,qe.apply(Ge,arguments)}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Qe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function _e(e){if(Je(e)!==e)throw Error(a(188))}function $e(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(r=i.return)){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return _e(i),e;if(o===r)return _e(i),t;o=o.sibling}throw Error(a(188))}if(n.return!==r.return)n=i,r=o;else{for(var s=!1,l=i.child;l;){if(l===n){s=!0,n=i,r=o;break}if(l===r){s=!0,r=i,n=o;break}l=l.sibling}if(!s){for(l=o.child;l;){if(l===n){s=!0,n=o,r=i;break}if(l===r){s=!0,r=o,n=i;break}l=l.sibling}if(!s)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var tt,nt,rt,it,ot=!1,at=[],st=null,lt=null,ut=null,ct=new Map,ft=new Map,dt=[],ht="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,i){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:i,targetContainers:[r]}}function mt(e,t){switch(e){case"focusin":case"focusout":st=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ft.delete(t.pointerId)}}function yt(e,t,n,r,i,o){return null===e||e.nativeEvent!==o?(e=pt(t,n,r,i,o),null!==t&&(null!==(t=ri(t))&&nt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==i&&-1===t.indexOf(i)&&t.push(i),e)}function vt(e){var t=ni(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Qe(n)))return e.blockedOn=t,void it(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){rt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function bt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ri(n))&&nt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){bt(e)&&n.delete(t)}function wt(){for(ot=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=ri(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==st&&bt(st)&&(st=null),null!==lt&&bt(lt)&&(lt=null),null!==ut&&bt(ut)&&(ut=null),ct.forEach(gt),ft.forEach(gt)}function xt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,wt)))}function Pt(e){function t(t){return xt(t,e)}if(0<at.length){xt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==st&&xt(st,e),null!==lt&&xt(lt,e),null!==ut&&xt(ut,e),ct.forEach(t),ft.forEach(t),n=0;n<dt.length;n++)(r=dt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<dt.length&&null===(n=dt[0]).blockedOn;)vt(n),null===n.blockedOn&&dt.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var zt={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},Mt={},Nt={};function Ot(e){if(Mt[e])return Mt[e];if(!zt[e])return e;var t,n=zt[e];for(t in n)if(n.hasOwnProperty(t)&&t in Nt)return Mt[e]=n[t];return e}f&&(Nt=document.createElement("div").style,"AnimationEvent"in window||(delete zt.animationend.animation,delete zt.animationiteration.animation,delete zt.animationstart.animation),"TransitionEvent"in window||delete zt.transitionend.transition);var Tt=Ot("animationend"),jt=Ot("animationiteration"),Lt=Ot("animationstart"),Et=Ot("transitionend"),Ht=new Map,Xt=new Map,At=["abort","abort",Tt,"animationEnd",jt,"animationIteration",Lt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Et,"transitionEnd","waiting","waiting"];function St(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1];i="on"+(i[0].toUpperCase()+i.slice(1)),Xt.set(r,t),Ht.set(r,i),u(i,[r])}}(0,o.unstable_now)();var Zt=8;function Dt(e){if(0!==(1&e))return Zt=15,1;if(0!==(2&e))return Zt=14,2;if(0!==(4&e))return Zt=13,4;var t=24&e;return 0!==t?(Zt=12,t):0!==(32&e)?(Zt=11,32):0!==(t=192&e)?(Zt=10,t):0!==(256&e)?(Zt=9,256):0!==(t=3584&e)?(Zt=8,t):0!==(4096&e)?(Zt=7,4096):0!==(t=4186112&e)?(Zt=6,t):0!==(t=62914560&e)?(Zt=5,t):67108864&e?(Zt=4,67108864):0!==(134217728&e)?(Zt=3,134217728):0!==(t=805306368&e)?(Zt=2,t):0!==(1073741824&e)?(Zt=1,1073741824):(Zt=8,e)}function Rt(e,t){var n=e.pendingLanes;if(0===n)return Zt=0;var r=0,i=0,o=e.expiredLanes,a=e.suspendedLanes,s=e.pingedLanes;if(0!==o)r=o,i=Zt=15;else if(0!==(o=134217727&n)){var l=o&~a;0!==l?(r=Dt(l),i=Zt):0!==(s&=o)&&(r=Dt(s),i=Zt)}else 0!==(o=n&~a)?(r=Dt(o),i=Zt):0!==s&&(r=Dt(s),i=Zt);if(0===r)return 0;if(r=n&((0>(r=31-It(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0===(t&a)){if(Dt(t),i<=Zt)return t;Zt=i}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)i=1<<(n=31-It(t)),r|=e[n],t&=~i;return r}function Ut(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Wt(24&~t))?Ft(10,t):e;case 10:return 0===(e=Wt(192&~t))?Ft(8,t):e;case 8:return 0===(e=Wt(3584&~t))&&(0===(e=Wt(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Wt(805306368&~t))&&(t=268435456),t}throw Error(a(358,e))}function Wt(e){return e&-e}function Ct(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function qt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-It(t)]=n}var It=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Bt(e)/Yt|0)|0},Bt=Math.log,Yt=Math.LN2;var Vt=o.unstable_UserBlockingPriority,Gt=o.unstable_runWithPriority,Kt=!0;function Jt(e,t,n,r){De||Se();var i=_t,o=De;De=!0;try{Ae(i,e,t,n,r)}finally{(De=o)||Ue()}}function Qt(e,t,n,r){Gt(Vt,_t.bind(null,e,t,n,r))}function _t(e,t,n,r){var i;if(Kt)if((i=0===(4&t))&&0<at.length&&-1<ht.indexOf(e))e=pt(null,e,t,n,r),at.push(e);else{var o=$t(e,t,n,r);if(null===o)i&&mt(e,r);else{if(i){if(-1<ht.indexOf(e))return e=pt(o,e,t,n,r),void at.push(e);if(function(e,t,n,r,i){switch(t){case"focusin":return st=yt(st,e,t,n,r,i),!0;case"dragenter":return lt=yt(lt,e,t,n,r,i),!0;case"mouseover":return ut=yt(ut,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return ct.set(o,yt(ct.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,ft.set(o,yt(ft.get(o)||null,e,t,n,r,i)),!0}return!1}(o,e,t,n,r))return;mt(e,r)}Sr(e,t,r,null,n)}}}function $t(e,t,n,r){var i=Ne(r);if(null!==(i=ni(i))){var o=Je(i);if(null===o)i=null;else{var a=o.tag;if(13===a){if(null!==(i=Qe(o)))return i;i=null}else if(3===a){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;i=null}else o!==i&&(i=null)}}return Sr(e,t,r,i,n),null}var en=null,tn=null,nn=null;function rn(){if(nn)return nn;var e,t,n=tn,r=n.length,i="value"in en?en.value:en.textContent,o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===i[o-t];t++);return nn=i.slice(e,1<t?1-t:void 0)}function on(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function sn(){return!1}function ln(e){function t(t,n,r,i,o){for(var a in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=i,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(a)&&(t=e[a],this[a]=t?t(i):i[a]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?an:sn,this.isPropagationStopped=sn,this}return i(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,cn,fn,dn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},hn=ln(dn),pn=i({},dn,{view:0,detail:0}),mn=ln(pn),yn=i({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==fn&&(fn&&"mousemove"===e.type?(un=e.screenX-fn.screenX,cn=e.screenY-fn.screenY):cn=un=0,fn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),vn=ln(yn),bn=ln(i({},yn,{dataTransfer:0})),gn=ln(i({},pn,{relatedTarget:0})),wn=ln(i({},dn,{animationName:0,elapsedTime:0,pseudoElement:0})),xn=i({},dn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Pn=ln(xn),kn=ln(i({},dn,{data:0})),zn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Mn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Nn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function On(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nn[e])&&!!t[e]}function Tn(){return On}var jn=i({},pn,{key:function(e){if(e.key){var t=zn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=on(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Mn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tn,charCode:function(e){return"keypress"===e.type?on(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?on(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ln=ln(jn),En=ln(i({},yn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Hn=ln(i({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tn})),Xn=ln(i({},dn,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=i({},yn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Sn=ln(An),Zn=[9,13,27,32],Dn=f&&"CompositionEvent"in window,Rn=null;f&&"documentMode"in document&&(Rn=document.documentMode);var Un=f&&"TextEvent"in window&&!Rn,Fn=f&&(!Dn||Rn&&8<Rn&&11>=Rn),Wn=String.fromCharCode(32),Cn=!1;function qn(e,t){switch(e){case"keyup":return-1!==Zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function In(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Bn=!1;var Yn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Yn[e.type]:"textarea"===t}function Gn(e,t,n,r){Ee(r),0<(t=Dr(t,"onChange")).length&&(n=new hn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Kn=null,Jn=null;function Qn(e){jr(e,0)}function _n(e){if(Q(ii(e)))return e}function $n(e,t){if("change"===e)return t}var er=!1;if(f){var tr;if(f){var nr="oninput"in document;if(!nr){var rr=document.createElement("div");rr.setAttribute("oninput","return;"),nr="function"===typeof rr.oninput}tr=nr}else tr=!1;er=tr&&(!document.documentMode||9<document.documentMode)}function ir(){Kn&&(Kn.detachEvent("onpropertychange",or),Jn=Kn=null)}function or(e){if("value"===e.propertyName&&_n(Jn)){var t=[];if(Gn(t,Jn,e,Ne(e)),e=Qn,De)e(t);else{De=!0;try{Xe(e,t)}finally{De=!1,Ue()}}}}function ar(e,t,n){"focusin"===e?(ir(),Jn=n,(Kn=t).attachEvent("onpropertychange",or)):"focusout"===e&&ir()}function sr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return _n(Jn)}function lr(e,t){if("click"===e)return _n(t)}function ur(e,t){if("input"===e||"change"===e)return _n(t)}var cr="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},fr=Object.prototype.hasOwnProperty;function dr(e,t){if(cr(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!fr.call(t,n[r])||!cr(e[n[r]],t[n[r]]))return!1;return!0}function hr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pr(e,t){var n,r=hr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=hr(r)}}function mr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?mr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function yr(){for(var e=window,t=_();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=_((e=t.contentWindow).document)}return t}function vr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var br=f&&"documentMode"in document&&11>=document.documentMode,gr=null,wr=null,xr=null,Pr=!1;function kr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;Pr||null==gr||gr!==_(r)||("selectionStart"in(r=gr)&&vr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},xr&&dr(xr,r)||(xr=r,0<(r=Dr(wr,"onSelect")).length&&(t=new hn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}St("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),St("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),St(At,2);for(var zr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Mr=0;Mr<zr.length;Mr++)Xt.set(zr[Mr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Nr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Or=new Set("cancel close invalid load scroll toggle".split(" ").concat(Nr));function Tr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,i,o,s,l,u){if(Ke.apply(this,arguments),Ie){if(!Ie)throw Error(a(198));var c=Be;Ie=!1,Be=null,Ye||(Ye=!0,Ve=c)}}(r,t,void 0,e),e.currentTarget=null}function jr(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],i=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var a=r.length-1;0<=a;a--){var s=r[a],l=s.instance,u=s.currentTarget;if(s=s.listener,l!==o&&i.isPropagationStopped())break e;Tr(i,s,u),o=l}else for(a=0;a<r.length;a++){if(l=(s=r[a]).instance,u=s.currentTarget,s=s.listener,l!==o&&i.isPropagationStopped())break e;Tr(i,s,u),o=l}}}if(Ye)throw e=Ve,Ye=!1,Ve=null,e}function Lr(e,t){var n=ai(t),r=e+"__bubble";n.has(r)||(Ar(t,e,2,!1),n.add(r))}var Er="_reactListening"+Math.random().toString(36).slice(2);function Hr(e){e[Er]||(e[Er]=!0,s.forEach((function(t){Or.has(t)||Xr(t,!1,e,null),Xr(t,!0,e,null)})))}function Xr(e,t,n,r){var i=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Or.has(e)){if("scroll"!==e)return;i|=2,o=r}var a=ai(o),s=e+"__"+(t?"capture":"bubble");a.has(s)||(t&&(i|=4),Ar(o,e,i,t),a.add(s))}function Ar(e,t,n,r){var i=Xt.get(t);switch(void 0===i?2:i){case 0:i=Jt;break;case 1:i=Qt;break;default:i=_t}n=i.bind(null,t,n,e),i=void 0,!We||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(i=!0),r?void 0!==i?e.addEventListener(t,n,{capture:!0,passive:i}):e.addEventListener(t,n,!0):void 0!==i?e.addEventListener(t,n,{passive:i}):e.addEventListener(t,n,!1)}function Sr(e,t,n,r,i){var o=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var s=r.stateNode.containerInfo;if(s===i||8===s.nodeType&&s.parentNode===i)break;if(4===a)for(a=r.return;null!==a;){var l=a.tag;if((3===l||4===l)&&((l=a.stateNode.containerInfo)===i||8===l.nodeType&&l.parentNode===i))return;a=a.return}for(;null!==s;){if(null===(a=ni(s)))return;if(5===(l=a.tag)||6===l){r=o=a;continue e}s=s.parentNode}}r=r.return}!function(e,t,n){if(Re)return e(t,n);Re=!0;try{Ze(e,t,n)}finally{Re=!1,Ue()}}((function(){var r=o,i=Ne(n),a=[];e:{var s=Ht.get(e);if(void 0!==s){var l=hn,u=e;switch(e){case"keypress":if(0===on(n))break e;case"keydown":case"keyup":l=Ln;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=bn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Hn;break;case Tt:case jt:case Lt:l=wn;break;case Et:l=Xn;break;case"scroll":l=mn;break;case"wheel":l=Sn;break;case"copy":case"cut":case"paste":l=Pn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=En}var c=0!==(4&t),f=!c&&"scroll"===e,d=c?null!==s?s+"Capture":null:s;c=[];for(var h,p=r;null!==p;){var m=(h=p).stateNode;if(5===h.tag&&null!==m&&(h=m,null!==d&&(null!=(m=Fe(p,d))&&c.push(Zr(p,m,h)))),f)break;p=p.return}0<c.length&&(s=new l(s,u,null,n,i),a.push({event:s,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(u=n.relatedTarget||n.fromElement)||!ni(u)&&!u[ei])&&(l||s)&&(s=i.window===i?i:(s=i.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ni(u):null)&&(u!==(f=Je(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=vn,m="onMouseLeave",d="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(c=En,m="onPointerLeave",d="onPointerEnter",p="pointer"),f=null==l?s:ii(l),h=null==u?s:ii(u),(s=new c(m,p+"leave",l,n,i)).target=f,s.relatedTarget=h,m=null,ni(i)===r&&((c=new c(d,p+"enter",u,n,i)).target=h,c.relatedTarget=f,m=c),f=m,l&&u)e:{for(d=u,p=0,h=c=l;h;h=Rr(h))p++;for(h=0,m=d;m;m=Rr(m))h++;for(;0<p-h;)c=Rr(c),p--;for(;0<h-p;)d=Rr(d),h--;for(;p--;){if(c===d||null!==d&&c===d.alternate)break e;c=Rr(c),d=Rr(d)}c=null}else c=null;null!==l&&Ur(a,s,l,c,!1),null!==u&&null!==f&&Ur(a,f,u,c,!0)}if("select"===(l=(s=r?ii(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var y=$n;else if(Vn(s))if(er)y=ur;else{y=sr;var v=ar}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(y=lr);switch(y&&(y=y(e,r))?Gn(a,y,n,i):(v&&v(e,s,r),"focusout"===e&&(v=s._wrapperState)&&v.controlled&&"number"===s.type&&ie(s,"number",s.value)),v=r?ii(r):window,e){case"focusin":(Vn(v)||"true"===v.contentEditable)&&(gr=v,wr=r,xr=null);break;case"focusout":xr=wr=gr=null;break;case"mousedown":Pr=!0;break;case"contextmenu":case"mouseup":case"dragend":Pr=!1,kr(a,n,i);break;case"selectionchange":if(br)break;case"keydown":case"keyup":kr(a,n,i)}var b;if(Dn)e:{switch(e){case"compositionstart":var g="onCompositionStart";break e;case"compositionend":g="onCompositionEnd";break e;case"compositionupdate":g="onCompositionUpdate";break e}g=void 0}else Bn?qn(e,n)&&(g="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(g="onCompositionStart");g&&(Fn&&"ko"!==n.locale&&(Bn||"onCompositionStart"!==g?"onCompositionEnd"===g&&Bn&&(b=rn()):(tn="value"in(en=i)?en.value:en.textContent,Bn=!0)),0<(v=Dr(r,g)).length&&(g=new kn(g,e,null,n,i),a.push({event:g,listeners:v}),b?g.data=b:null!==(b=In(n))&&(g.data=b))),(b=Un?function(e,t){switch(e){case"compositionend":return In(t);case"keypress":return 32!==t.which?null:(Cn=!0,Wn);case"textInput":return(e=t.data)===Wn&&Cn?null:e;default:return null}}(e,n):function(e,t){if(Bn)return"compositionend"===e||!Dn&&qn(e,t)?(e=rn(),nn=tn=en=null,Bn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Dr(r,"onBeforeInput")).length&&(i=new kn("onBeforeInput","beforeinput",null,n,i),a.push({event:i,listeners:r}),i.data=b))}jr(a,t)}))}function Zr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Dr(e,t){for(var n=t+"Capture",r=[];null!==e;){var i=e,o=i.stateNode;5===i.tag&&null!==o&&(i=o,null!=(o=Fe(e,n))&&r.unshift(Zr(e,o,i)),null!=(o=Fe(e,t))&&r.push(Zr(e,o,i))),e=e.return}return r}function Rr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ur(e,t,n,r,i){for(var o=t._reactName,a=[];null!==n&&n!==r;){var s=n,l=s.alternate,u=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==u&&(s=u,i?null!=(l=Fe(n,o))&&a.unshift(Zr(n,l,s)):i||null!=(l=Fe(n,o))&&a.push(Zr(n,l,s))),n=n.return}0!==a.length&&e.push({event:t,listeners:a})}function Fr(){}var Wr=null,Cr=null;function qr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ir(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Br="function"===typeof setTimeout?setTimeout:void 0,Yr="function"===typeof clearTimeout?clearTimeout:void 0;function Vr(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Gr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Kr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Jr=0;var Qr=Math.random().toString(36).slice(2),_r="__reactFiber$"+Qr,$r="__reactProps$"+Qr,ei="__reactContainer$"+Qr,ti="__reactEvents$"+Qr;function ni(e){var t=e[_r];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ei]||n[_r]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Kr(e);null!==e;){if(n=e[_r])return n;e=Kr(e)}return t}n=(e=n).parentNode}return null}function ri(e){return!(e=e[_r]||e[ei])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ii(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function oi(e){return e[$r]||null}function ai(e){var t=e[ti];return void 0===t&&(t=e[ti]=new Set),t}var si=[],li=-1;function ui(e){return{current:e}}function ci(e){0>li||(e.current=si[li],si[li]=null,li--)}function fi(e,t){li++,si[li]=e.current,e.current=t}var di={},hi=ui(di),pi=ui(!1),mi=di;function yi(e,t){var n=e.type.contextTypes;if(!n)return di;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function vi(e){return null!==(e=e.childContextTypes)&&void 0!==e}function bi(){ci(pi),ci(hi)}function gi(e,t,n){if(hi.current!==di)throw Error(a(168));fi(hi,t),fi(pi,n)}function wi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(a(108,V(t)||"Unknown",o));return i({},n,r)}function xi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||di,mi=hi.current,fi(hi,e),fi(pi,pi.current),!0}function Pi(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=wi(e,t,mi),r.__reactInternalMemoizedMergedChildContext=e,ci(pi),ci(hi),fi(hi,e)):ci(pi),fi(pi,n)}var ki=null,zi=null,Mi=o.unstable_runWithPriority,Ni=o.unstable_scheduleCallback,Oi=o.unstable_cancelCallback,Ti=o.unstable_shouldYield,ji=o.unstable_requestPaint,Li=o.unstable_now,Ei=o.unstable_getCurrentPriorityLevel,Hi=o.unstable_ImmediatePriority,Xi=o.unstable_UserBlockingPriority,Ai=o.unstable_NormalPriority,Si=o.unstable_LowPriority,Zi=o.unstable_IdlePriority,Di={},Ri=void 0!==ji?ji:function(){},Ui=null,Fi=null,Wi=!1,Ci=Li(),qi=1e4>Ci?Li:function(){return Li()-Ci};function Ii(){switch(Ei()){case Hi:return 99;case Xi:return 98;case Ai:return 97;case Si:return 96;case Zi:return 95;default:throw Error(a(332))}}function Bi(e){switch(e){case 99:return Hi;case 98:return Xi;case 97:return Ai;case 96:return Si;case 95:return Zi;default:throw Error(a(332))}}function Yi(e,t){return e=Bi(e),Mi(e,t)}function Vi(e,t,n){return e=Bi(e),Ni(e,t,n)}function Gi(){if(null!==Fi){var e=Fi;Fi=null,Oi(e)}Ki()}function Ki(){if(!Wi&&null!==Ui){Wi=!0;var e=0;try{var t=Ui;Yi(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ui=null}catch(n){throw null!==Ui&&(Ui=Ui.slice(e+1)),Ni(Hi,Gi),n}finally{Wi=!1}}}var Ji=x.ReactCurrentBatchConfig;function Qi(e,t){if(e&&e.defaultProps){for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var _i=ui(null),$i=null,eo=null,to=null;function no(){to=eo=$i=null}function ro(e){var t=_i.current;ci(_i),e.type._context._currentValue=t}function io(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function oo(e,t){$i=e,to=eo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Da=!0),e.firstContext=null)}function ao(e,t){if(to!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(to=e,t=1073741823),t={context:e,observedBits:t,next:null},null===eo){if(null===$i)throw Error(a(308));eo=t,$i.dependencies={lanes:0,firstContext:t,responders:null}}else eo=eo.next=t;return e._currentValue}var so=!1;function lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function uo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function co(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function fo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ho(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var i=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?i=o=a:o=o.next=a,n=n.next}while(null!==n);null===o?i=o=t:o=o.next=t}else i=o=t;return n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function po(e,t,n,r){var o=e.updateQueue;so=!1;var a=o.firstBaseUpdate,s=o.lastBaseUpdate,l=o.shared.pending;if(null!==l){o.shared.pending=null;var u=l,c=u.next;u.next=null,null===s?a=c:s.next=c,s=u;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==s&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=u)}}if(null!==a){for(d=o.baseState,s=0,f=c=u=null;;){l=a.lane;var h=a.eventTime;if((r&l)===l){null!==f&&(f=f.next={eventTime:h,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var p=e,m=a;switch(l=t,h=n,m.tag){case 1:if("function"===typeof(p=m.payload)){d=p.call(h,d,l);break e}d=p;break e;case 3:p.flags=-4097&p.flags|64;case 0:if(null===(l="function"===typeof(p=m.payload)?p.call(h,d,l):p)||void 0===l)break e;d=i({},d,l);break e;case 2:so=!0}}null!==a.callback&&(e.flags|=32,null===(l=o.effects)?o.effects=[a]:l.push(a))}else h={eventTime:h,lane:l,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===f?(c=f=h,u=d):f=f.next=h,s|=l;if(null===(a=a.next)){if(null===(l=o.shared.pending))break;a=l.next,l.next=null,o.lastBaseUpdate=l,o.shared.pending=null}}null===f&&(u=d),o.baseState=u,o.firstBaseUpdate=c,o.lastBaseUpdate=f,Ws|=s,e.lanes=s,e.memoizedState=d}}function mo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=n,"function"!==typeof i)throw Error(a(191,i));i.call(r)}}}var yo=(new r.Component).refs;function vo(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:i({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var bo={isMounted:function(e){return!!(e=e._reactInternals)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=dl(),i=hl(e),o=co(r,i);o.payload=t,void 0!==n&&null!==n&&(o.callback=n),fo(e,o),pl(e,i,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=dl(),i=hl(e),o=co(r,i);o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),fo(e,o),pl(e,i,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=dl(),r=hl(e),i=co(n,r);i.tag=2,void 0!==t&&null!==t&&(i.callback=t),fo(e,i),pl(e,r,n)}};function go(e,t,n,r,i,o,a){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,a):!t.prototype||!t.prototype.isPureReactComponent||(!dr(n,r)||!dr(i,o))}function wo(e,t,n){var r=!1,i=di,o=t.contextType;return"object"===typeof o&&null!==o?o=ao(o):(i=vi(t)?mi:hi.current,o=(r=null!==(r=t.contextTypes)&&void 0!==r)?yi(e,i):di),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=bo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function xo(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&bo.enqueueReplaceState(t,t.state,null)}function Po(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=yo,lo(e);var o=t.contextType;"object"===typeof o&&null!==o?i.context=ao(o):(o=vi(t)?mi:hi.current,i.context=yi(e,o)),po(e,n,i,r),i.state=e.memoizedState,"function"===typeof(o=t.getDerivedStateFromProps)&&(vo(e,t,o,n),i.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof i.getSnapshotBeforeUpdate||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||(t=i.state,"function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&bo.enqueueReplaceState(i,i.state,null),po(e,n,i,r),i.state=e.memoizedState),"function"===typeof i.componentDidMount&&(e.flags|=4)}var ko=Array.isArray;function zo(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=r.refs;t===yo&&(t=r.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Mo(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function No(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Yl(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function s(t){return e&&null===t.alternate&&(t.flags=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Jl(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=zo(e,t,n),r.return=e,r):((r=Vl(n.type,n.key,n.props,null,e.mode,r)).ref=zo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ql(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Gl(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t||"number"===typeof t)return(t=Jl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case P:return(n=Vl(t.type,t.key,t.props,null,e.mode,n)).ref=zo(e,null,t),n.return=e,n;case k:return(t=Ql(t,e.mode,n)).return=e,t}if(ko(t)||C(t))return(t=Gl(t,e.mode,n,null)).return=e,t;Mo(e,t)}return null}function h(e,t,n,r){var i=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==i?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case P:return n.key===i?n.type===z?f(e,t,n.props.children,r,i):u(e,t,n,r):null;case k:return n.key===i?c(e,t,n,r):null}if(ko(n)||C(n))return null!==i?null:f(e,t,n,r,null);Mo(e,n)}return null}function p(e,t,n,r,i){if("string"===typeof r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,i);if("object"===typeof r&&null!==r){switch(r.$$typeof){case P:return e=e.get(null===r.key?n:r.key)||null,r.type===z?f(t,e,r.props.children,i,r.key):u(t,e,r,i);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(ko(r)||C(r))return f(t,e=e.get(n)||null,r,i,null);Mo(t,r)}return null}function m(i,a,s,l){for(var u=null,c=null,f=a,m=a=0,y=null;null!==f&&m<s.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=h(i,f,s[m],l);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(i,f),a=o(v,a,m),null===c?u=v:c.sibling=v,c=v,f=y}if(m===s.length)return n(i,f),u;if(null===f){for(;m<s.length;m++)null!==(f=d(i,s[m],l))&&(a=o(f,a,m),null===c?u=f:c.sibling=f,c=f);return u}for(f=r(i,f);m<s.length;m++)null!==(y=p(f,i,m,s[m],l))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),a=o(y,a,m),null===c?u=y:c.sibling=y,c=y);return e&&f.forEach((function(e){return t(i,e)})),u}function y(i,s,l,u){var c=C(l);if("function"!==typeof c)throw Error(a(150));if(null==(l=c.call(l)))throw Error(a(151));for(var f=c=null,m=s,y=s=0,v=null,b=l.next();null!==m&&!b.done;y++,b=l.next()){m.index>y?(v=m,m=null):v=m.sibling;var g=h(i,m,b.value,u);if(null===g){null===m&&(m=v);break}e&&m&&null===g.alternate&&t(i,m),s=o(g,s,y),null===f?c=g:f.sibling=g,f=g,m=v}if(b.done)return n(i,m),c;if(null===m){for(;!b.done;y++,b=l.next())null!==(b=d(i,b.value,u))&&(s=o(b,s,y),null===f?c=b:f.sibling=b,f=b);return c}for(m=r(i,m);!b.done;y++,b=l.next())null!==(b=p(m,i,y,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?y:b.key),s=o(b,s,y),null===f?c=b:f.sibling=b,f=b);return e&&m.forEach((function(e){return t(i,e)})),c}return function(e,r,o,l){var u="object"===typeof o&&null!==o&&o.type===z&&null===o.key;u&&(o=o.props.children);var c="object"===typeof o&&null!==o;if(c)switch(o.$$typeof){case P:e:{for(c=o.key,u=r;null!==u;){if(u.key===c){if(7===u.tag){if(o.type===z){n(e,u.sibling),(r=i(u,o.props.children)).return=e,e=r;break e}}else if(u.elementType===o.type){n(e,u.sibling),(r=i(u,o.props)).ref=zo(e,u,o),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}o.type===z?((r=Gl(o.props.children,e.mode,l,o.key)).return=e,e=r):((l=Vl(o.type,o.key,o.props,null,e.mode,l)).ref=zo(e,r,o),l.return=e,e=l)}return s(e);case k:e:{for(u=o.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=i(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ql(o,e.mode,l)).return=e,e=r}return s(e)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,o)).return=e,e=r):(n(e,r),(r=Jl(o,e.mode,l)).return=e,e=r),s(e);if(ko(o))return m(e,r,o,l);if(C(o))return y(e,r,o,l);if(c&&Mo(e,o),"undefined"===typeof o&&!u)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(a(152,V(e.type)||"Component"))}return n(e,r)}}var Oo=No(!0),To=No(!1),jo={},Lo=ui(jo),Eo=ui(jo),Ho=ui(jo);function Xo(e){if(e===jo)throw Error(a(174));return e}function Ao(e,t){switch(fi(Ho,t),fi(Eo,e),fi(Lo,jo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ci(Lo),fi(Lo,t)}function So(){ci(Lo),ci(Eo),ci(Ho)}function Zo(e){Xo(Ho.current);var t=Xo(Lo.current),n=pe(t,e.type);t!==n&&(fi(Eo,e),fi(Lo,n))}function Do(e){Eo.current===e&&(ci(Lo),ci(Eo))}var Ro=ui(0);function Uo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Fo=null,Wo=null,Co=!1;function qo(e,t){var n=Il(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Io(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Bo(e){if(Co){var t=Wo;if(t){var n=t;if(!Io(e,t)){if(!(t=Gr(n.nextSibling))||!Io(e,t))return e.flags=-1025&e.flags|2,Co=!1,void(Fo=e);qo(Fo,n)}Fo=e,Wo=Gr(t.firstChild)}else e.flags=-1025&e.flags|2,Co=!1,Fo=e}}function Yo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Fo=e}function Vo(e){if(e!==Fo)return!1;if(!Co)return Yo(e),Co=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ir(t,e.memoizedProps))for(t=Wo;t;)qo(e,t),t=Gr(t.nextSibling);if(Yo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Wo=Gr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Wo=null}}else Wo=Fo?Gr(e.stateNode.nextSibling):null;return!0}function Go(){Wo=Fo=null,Co=!1}var Ko=[];function Jo(){for(var e=0;e<Ko.length;e++)Ko[e]._workInProgressVersionPrimary=null;Ko.length=0}var Qo=x.ReactCurrentDispatcher,_o=x.ReactCurrentBatchConfig,$o=0,ea=null,ta=null,na=null,ra=!1,ia=!1;function oa(){throw Error(a(321))}function aa(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!cr(e[n],t[n]))return!1;return!0}function sa(e,t,n,r,i,o){if($o=o,ea=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Qo.current=null===e||null===e.memoizedState?Xa:Aa,e=n(r,i),ia){o=0;do{if(ia=!1,!(25>o))throw Error(a(301));o+=1,na=ta=null,t.updateQueue=null,Qo.current=Sa,e=n(r,i)}while(ia)}if(Qo.current=Ha,t=null!==ta&&null!==ta.next,$o=0,na=ta=ea=null,ra=!1,t)throw Error(a(300));return e}function la(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===na?ea.memoizedState=na=e:na=na.next=e,na}function ua(){if(null===ta){var e=ea.alternate;e=null!==e?e.memoizedState:null}else e=ta.next;var t=null===na?ea.memoizedState:na.next;if(null!==t)na=t,ta=e;else{if(null===e)throw Error(a(310));e={memoizedState:(ta=e).memoizedState,baseState:ta.baseState,baseQueue:ta.baseQueue,queue:ta.queue,next:null},null===na?ea.memoizedState=na=e:na=na.next=e}return na}function ca(e,t){return"function"===typeof t?t(e):t}function fa(e){var t=ua(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=ta,i=r.baseQueue,o=n.pending;if(null!==o){if(null!==i){var s=i.next;i.next=o.next,o.next=s}r.baseQueue=i=o,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var l=s=o=null,u=i;do{var c=u.lane;if(($o&c)===c)null!==l&&(l=l.next={lane:0,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),r=u.eagerReducer===e?u.eagerState:e(r,u.action);else{var f={lane:c,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===l?(s=l=f,o=r):l=l.next=f,ea.lanes|=c,Ws|=c}u=u.next}while(null!==u&&u!==i);null===l?o=r:l.next=s,cr(r,t.memoizedState)||(Da=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function da(e){var t=ua(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(null!==i){n.pending=null;var s=i=i.next;do{o=e(o,s.action),s=s.next}while(s!==i);cr(o,t.memoizedState)||(Da=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ha(e,t,n){var r=t._getVersion;r=r(t._source);var i=t._workInProgressVersionPrimary;if(null!==i?e=i===r:(e=e.mutableReadLanes,(e=($o&e)===e)&&(t._workInProgressVersionPrimary=r,Ko.push(t))),e)return n(t._source);throw Ko.push(t),Error(a(350))}function pa(e,t,n,r){var i=Xs;if(null===i)throw Error(a(349));var o=t._getVersion,s=o(t._source),l=Qo.current,u=l.useState((function(){return ha(i,t,n)})),c=u[1],f=u[0];u=na;var d=e.memoizedState,h=d.refs,p=h.getSnapshot,m=d.source;d=d.subscribe;var y=ea;return e.memoizedState={refs:h,source:t,subscribe:r},l.useEffect((function(){h.getSnapshot=n,h.setSnapshot=c;var e=o(t._source);if(!cr(s,e)){e=n(t._source),cr(f,e)||(c(e),e=hl(y),i.mutableReadLanes|=e&i.pendingLanes),e=i.mutableReadLanes,i.entangledLanes|=e;for(var r=i.entanglements,a=e;0<a;){var l=31-It(a),u=1<<l;r[l]|=e,a&=~u}}}),[n,t,r]),l.useEffect((function(){return r(t._source,(function(){var e=h.getSnapshot,n=h.setSnapshot;try{n(e(t._source));var r=hl(y);i.mutableReadLanes|=r&i.pendingLanes}catch(o){n((function(){throw o}))}}))}),[t,r]),cr(p,n)&&cr(m,t)&&cr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ca,lastRenderedState:f}).dispatch=c=Ea.bind(null,ea,e),u.queue=e,u.baseQueue=null,f=ha(i,t,n),u.memoizedState=u.baseState=f),f}function ma(e,t,n){return pa(ua(),e,t,n)}function ya(e){var t=la();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ca,lastRenderedState:e}).dispatch=Ea.bind(null,ea,e),[t.memoizedState,e]}function va(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ea.updateQueue)?(t={lastEffect:null},ea.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ba(e){return e={current:e},la().memoizedState=e}function ga(){return ua().memoizedState}function wa(e,t,n,r){var i=la();ea.flags|=e,i.memoizedState=va(1|t,n,void 0,void 0===r?null:r)}function xa(e,t,n,r){var i=ua();r=void 0===r?null:r;var o=void 0;if(null!==ta){var a=ta.memoizedState;if(o=a.destroy,null!==r&&aa(r,a.deps))return void va(t,n,o,r)}ea.flags|=e,i.memoizedState=va(1|t,n,o,r)}function Pa(e,t){return wa(516,4,e,t)}function ka(e,t){return xa(516,4,e,t)}function za(e,t){return xa(4,2,e,t)}function Ma(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Na(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,xa(4,2,Ma.bind(null,t,e),n)}function Oa(){}function Ta(e,t){var n=ua();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&aa(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function ja(e,t){var n=ua();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&aa(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function La(e,t){var n=Ii();Yi(98>n?98:n,(function(){e(!0)})),Yi(97<n?97:n,(function(){var n=_o.transition;_o.transition=1;try{e(!1),t()}finally{_o.transition=n}}))}function Ea(e,t,n){var r=dl(),i=hl(e),o={lane:i,action:n,eagerReducer:null,eagerState:null,next:null},a=t.pending;if(null===a?o.next=o:(o.next=a.next,a.next=o),t.pending=o,a=e.alternate,e===ea||null!==a&&a===ea)ia=ra=!0;else{if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var s=t.lastRenderedState,l=a(s,n);if(o.eagerReducer=a,o.eagerState=l,cr(l,s))return}catch(u){}pl(e,i,r)}}var Ha={readContext:ao,useCallback:oa,useContext:oa,useEffect:oa,useImperativeHandle:oa,useLayoutEffect:oa,useMemo:oa,useReducer:oa,useRef:oa,useState:oa,useDebugValue:oa,useDeferredValue:oa,useTransition:oa,useMutableSource:oa,useOpaqueIdentifier:oa,unstable_isNewReconciler:!1},Xa={readContext:ao,useCallback:function(e,t){return la().memoizedState=[e,void 0===t?null:t],e},useContext:ao,useEffect:Pa,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,wa(4,2,Ma.bind(null,t,e),n)},useLayoutEffect:function(e,t){return wa(4,2,e,t)},useMemo:function(e,t){var n=la();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=la();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ea.bind(null,ea,e),[r.memoizedState,e]},useRef:ba,useState:ya,useDebugValue:Oa,useDeferredValue:function(e){var t=ya(e),n=t[0],r=t[1];return Pa((function(){var t=_o.transition;_o.transition=1;try{r(e)}finally{_o.transition=t}}),[e]),n},useTransition:function(){var e=ya(!1),t=e[0];return ba(e=La.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=la();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},pa(r,e,t,n)},useOpaqueIdentifier:function(){if(Co){var e=!1,t=function(e){return{$$typeof:S,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Jr++).toString(36))),Error(a(355))})),n=ya(t)[1];return 0===(2&ea.mode)&&(ea.flags|=516,va(5,(function(){n("r:"+(Jr++).toString(36))}),void 0,null)),t}return ya(t="r:"+(Jr++).toString(36)),t},unstable_isNewReconciler:!1},Aa={readContext:ao,useCallback:Ta,useContext:ao,useEffect:ka,useImperativeHandle:Na,useLayoutEffect:za,useMemo:ja,useReducer:fa,useRef:ga,useState:function(){return fa(ca)},useDebugValue:Oa,useDeferredValue:function(e){var t=fa(ca),n=t[0],r=t[1];return ka((function(){var t=_o.transition;_o.transition=1;try{r(e)}finally{_o.transition=t}}),[e]),n},useTransition:function(){var e=fa(ca)[0];return[ga().current,e]},useMutableSource:ma,useOpaqueIdentifier:function(){return fa(ca)[0]},unstable_isNewReconciler:!1},Sa={readContext:ao,useCallback:Ta,useContext:ao,useEffect:ka,useImperativeHandle:Na,useLayoutEffect:za,useMemo:ja,useReducer:da,useRef:ga,useState:function(){return da(ca)},useDebugValue:Oa,useDeferredValue:function(e){var t=da(ca),n=t[0],r=t[1];return ka((function(){var t=_o.transition;_o.transition=1;try{r(e)}finally{_o.transition=t}}),[e]),n},useTransition:function(){var e=da(ca)[0];return[ga().current,e]},useMutableSource:ma,useOpaqueIdentifier:function(){return da(ca)[0]},unstable_isNewReconciler:!1},Za=x.ReactCurrentOwner,Da=!1;function Ra(e,t,n,r){t.child=null===e?To(t,null,n,r):Oo(t,e.child,n,r)}function Ua(e,t,n,r,i){n=n.render;var o=t.ref;return oo(t,i),r=sa(e,t,n,r,o,i),null===e||Da?(t.flags|=1,Ra(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~i,os(e,t,i))}function Fa(e,t,n,r,i,o){if(null===e){var a=n.type;return"function"!==typeof a||Bl(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Vl(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Wa(e,t,a,r,i,o))}return a=e.child,0===(i&o)&&(i=a.memoizedProps,(n=null!==(n=n.compare)?n:dr)(i,r)&&e.ref===t.ref)?os(e,t,o):(t.flags|=1,(e=Yl(a,r)).ref=t.ref,e.return=t,t.child=e)}function Wa(e,t,n,r,i,o){if(null!==e&&dr(e.memoizedProps,r)&&e.ref===t.ref){if(Da=!1,0===(o&i))return t.lanes=e.lanes,os(e,t,o);0!==(16384&e.flags)&&(Da=!0)}return Ia(e,t,n,r,o)}function Ca(e,t,n){var r=t.pendingProps,i=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},Pl(t,n);else{if(0===(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},Pl(t,e),null;t.memoizedState={baseLanes:0},Pl(t,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,Pl(t,r);return Ra(e,t,i,n),t.child}function qa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ia(e,t,n,r,i){var o=vi(n)?mi:hi.current;return o=yi(t,o),oo(t,i),n=sa(e,t,n,r,o,i),null===e||Da?(t.flags|=1,Ra(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~i,os(e,t,i))}function Ba(e,t,n,r,i){if(vi(n)){var o=!0;xi(t)}else o=!1;if(oo(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),wo(t,n,r),Po(t,n,r,i),r=!0;else if(null===e){var a=t.stateNode,s=t.memoizedProps;a.props=s;var l=a.context,u=n.contextType;"object"===typeof u&&null!==u?u=ao(u):u=yi(t,u=vi(n)?mi:hi.current);var c=n.getDerivedStateFromProps,f="function"===typeof c||"function"===typeof a.getSnapshotBeforeUpdate;f||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(s!==r||l!==u)&&xo(t,a,r,u),so=!1;var d=t.memoizedState;a.state=d,po(t,r,a,i),l=t.memoizedState,s!==r||d!==l||pi.current||so?("function"===typeof c&&(vo(t,n,c,r),l=t.memoizedState),(s=so||go(t,n,s,r,d,l,u))?(f||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||("function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"===typeof a.componentDidMount&&(t.flags|=4)):("function"===typeof a.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=u,r=s):("function"===typeof a.componentDidMount&&(t.flags|=4),r=!1)}else{a=t.stateNode,uo(e,t),s=t.memoizedProps,u=t.type===t.elementType?s:Qi(t.type,s),a.props=u,f=t.pendingProps,d=a.context,"object"===typeof(l=n.contextType)&&null!==l?l=ao(l):l=yi(t,l=vi(n)?mi:hi.current);var h=n.getDerivedStateFromProps;(c="function"===typeof h||"function"===typeof a.getSnapshotBeforeUpdate)||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(s!==f||d!==l)&&xo(t,a,r,l),so=!1,d=t.memoizedState,a.state=d,po(t,r,a,i);var p=t.memoizedState;s!==f||d!==p||pi.current||so?("function"===typeof h&&(vo(t,n,h,r),p=t.memoizedState),(u=so||go(t,n,u,r,d,p,l))?(c||"function"!==typeof a.UNSAFE_componentWillUpdate&&"function"!==typeof a.componentWillUpdate||("function"===typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,l),"function"===typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,l)),"function"===typeof a.componentDidUpdate&&(t.flags|=4),"function"===typeof a.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof a.componentDidUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=l,r=u):("function"!==typeof a.componentDidUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Ya(e,t,n,r,o,i)}function Ya(e,t,n,r,i,o){qa(e,t);var a=0!==(64&t.flags);if(!r&&!a)return i&&Pi(t,n,!1),os(e,t,o);r=t.stateNode,Za.current=t;var s=a&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&a?(t.child=Oo(t,e.child,null,o),t.child=Oo(t,null,s,o)):Ra(e,t,s,o),t.memoizedState=r.state,i&&Pi(t,n,!0),t.child}function Va(e){var t=e.stateNode;t.pendingContext?gi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&gi(0,t.context,!1),Ao(e,t.containerInfo)}var Ga,Ka,Ja,Qa={dehydrated:null,retryLane:0};function _a(e,t,n){var r,i=t.pendingProps,o=Ro.current,a=!1;return(r=0!==(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!==(2&o)),r?(a=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(o|=1),fi(Ro,1&o),null===e?(void 0!==i.fallback&&Bo(t),e=i.children,o=i.fallback,a?(e=$a(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qa,e):"number"===typeof i.unstable_expectedLoadTime?(e=$a(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Qa,t.lanes=33554432,e):((n=Kl({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,a?(i=ts(e,t,i.children,i.fallback,n),a=t.child,o=e.child.memoizedState,a.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},a.childLanes=e.childLanes&~n,t.memoizedState=Qa,i):(n=es(e,t,i.children,n),t.memoizedState=null,n))}function $a(e,t,n,r){var i=e.mode,o=e.child;return t={mode:"hidden",children:t},0===(2&i)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Kl(t,i,0,null),n=Gl(n,i,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function es(e,t,n,r){var i=e.child;return e=i.sibling,n=Yl(i,{mode:"visible",children:n}),0===(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}function ts(e,t,n,r,i){var o=t.mode,a=e.child;e=a.sibling;var s={mode:"hidden",children:n};return 0===(2&o)&&t.child!==a?((n=t.child).childLanes=0,n.pendingProps=s,null!==(a=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=a,a.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Yl(a,s),null!==e?r=Yl(e,r):(r=Gl(r,o,i,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function ns(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),io(e.return,t)}function rs(e,t,n,r,i,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i,lastEffect:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=i,a.lastEffect=o)}function is(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(Ra(e,t,r.children,n),0!==(2&(r=Ro.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ns(e,n);else if(19===e.tag)ns(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(fi(Ro,r),0===(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===Uo(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),rs(t,!1,i,n,o,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===Uo(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}rs(t,!0,n,null,o,t.lastEffect);break;case"together":rs(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function os(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ws|=t.lanes,0!==(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Yl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Yl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function as(e,t){if(!Co)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ss(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return vi(t.type)&&bi(),null;case 3:return So(),ci(pi),ci(hi),Jo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Vo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Do(t);var o=Xo(Ho.current);if(n=t.type,null!==e&&null!=t.stateNode)Ka(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Xo(Lo.current),Vo(t)){r=t.stateNode,n=t.type;var s=t.memoizedProps;switch(r[_r]=t,r[$r]=s,n){case"dialog":Lr("cancel",r),Lr("close",r);break;case"iframe":case"object":case"embed":Lr("load",r);break;case"video":case"audio":for(e=0;e<Nr.length;e++)Lr(Nr[e],r);break;case"source":Lr("error",r);break;case"img":case"image":case"link":Lr("error",r),Lr("load",r);break;case"details":Lr("toggle",r);break;case"input":ee(r,s),Lr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Lr("invalid",r);break;case"textarea":le(r,s),Lr("invalid",r)}for(var u in ze(n,s),e=null,s)s.hasOwnProperty(u)&&(o=s[u],"children"===u?"string"===typeof o?r.textContent!==o&&(e=["children",o]):"number"===typeof o&&r.textContent!==""+o&&(e=["children",""+o]):l.hasOwnProperty(u)&&null!=o&&"onScroll"===u&&Lr("scroll",r));switch(n){case"input":J(r),re(r,s,!0);break;case"textarea":J(r),ce(r);break;case"select":case"option":break;default:"function"===typeof s.onClick&&(r.onclick=Fr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(u=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=he(n)),e===fe?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[_r]=t,e[$r]=r,Ga(e,t),t.stateNode=e,u=Me(n,r),n){case"dialog":Lr("cancel",e),Lr("close",e),o=r;break;case"iframe":case"object":case"embed":Lr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Nr.length;o++)Lr(Nr[o],e);o=r;break;case"source":Lr("error",e),o=r;break;case"img":case"image":case"link":Lr("error",e),Lr("load",e),o=r;break;case"details":Lr("toggle",e),o=r;break;case"input":ee(e,r),o=$(e,r),Lr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=i({},r,{value:void 0}),Lr("invalid",e);break;case"textarea":le(e,r),o=se(e,r),Lr("invalid",e);break;default:o=r}ze(n,o);var c=o;for(s in c)if(c.hasOwnProperty(s)){var f=c[s];"style"===s?Pe(e,f):"dangerouslySetInnerHTML"===s?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===s?"string"===typeof f?("textarea"!==n||""!==f)&&be(e,f):"number"===typeof f&&be(e,""+f):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(l.hasOwnProperty(s)?null!=f&&"onScroll"===s&&Lr("scroll",e):null!=f&&w(e,s,f,u))}switch(n){case"input":J(e),re(e,r,!1);break;case"textarea":J(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(s=r.value)?ae(e,!!r.multiple,s,!1):null!=r.defaultValue&&ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof o.onClick&&(e.onclick=Fr)}qr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Ja(0,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(a(166));n=Xo(Ho.current),Xo(Lo.current),Vo(t)?(r=t.stateNode,n=t.memoizedProps,r[_r]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[_r]=t,t.stateNode=r)}return null;case 13:return ci(Ro),r=t.memoizedState,0!==(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Vo(t):n=null!==e.memoizedState,r&&!n&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Ro.current)?0===Rs&&(Rs=3):(0!==Rs&&3!==Rs||(Rs=4),null===Xs||0===(134217727&Ws)&&0===(134217727&Cs)||bl(Xs,Ss))),(r||n)&&(t.flags|=4),null);case 4:return So(),null===e&&Hr(t.stateNode.containerInfo),null;case 10:return ro(t),null;case 19:if(ci(Ro),null===(r=t.memoizedState))return null;if(s=0!==(64&t.flags),null===(u=r.rendering))if(s)as(r,!1);else{if(0!==Rs||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(u=Uo(e))){for(t.flags|=64,as(r,!1),null!==(s=u.updateQueue)&&(t.updateQueue=s,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(s=n).flags&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(u=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=u.childLanes,s.lanes=u.lanes,s.child=u.child,s.memoizedProps=u.memoizedProps,s.memoizedState=u.memoizedState,s.updateQueue=u.updateQueue,s.type=u.type,e=u.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return fi(Ro,1&Ro.current|2),t.child}e=e.sibling}null!==r.tail&&qi()>Ys&&(t.flags|=64,s=!0,as(r,!1),t.lanes=33554432)}else{if(!s)if(null!==(e=Uo(u))){if(t.flags|=64,s=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),as(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate&&!Co)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*qi()-r.renderingStartTime>Ys&&1073741824!==n&&(t.flags|=64,s=!0,as(r,!1),t.lanes=33554432);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=qi(),n.sibling=null,t=Ro.current,fi(Ro,s?1&t|2:1&t),n):null;case 23:case 24:return kl(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(a(156,t.tag))}function ls(e){switch(e.tag){case 1:vi(e.type)&&bi();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(So(),ci(pi),ci(hi),Jo(),0!==(64&(t=e.flags)))throw Error(a(285));return e.flags=-4097&t|64,e;case 5:return Do(e),null;case 13:return ci(Ro),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ci(Ro),null;case 4:return So(),null;case 10:return ro(e),null;case 23:case 24:return kl(),null;default:return null}}function us(e,t){try{var n="",r=t;do{n+=Y(r),r=r.return}while(r);var i=n}catch(o){i="\nError generating stack: "+o.message+"\n"+o.stack}return{value:e,source:t,stack:i}}function cs(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}Ga=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ka=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Xo(Lo.current);var a,s=null;switch(n){case"input":o=$(e,o),r=$(e,r),s=[];break;case"option":o=oe(e,o),r=oe(e,r),s=[];break;case"select":o=i({},o,{value:void 0}),r=i({},r,{value:void 0}),s=[];break;case"textarea":o=se(e,o),r=se(e,r),s=[];break;default:"function"!==typeof o.onClick&&"function"===typeof r.onClick&&(e.onclick=Fr)}for(f in ze(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var u=o[f];for(a in u)u.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(l.hasOwnProperty(f)?s||(s=[]):(s=s||[]).push(f,null));for(f in r){var c=r[f];if(u=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&c!==u&&(null!=c||null!=u))if("style"===f)if(u){for(a in u)!u.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in c)c.hasOwnProperty(a)&&u[a]!==c[a]&&(n||(n={}),n[a]=c[a])}else n||(s||(s=[]),s.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(s=s||[]).push(f,c)):"children"===f?"string"!==typeof c&&"number"!==typeof c||(s=s||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(l.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Lr("scroll",e),s||u===c||(s=[])):"object"===typeof c&&null!==c&&c.$$typeof===S?c.toString():(s=s||[]).push(f,c))}n&&(s=s||[]).push("style",n);var f=s;(t.updateQueue=f)&&(t.flags|=4)}},Ja=function(e,t,n,r){n!==r&&(t.flags|=4)};var fs="function"===typeof WeakMap?WeakMap:Map;function ds(e,t,n){(n=co(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Js||(Js=!0,Qs=r),cs(0,t)},n}function hs(e,t,n){(n=co(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var i=t.value;n.payload=function(){return cs(0,t),r(i)}}var o=e.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){"function"!==typeof r&&(null===_s?_s=new Set([this]):_s.add(this),cs(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ps="function"===typeof WeakSet?WeakSet:Set;function ms(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(n){Fl(e,n)}else t.current=null}function ys(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Qi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo))}throw Error(a(163))}function vs(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var i=e;r=i.next,0!==(4&(i=i.tag))&&0!==(1&i)&&(Dl(n,e),Zl(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Qi(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&mo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}mo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&qr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Pt(n)))))}throw Error(a(163))}function bs(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"===typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var i=n.memoizedProps.style;i=void 0!==i&&null!==i&&i.hasOwnProperty("display")?i.display:null,r.style.display=xe("display",i)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function gs(e,t){if(zi&&"function"===typeof zi.onCommitFiberUnmount)try{zi.onCommitFiberUnmount(ki,t)}catch(o){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,i=r.destroy;if(r=r.tag,void 0!==i)if(0!==(4&r))Dl(t,n);else{r=t;try{i()}catch(o){Fl(r,o)}}n=n.next}while(n!==e)}break;case 1:if(ms(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(o){Fl(t,o)}break;case 5:ms(t);break;case 4:Ms(e,t)}}function ws(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function xs(e){return 5===e.tag||3===e.tag||4===e.tag}function Ps(e){e:{for(var t=e.return;null!==t;){if(xs(t))break e;t=t.return}throw Error(a(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.flags&&(be(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||xs(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?ks(e,n,t):zs(e,n,t)}function ks(e,t,n){var r=e.tag,i=5===r||6===r;if(i)e=i?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Fr));else if(4!==r&&null!==(e=e.child))for(ks(e,t,n),e=e.sibling;null!==e;)ks(e,t,n),e=e.sibling}function zs(e,t,n){var r=e.tag,i=5===r||6===r;if(i)e=i?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(zs(e,t,n),e=e.sibling;null!==e;)zs(e,t,n),e=e.sibling}function Ms(e,t){for(var n,r,i=t,o=!1;;){if(!o){o=i.return;e:for(;;){if(null===o)throw Error(a(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===i.tag||6===i.tag){e:for(var s=e,l=i,u=l;;)if(gs(s,u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===l)break e;for(;null===u.sibling;){if(null===u.return||u.return===l)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}r?(s=n,l=i.stateNode,8===s.nodeType?s.parentNode.removeChild(l):s.removeChild(l)):n.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){n=i.stateNode.containerInfo,r=!0,i.child.return=i,i=i.child;continue}}else if(gs(e,i),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(o=!1)}i.sibling.return=i.return,i=i.sibling}}function Ns(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3===(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var i=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[$r]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Me(e,i),t=Me(e,r),i=0;i<o.length;i+=2){var s=o[i],l=o[i+1];"style"===s?Pe(n,l):"dangerouslySetInnerHTML"===s?ve(n,l):"children"===s?be(n,l):w(n,s,l,t)}switch(e){case"input":ne(n,r);break;case"textarea":ue(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ae(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ae(n,!!r.multiple,r.defaultValue,!0):ae(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,Pt(n.containerInfo)));case 13:return null!==t.memoizedState&&(Bs=qi(),bs(t.child,!0)),void Os(t);case 19:return void Os(t);case 23:case 24:return void bs(t,null!==t.memoizedState)}throw Error(a(163))}function Os(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ps),t.forEach((function(t){var r=Cl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Ts(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var js=Math.ceil,Ls=x.ReactCurrentDispatcher,Es=x.ReactCurrentOwner,Hs=0,Xs=null,As=null,Ss=0,Zs=0,Ds=ui(0),Rs=0,Us=null,Fs=0,Ws=0,Cs=0,qs=0,Is=null,Bs=0,Ys=1/0;function Vs(){Ys=qi()+500}var Gs,Ks=null,Js=!1,Qs=null,_s=null,$s=!1,el=null,tl=90,nl=[],rl=[],il=null,ol=0,al=null,sl=-1,ll=0,ul=0,cl=null,fl=!1;function dl(){return 0!==(48&Hs)?qi():-1!==sl?sl:sl=qi()}function hl(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===Ii()?1:2;if(0===ll&&(ll=Fs),0!==Ji.transition){0!==ul&&(ul=null!==Is?Is.pendingLanes:0),e=ll;var t=4186112&~ul;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Ii(),0!==(4&Hs)&&98===e?e=Ft(12,ll):e=Ft(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ll),e}function pl(e,t,n){if(50<ol)throw ol=0,al=null,Error(a(185));if(null===(e=ml(e,t)))return null;qt(e,t,n),e===Xs&&(Cs|=t,4===Rs&&bl(e,Ss));var r=Ii();1===t?0!==(8&Hs)&&0===(48&Hs)?gl(e):(yl(e,n),0===Hs&&(Vs(),Gi())):(0===(4&Hs)||98!==r&&99!==r||(null===il?il=new Set([e]):il.add(e)),yl(e,n)),Is=e}function ml(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function yl(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,i=e.pingedLanes,o=e.expirationTimes,s=e.pendingLanes;0<s;){var l=31-It(s),u=1<<l,c=o[l];if(-1===c){if(0===(u&r)||0!==(u&i)){c=t,Dt(u);var f=Zt;o[l]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=u);s&=~u}if(r=Rt(e,e===Xs?Ss:0),t=Zt,0===r)null!==n&&(n!==Di&&Oi(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Di&&Oi(n)}15===t?(n=gl.bind(null,e),null===Ui?(Ui=[n],Fi=Ni(Hi,Ki)):Ui.push(n),n=Di):14===t?n=Vi(99,gl.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(a(358,e))}}(t),n=Vi(n,vl.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function vl(e){if(sl=-1,ul=ll=0,0!==(48&Hs))throw Error(a(327));var t=e.callbackNode;if(Sl()&&e.callbackNode!==t)return null;var n=Rt(e,e===Xs?Ss:0);if(0===n)return null;var r=n,i=Hs;Hs|=16;var o=Nl();for(Xs===e&&Ss===r||(Vs(),zl(e,r));;)try{jl();break}catch(l){Ml(e,l)}if(no(),Ls.current=o,Hs=i,null!==As?r=0:(Xs=null,Ss=0,r=Rs),0!==(Fs&Cs))zl(e,0);else if(0!==r){if(2===r&&(Hs|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=Ut(e))&&(r=Ol(e,n))),1===r)throw t=Us,zl(e,0),bl(e,n),yl(e,qi()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(a(345));case 2:case 5:Hl(e);break;case 3:if(bl(e,n),(62914560&n)===n&&10<(r=Bs+500-qi())){if(0!==Rt(e,0))break;if(((i=e.suspendedLanes)&n)!==n){dl(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=Br(Hl.bind(null,e),r);break}Hl(e);break;case 4:if(bl(e,n),(4186112&n)===n)break;for(r=e.eventTimes,i=-1;0<n;){var s=31-It(n);o=1<<s,(s=r[s])>i&&(i=s),n&=~o}if(n=i,10<(n=(120>(n=qi()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*js(n/1960))-n)){e.timeoutHandle=Br(Hl.bind(null,e),n);break}Hl(e);break;default:throw Error(a(329))}}return yl(e,qi()),e.callbackNode===t?vl.bind(null,e):null}function bl(e,t){for(t&=~qs,t&=~Cs,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-It(t),r=1<<n;e[n]=-1,t&=~r}}function gl(e){if(0!==(48&Hs))throw Error(a(327));if(Sl(),e===Xs&&0!==(e.expiredLanes&Ss)){var t=Ss,n=Ol(e,t);0!==(Fs&Cs)&&(n=Ol(e,t=Rt(e,t)))}else n=Ol(e,t=Rt(e,0));if(0!==e.tag&&2===n&&(Hs|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=Ut(e))&&(n=Ol(e,t))),1===n)throw n=Us,zl(e,0),bl(e,t),yl(e,qi()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Hl(e),yl(e,qi()),null}function wl(e,t){var n=Hs;Hs|=1;try{return e(t)}finally{0===(Hs=n)&&(Vs(),Gi())}}function xl(e,t){var n=Hs;Hs&=-2,Hs|=8;try{return e(t)}finally{0===(Hs=n)&&(Vs(),Gi())}}function Pl(e,t){fi(Ds,Zs),Zs|=t,Fs|=t}function kl(){Zs=Ds.current,ci(Ds)}function zl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Yr(n)),null!==As)for(n=As.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&bi();break;case 3:So(),ci(pi),ci(hi),Jo();break;case 5:Do(r);break;case 4:So();break;case 13:case 19:ci(Ro);break;case 10:ro(r);break;case 23:case 24:kl()}n=n.return}Xs=e,As=Yl(e.current,null),Ss=Zs=Fs=t,Rs=0,Us=null,qs=Cs=Ws=0}function Ml(e,t){for(;;){var n=As;try{if(no(),Qo.current=Ha,ra){for(var r=ea.memoizedState;null!==r;){var i=r.queue;null!==i&&(i.pending=null),r=r.next}ra=!1}if($o=0,na=ta=ea=null,ia=!1,Es.current=null,null===n||null===n.return){Rs=1,Us=t,As=null;break}e:{var o=e,a=n.return,s=n,l=t;if(t=Ss,s.flags|=2048,s.firstEffect=s.lastEffect=null,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l;if(0===(2&s.mode)){var c=s.alternate;c?(s.updateQueue=c.updateQueue,s.memoizedState=c.memoizedState,s.lanes=c.lanes):(s.updateQueue=null,s.memoizedState=null)}var f=0!==(1&Ro.current),d=a;do{var h;if(h=13===d.tag){var p=d.memoizedState;if(null!==p)h=null!==p.dehydrated;else{var m=d.memoizedProps;h=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(h){var y=d.updateQueue;if(null===y){var v=new Set;v.add(u),d.updateQueue=v}else y.add(u);if(0===(2&d.mode)){if(d.flags|=64,s.flags|=16384,s.flags&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var b=co(-1,1);b.tag=2,fo(s,b)}s.lanes|=1;break e}l=void 0,s=t;var g=o.pingCache;if(null===g?(g=o.pingCache=new fs,l=new Set,g.set(u,l)):void 0===(l=g.get(u))&&(l=new Set,g.set(u,l)),!l.has(s)){l.add(s);var w=Wl.bind(null,o,u,s);u.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);l=Error((V(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Rs&&(Rs=2),l=us(l,s),d=a;do{switch(d.tag){case 3:o=l,d.flags|=4096,t&=-t,d.lanes|=t,ho(d,ds(0,o,t));break e;case 1:o=l;var x=d.type,P=d.stateNode;if(0===(64&d.flags)&&("function"===typeof x.getDerivedStateFromError||null!==P&&"function"===typeof P.componentDidCatch&&(null===_s||!_s.has(P)))){d.flags|=4096,t&=-t,d.lanes|=t,ho(d,hs(d,o,t));break e}}d=d.return}while(null!==d)}El(n)}catch(k){t=k,As===n&&null!==n&&(As=n=n.return);continue}break}}function Nl(){var e=Ls.current;return Ls.current=Ha,null===e?Ha:e}function Ol(e,t){var n=Hs;Hs|=16;var r=Nl();for(Xs===e&&Ss===t||zl(e,t);;)try{Tl();break}catch(i){Ml(e,i)}if(no(),Hs=n,Ls.current=r,null!==As)throw Error(a(261));return Xs=null,Ss=0,Rs}function Tl(){for(;null!==As;)Ll(As)}function jl(){for(;null!==As&&!Ti();)Ll(As)}function Ll(e){var t=Gs(e.alternate,e,Zs);e.memoizedProps=e.pendingProps,null===t?El(e):As=t,Es.current=null}function El(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(n=ss(n,t,Zs)))return void(As=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!==(1073741824&Zs)||0===(4&n.mode)){for(var r=0,i=n.child;null!==i;)r|=i.lanes|i.childLanes,i=i.sibling;n.childLanes=r}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ls(t)))return n.flags&=2047,void(As=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(As=t);As=t=e}while(null!==t);0===Rs&&(Rs=5)}function Hl(e){var t=Ii();return Yi(99,Xl.bind(null,e,t)),null}function Xl(e,t){do{Sl()}while(null!==el);if(0!==(48&Hs))throw Error(a(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null;var r=n.lanes|n.childLanes,i=r,o=e.pendingLanes&~i;e.pendingLanes=i,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=i,e.mutableReadLanes&=i,e.entangledLanes&=i,i=e.entanglements;for(var s=e.eventTimes,l=e.expirationTimes;0<o;){var u=31-It(o),c=1<<u;i[u]=0,s[u]=-1,l[u]=-1,o&=~c}if(null!==il&&0===(24&r)&&il.has(e)&&il.delete(e),e===Xs&&(As=Xs=null,Ss=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(i=Hs,Hs|=32,Es.current=null,Wr=Kt,vr(s=yr())){if("selectionStart"in s)l={start:s.selectionStart,end:s.selectionEnd};else e:if(l=(l=s.ownerDocument)&&l.defaultView||window,(c=l.getSelection&&l.getSelection())&&0!==c.rangeCount){l=c.anchorNode,o=c.anchorOffset,u=c.focusNode,c=c.focusOffset;try{l.nodeType,u.nodeType}catch(N){l=null;break e}var f=0,d=-1,h=-1,p=0,m=0,y=s,v=null;t:for(;;){for(var b;y!==l||0!==o&&3!==y.nodeType||(d=f+o),y!==u||0!==c&&3!==y.nodeType||(h=f+c),3===y.nodeType&&(f+=y.nodeValue.length),null!==(b=y.firstChild);)v=y,y=b;for(;;){if(y===s)break t;if(v===l&&++p===o&&(d=f),v===u&&++m===c&&(h=f),null!==(b=y.nextSibling))break;v=(y=v).parentNode}y=b}l=-1===d||-1===h?null:{start:d,end:h}}else l=null;l=l||{start:0,end:0}}else l=null;Cr={focusedElem:s,selectionRange:l},Kt=!1,cl=null,fl=!1,Ks=r;do{try{Al()}catch(N){if(null===Ks)throw Error(a(330));Fl(Ks,N),Ks=Ks.nextEffect}}while(null!==Ks);cl=null,Ks=r;do{try{for(s=e;null!==Ks;){var g=Ks.flags;if(16&g&&be(Ks.stateNode,""),128&g){var w=Ks.alternate;if(null!==w){var x=w.ref;null!==x&&("function"===typeof x?x(null):x.current=null)}}switch(1038&g){case 2:Ps(Ks),Ks.flags&=-3;break;case 6:Ps(Ks),Ks.flags&=-3,Ns(Ks.alternate,Ks);break;case 1024:Ks.flags&=-1025;break;case 1028:Ks.flags&=-1025,Ns(Ks.alternate,Ks);break;case 4:Ns(Ks.alternate,Ks);break;case 8:Ms(s,l=Ks);var P=l.alternate;ws(l),null!==P&&ws(P)}Ks=Ks.nextEffect}}catch(N){if(null===Ks)throw Error(a(330));Fl(Ks,N),Ks=Ks.nextEffect}}while(null!==Ks);if(x=Cr,w=yr(),g=x.focusedElem,s=x.selectionRange,w!==g&&g&&g.ownerDocument&&mr(g.ownerDocument.documentElement,g)){null!==s&&vr(g)&&(w=s.start,void 0===(x=s.end)&&(x=w),"selectionStart"in g?(g.selectionStart=w,g.selectionEnd=Math.min(x,g.value.length)):(x=(w=g.ownerDocument||document)&&w.defaultView||window).getSelection&&(x=x.getSelection(),l=g.textContent.length,P=Math.min(s.start,l),s=void 0===s.end?P:Math.min(s.end,l),!x.extend&&P>s&&(l=s,s=P,P=l),l=pr(g,P),o=pr(g,s),l&&o&&(1!==x.rangeCount||x.anchorNode!==l.node||x.anchorOffset!==l.offset||x.focusNode!==o.node||x.focusOffset!==o.offset)&&((w=w.createRange()).setStart(l.node,l.offset),x.removeAllRanges(),P>s?(x.addRange(w),x.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),x.addRange(w))))),w=[];for(x=g;x=x.parentNode;)1===x.nodeType&&w.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"===typeof g.focus&&g.focus(),g=0;g<w.length;g++)(x=w[g]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Kt=!!Wr,Cr=Wr=null,e.current=n,Ks=r;do{try{for(g=e;null!==Ks;){var k=Ks.flags;if(36&k&&vs(g,Ks.alternate,Ks),128&k){w=void 0;var z=Ks.ref;if(null!==z){var M=Ks.stateNode;Ks.tag,w=M,"function"===typeof z?z(w):z.current=w}}Ks=Ks.nextEffect}}catch(N){if(null===Ks)throw Error(a(330));Fl(Ks,N),Ks=Ks.nextEffect}}while(null!==Ks);Ks=null,Ri(),Hs=i}else e.current=n;if($s)$s=!1,el=e,tl=t;else for(Ks=r;null!==Ks;)t=Ks.nextEffect,Ks.nextEffect=null,8&Ks.flags&&((k=Ks).sibling=null,k.stateNode=null),Ks=t;if(0===(r=e.pendingLanes)&&(_s=null),1===r?e===al?ol++:(ol=0,al=e):ol=0,n=n.stateNode,zi&&"function"===typeof zi.onCommitFiberRoot)try{zi.onCommitFiberRoot(ki,n,void 0,64===(64&n.current.flags))}catch(N){}if(yl(e,qi()),Js)throw Js=!1,e=Qs,Qs=null,e;return 0!==(8&Hs)||Gi(),null}function Al(){for(;null!==Ks;){var e=Ks.alternate;fl||null===cl||(0!==(8&Ks.flags)?et(Ks,cl)&&(fl=!0):13===Ks.tag&&Ts(e,Ks)&&et(Ks,cl)&&(fl=!0));var t=Ks.flags;0!==(256&t)&&ys(e,Ks),0===(512&t)||$s||($s=!0,Vi(97,(function(){return Sl(),null}))),Ks=Ks.nextEffect}}function Sl(){if(90!==tl){var e=97<tl?97:tl;return tl=90,Yi(e,Rl)}return!1}function Zl(e,t){nl.push(t,e),$s||($s=!0,Vi(97,(function(){return Sl(),null})))}function Dl(e,t){rl.push(t,e),$s||($s=!0,Vi(97,(function(){return Sl(),null})))}function Rl(){if(null===el)return!1;var e=el;if(el=null,0!==(48&Hs))throw Error(a(331));var t=Hs;Hs|=32;var n=rl;rl=[];for(var r=0;r<n.length;r+=2){var i=n[r],o=n[r+1],s=i.destroy;if(i.destroy=void 0,"function"===typeof s)try{s()}catch(u){if(null===o)throw Error(a(330));Fl(o,u)}}for(n=nl,nl=[],r=0;r<n.length;r+=2){i=n[r],o=n[r+1];try{var l=i.create;i.destroy=l()}catch(u){if(null===o)throw Error(a(330));Fl(o,u)}}for(l=e.current.firstEffect;null!==l;)e=l.nextEffect,l.nextEffect=null,8&l.flags&&(l.sibling=null,l.stateNode=null),l=e;return Hs=t,Gi(),!0}function Ul(e,t,n){fo(e,t=ds(0,t=us(n,t),1)),t=dl(),null!==(e=ml(e,1))&&(qt(e,1,t),yl(e,t))}function Fl(e,t){if(3===e.tag)Ul(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Ul(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===_s||!_s.has(r))){var i=hs(n,e=us(t,e),1);if(fo(n,i),i=dl(),null!==(n=ml(n,1)))qt(n,1,i),yl(n,i);else if("function"===typeof r.componentDidCatch&&(null===_s||!_s.has(r)))try{r.componentDidCatch(t,e)}catch(o){}break}}n=n.return}}function Wl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=dl(),e.pingedLanes|=e.suspendedLanes&n,Xs===e&&(Ss&n)===n&&(4===Rs||3===Rs&&(62914560&Ss)===Ss&&500>qi()-Bs?zl(e,0):qs|=n),yl(e,t)}function Cl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===Ii()?1:2:(0===ll&&(ll=Fs),0===(t=Wt(62914560&~ll))&&(t=4194304))),n=dl(),null!==(e=ml(e,t))&&(qt(e,t,n),yl(e,n))}function ql(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Il(e,t,n,r){return new ql(e,t,n,r)}function Bl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Yl(e,t){var n=e.alternate;return null===n?((n=Il(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Vl(e,t,n,r,i,o){var s=2;if(r=e,"function"===typeof e)Bl(e)&&(s=1);else if("string"===typeof e)s=5;else e:switch(e){case z:return Gl(n.children,i,o,t);case Z:s=8,i|=16;break;case M:s=8,i|=1;break;case N:return(e=Il(12,n,t,8|i)).elementType=N,e.type=N,e.lanes=o,e;case L:return(e=Il(13,n,t,i)).type=L,e.elementType=L,e.lanes=o,e;case E:return(e=Il(19,n,t,i)).elementType=E,e.lanes=o,e;case D:return Kl(n,i,o,t);case R:return(e=Il(24,n,t,i)).elementType=R,e.lanes=o,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case O:s=10;break e;case T:s=9;break e;case j:s=11;break e;case H:s=14;break e;case X:s=16,r=null;break e;case A:s=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Il(s,n,t,i)).elementType=e,t.type=r,t.lanes=o,t}function Gl(e,t,n,r){return(e=Il(7,e,r,t)).lanes=n,e}function Kl(e,t,n,r){return(e=Il(23,e,r,t)).elementType=D,e.lanes=n,e}function Jl(e,t,n){return(e=Il(6,e,null,t)).lanes=n,e}function Ql(e,t,n){return(t=Il(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function _l(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ct(0),this.expirationTimes=Ct(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ct(0),this.mutableSourceEagerHydrationData=null}function $l(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function eu(e,t,n,r){var i=t.current,o=dl(),s=hl(i);e:if(n){t:{if(Je(n=n._reactInternals)!==n||1!==n.tag)throw Error(a(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(vi(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(a(171))}if(1===n.tag){var u=n.type;if(vi(u)){n=wi(n,u,l);break e}}n=l}else n=di;return null===t.context?t.context=n:t.pendingContext=n,(t=co(o,s)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),fo(i,t),pl(i,s,o),s}function tu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function nu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ru(e,t){nu(e,t),(e=e.alternate)&&nu(e,t)}function iu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new _l(e,t,null!=n&&!0===n.hydrate),t=Il(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,lo(t),e[ei]=n.current,Hr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var i=(t=r[e])._getVersion;i=i(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,i]:n.mutableSourceEagerHydrationData.push(t,i)}this._internalRoot=n}function ou(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function au(e,t,n,r,i){var o=n._reactRootContainer;if(o){var a=o._internalRoot;if("function"===typeof i){var s=i;i=function(){var e=tu(a);s.call(e)}}eu(t,a,e,i)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new iu(e,0,t?{hydrate:!0}:void 0)}(n,r),a=o._internalRoot,"function"===typeof i){var l=i;i=function(){var e=tu(a);l.call(e)}}xl((function(){eu(t,a,e,i)}))}return tu(a)}function su(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ou(t))throw Error(a(200));return $l(e,t,null,n)}Gs=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||pi.current)Da=!0;else{if(0===(n&r)){switch(Da=!1,t.tag){case 3:Va(t),Go();break;case 5:Zo(t);break;case 1:vi(t.type)&&xi(t);break;case 4:Ao(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var i=t.type._context;fi(_i,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(n&t.child.childLanes)?_a(e,t,n):(fi(Ro,1&Ro.current),null!==(t=os(e,t,n))?t.sibling:null);fi(Ro,1&Ro.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(64&e.flags)){if(r)return is(e,t,n);t.flags|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),fi(Ro,Ro.current),r)break;return null;case 23:case 24:return t.lanes=0,Ca(e,t,n)}return os(e,t,n)}Da=0!==(16384&e.flags)}else Da=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,i=yi(t,hi.current),oo(t,n),i=sa(null,t,r,e,i,n),t.flags|=1,"object"===typeof i&&null!==i&&"function"===typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vi(r)){var o=!0;xi(t)}else o=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,lo(t);var s=r.getDerivedStateFromProps;"function"===typeof s&&vo(t,r,s,e),i.updater=bo,t.stateNode=i,i._reactInternals=t,Po(t,r,e,n),t=Ya(null,t,r,!0,o,n)}else t.tag=0,Ra(null,t,i,n),t=t.child;return t;case 16:i=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,i=(o=i._init)(i._payload),t.type=i,o=t.tag=function(e){if("function"===typeof e)return Bl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===j)return 11;if(e===H)return 14}return 2}(i),e=Qi(i,e),o){case 0:t=Ia(null,t,i,e,n);break e;case 1:t=Ba(null,t,i,e,n);break e;case 11:t=Ua(null,t,i,e,n);break e;case 14:t=Fa(null,t,i,Qi(i.type,e),r,n);break e}throw Error(a(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Ia(e,t,r,i=t.elementType===r?i:Qi(r,i),n);case 1:return r=t.type,i=t.pendingProps,Ba(e,t,r,i=t.elementType===r?i:Qi(r,i),n);case 3:if(Va(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,uo(e,t),po(t,r,null,n),(r=t.memoizedState.element)===i)Go(),t=os(e,t,n);else{if((o=(i=t.stateNode).hydrate)&&(Wo=Gr(t.stateNode.containerInfo.firstChild),Fo=t,o=Co=!0),o){if(null!=(e=i.mutableSourceEagerHydrationData))for(i=0;i<e.length;i+=2)(o=e[i])._workInProgressVersionPrimary=e[i+1],Ko.push(o);for(n=To(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ra(e,t,r,n),Go();t=t.child}return t;case 5:return Zo(t),null===e&&Bo(t),r=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,s=i.children,Ir(r,i)?s=null:null!==o&&Ir(r,o)&&(t.flags|=16),qa(e,t),Ra(e,t,s,n),t.child;case 6:return null===e&&Bo(t),null;case 13:return _a(e,t,n);case 4:return Ao(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Oo(t,null,r,n):Ra(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Ua(e,t,r,i=t.elementType===r?i:Qi(r,i),n);case 7:return Ra(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ra(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,s=t.memoizedProps,o=i.value;var l=t.type._context;if(fi(_i,l._currentValue),l._currentValue=o,null!==s)if(l=s.value,0===(o=cr(l,o)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(l,o):1073741823))){if(s.children===i.children&&!pi.current){t=os(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){s=l.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!==(c.observedBits&o)){1===l.tag&&((c=co(-1,n&-n)).tag=2,fo(l,c)),l.lanes|=n,null!==(c=l.alternate)&&(c.lanes|=n),io(l.return,n),u.lanes|=n;break}c=c.next}}else s=10===l.tag&&l.type===t.type?null:l.child;if(null!==s)s.return=l;else for(s=l;null!==s;){if(s===t){s=null;break}if(null!==(l=s.sibling)){l.return=s.return,s=l;break}s=s.return}l=s}Ra(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(o=t.pendingProps).children,oo(t,n),r=r(i=ao(i,o.unstable_observedBits)),t.flags|=1,Ra(e,t,r,n),t.child;case 14:return o=Qi(i=t.type,t.pendingProps),Fa(e,t,i,o=Qi(i.type,o),r,n);case 15:return Wa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Qi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,vi(r)?(e=!0,xi(t)):e=!1,oo(t,n),wo(t,r,i),Po(t,r,i,n),Ya(null,t,r,!0,e,n);case 19:return is(e,t,n);case 23:case 24:return Ca(e,t,n)}throw Error(a(156,t.tag))},iu.prototype.render=function(e){eu(e,this._internalRoot,null,null)},iu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;eu(null,e,null,(function(){t[ei]=null}))},tt=function(e){13===e.tag&&(pl(e,4,dl()),ru(e,4))},nt=function(e){13===e.tag&&(pl(e,67108864,dl()),ru(e,67108864))},rt=function(e){if(13===e.tag){var t=dl(),n=hl(e);pl(e,n,t),ru(e,n)}},it=function(e,t){return t()},Oe=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=oi(r);if(!i)throw Error(a(90));Q(r),ne(r,i)}}}break;case"textarea":ue(e,n);break;case"select":null!=(t=n.value)&&ae(e,!!n.multiple,t,!1)}},Xe=wl,Ae=function(e,t,n,r,i){var o=Hs;Hs|=4;try{return Yi(98,e.bind(null,t,n,r,i))}finally{0===(Hs=o)&&(Vs(),Gi())}},Se=function(){0===(49&Hs)&&(function(){if(null!==il){var e=il;il=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,yl(e,qi())}))}Gi()}(),Sl())},Ze=function(e,t){var n=Hs;Hs|=2;try{return e(t)}finally{0===(Hs=n)&&(Vs(),Gi())}};var lu={Events:[ri,ii,oi,Ee,He,Sl,{current:!1}]},uu={findFiberByHostInstance:ni,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},cu={bundleType:uu.bundleType,version:uu.version,rendererPackageName:uu.rendererPackageName,rendererConfig:uu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:uu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var fu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!fu.isDisabled&&fu.supportsFiber)try{ki=fu.inject(cu),zi=fu}catch(ye){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lu,t.createPortal=su,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Hs;if(0!==(48&n))return e(t);Hs|=1;try{if(e)return Yi(99,e.bind(null,t))}finally{Hs=n,Gi()}},t.hydrate=function(e,t,n){if(!ou(t))throw Error(a(200));return au(null,e,t,!0,n)},t.render=function(e,t,n){if(!ou(t))throw Error(a(200));return au(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!ou(e))throw Error(a(40));return!!e._reactRootContainer&&(xl((function(){au(null,null,e,!1,(function(){e._reactRootContainer=null,e[ei]=null}))})),!0)},t.unstable_batchedUpdates=wl,t.unstable_createPortal=function(e,t){return su(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!ou(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return au(e,t,n,!1,r)},t.version="17.0.2"},164:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(463)},374:(e,t,n)=>{"use strict";n(725);var r=n(791),i=60103;if(t.Fragment=60107,"function"===typeof Symbol&&Symbol.for){var o=Symbol.for;i=o("react.element"),t.Fragment=o("react.fragment")}var a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s=Object.prototype.hasOwnProperty,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,o={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)s.call(t,r)&&!l.hasOwnProperty(r)&&(o[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===o[r]&&(o[r]=t[r]);return{$$typeof:i,type:e,key:u,ref:c,props:o,_owner:a.current}}t.jsx=u,t.jsxs=u},117:(e,t,n)=>{"use strict";var r=n(725),i=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var a=60109,s=60110,l=60112;t.Suspense=60113;var u=60115,c=60116;if("function"===typeof Symbol&&Symbol.for){var f=Symbol.for;i=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),a=f("react.provider"),s=f("react.context"),l=f("react.forward_ref"),t.Suspense=f("react.suspense"),u=f("react.memo"),c=f("react.lazy")}var d="function"===typeof Symbol&&Symbol.iterator;function h(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||p}function v(){}function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||p}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var g=b.prototype=new v;g.constructor=b,r(g,y.prototype),g.isPureReactComponent=!0;var w={current:null},x=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function k(e,t,n){var r,o={},a=null,s=null;if(null!=t)for(r in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(a=""+t.key),t)x.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:i,type:e,key:a,ref:s,props:o,_owner:w.current}}function z(e){return"object"===typeof e&&null!==e&&e.$$typeof===i}var M=/\/+/g;function N(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function O(e,t,n,r,a){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case i:case o:l=!0}}if(l)return a=a(l=e),e=""===r?"."+N(l,0):r,Array.isArray(a)?(n="",null!=e&&(n=e.replace(M,"$&/")+"/"),O(a,t,n,"",(function(e){return e}))):null!=a&&(z(a)&&(a=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(a,n+(!a.key||l&&l.key===a.key?"":(""+a.key).replace(M,"$&/")+"/")+e)),t.push(a)),1;if(l=0,r=""===r?".":r+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=r+N(s=e[u],u);l+=O(s,t,n,c,a)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(s=e.next()).done;)l+=O(s=s.value,t,n,c=r+N(s,u++),a);else if("object"===s)throw t=""+e,Error(h(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return l}function T(e,t,n){if(null==e)return e;var r=[],i=0;return O(e,r,"","",(function(e){return t.call(n,e,i++)})),r}function j(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var L={current:null};function E(){var e=L.current;if(null===e)throw Error(h(321));return e}var H={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!z(e))throw Error(h(143));return e}},t.Component=y,t.PureComponent=b,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=H,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error(h(267,e));var o=r({},e.props),a=e.key,s=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,l=w.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)x.call(t,c)&&!P.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){u=Array(c);for(var f=0;f<c;f++)u[f]=arguments[f+2];o.children=u}return{$$typeof:i,type:e.type,key:a,ref:s,props:o,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:s,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},t.createElement=k,t.createFactory=function(e){var t=k.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=z,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:j}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return E().useCallback(e,t)},t.useContext=function(e,t){return E().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return E().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return E().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return E().useLayoutEffect(e,t)},t.useMemo=function(e,t){return E().useMemo(e,t)},t.useReducer=function(e,t,n){return E().useReducer(e,t,n)},t.useRef=function(e){return E().useRef(e)},t.useState=function(e){return E().useState(e)},t.version="17.0.2"},791:(e,t,n)=>{"use strict";e.exports=n(117)},184:(e,t,n)=>{"use strict";e.exports=n(374)},813:(e,t)=>{"use strict";var n,r,i,o;if("object"===typeof performance&&"function"===typeof performance.now){var a=performance;t.unstable_now=function(){return a.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var u=null,c=null,f=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(n){throw setTimeout(f,0),n}};n=function(e){null!==u?setTimeout(n,0,e):(u=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,h=window.clearTimeout;if("undefined"!==typeof console){var p=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof p&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,y=null,v=-1,b=5,g=0;t.unstable_shouldYield=function(){return t.unstable_now()>=g},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,x=w.port2;w.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();g=e+b;try{y(!0,e)?x.postMessage(null):(m=!1,y=null)}catch(n){throw x.postMessage(null),n}}else m=!1},n=function(e){y=e,m||(m=!0,x.postMessage(null))},r=function(e,n){v=d((function(){e(t.unstable_now())}),n)},i=function(){h(v),v=-1}}function P(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<M(i,t)))break e;e[r]=t,e[n]=i,n=r}}function k(e){return void 0===(e=e[0])?null:e}function z(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var o=2*(r+1)-1,a=e[o],s=o+1,l=e[s];if(void 0!==a&&0>M(a,n))void 0!==l&&0>M(l,a)?(e[r]=l,e[s]=n,r=s):(e[r]=a,e[o]=n,r=o);else{if(!(void 0!==l&&0>M(l,n)))break e;e[r]=l,e[s]=n,r=s}}}return t}return null}function M(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var N=[],O=[],T=1,j=null,L=3,E=!1,H=!1,X=!1;function A(e){for(var t=k(O);null!==t;){if(null===t.callback)z(O);else{if(!(t.startTime<=e))break;z(O),t.sortIndex=t.expirationTime,P(N,t)}t=k(O)}}function S(e){if(X=!1,A(e),!H)if(null!==k(N))H=!0,n(Z);else{var t=k(O);null!==t&&r(S,t.startTime-e)}}function Z(e,n){H=!1,X&&(X=!1,i()),E=!0;var o=L;try{for(A(n),j=k(N);null!==j&&(!(j.expirationTime>n)||e&&!t.unstable_shouldYield());){var a=j.callback;if("function"===typeof a){j.callback=null,L=j.priorityLevel;var s=a(j.expirationTime<=n);n=t.unstable_now(),"function"===typeof s?j.callback=s:j===k(N)&&z(N),A(n)}else z(N);j=k(N)}if(null!==j)var l=!0;else{var u=k(O);null!==u&&r(S,u.startTime-n),l=!1}return l}finally{j=null,L=o,E=!1}}var D=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){H||E||(H=!0,n(Z))},t.unstable_getCurrentPriorityLevel=function(){return L},t.unstable_getFirstCallbackNode=function(){return k(N)},t.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},t.unstable_scheduleCallback=function(e,o,a){var s=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?s+a:s:a=s,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:T++,callback:o,priorityLevel:e,startTime:a,expirationTime:l=a+l,sortIndex:-1},a>s?(e.sortIndex=a,P(O,e),null===k(N)&&e===k(O)&&(X?i():X=!0,r(S,a-s))):(e.sortIndex=l,P(N,e),H||E||(H=!0,n(Z))),e},t.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}}},296:(e,t,n)=>{"use strict";e.exports=n(813)},648:(e,t)=>{"use strict";function n(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function r(){const e=(e,t)=>n=>e(t(n));for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];const i=Array.from(n).reverse().reduce(((t,n)=>t?e(t,n.encode):n.encode),void 0),o=n.reduce(((t,n)=>t?e(t,n.decode):n.decode),void 0);return{encode:i,decode:o}}function i(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!==typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(n(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!==typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{if("string"!==typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const n=e.indexOf(t);if(-1===n)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return n}))}}}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if("string"!==typeof e)throw new Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!==typeof t[0])throw new Error("join.encode input should be array of strings");for(let e of t)if("string"!==typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if("string"!==typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"=";if(n(e),"string"!==typeof t)throw new Error("padding chr should be string");return{encode(n){if(!Array.isArray(n)||n.length&&"string"!==typeof n[0])throw new Error("padding.encode input should be array of strings");for(let e of n)if("string"!==typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;n.length*e%8;)n.push(t);return n},decode(n){if(!Array.isArray(n)||n.length&&"string"!==typeof n[0])throw new Error("padding.encode input should be array of strings");for(let e of n)if("string"!==typeof e)throw new Error(`padding.decode: non-string input=${e}`);let r=n.length;if(r*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;r>0&&n[r-1]===t;r--)if(!((r-1)*e%8))throw new Error("Invalid padding: string has too much padding");return n.slice(0,r)}}}function s(e){if("function"!==typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:t=>e(t)}}function l(e,t,r){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(r<2)throw new Error(`convertRadix: wrong to=${r}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let i=0;const o=[],a=Array.from(e);for(a.forEach((e=>{if(n(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,n=!0;for(let o=i;o<a.length;o++){const s=a[o],l=t*e+s;if(!Number.isSafeInteger(l)||t*e/t!==e||l-s!==t*e)throw new Error("convertRadix: carry overflow");if(e=l%r,a[o]=Math.floor(l/r),!Number.isSafeInteger(a[o])||a[o]*r+e!==l)throw new Error("convertRadix: carry overflow");n&&(a[o]?n=!1:i=o)}if(o.push(e),n)break}for(let n=0;n<e.length-1&&0===e[n];n++)o.push(0);return o.reverse()}t.qX=t.d3=t.$v=t.KA=t.S_=t.Jq=t.tH=t.US=t.pJ=t.YU=void 0;const u=(e,t)=>t?u(t,e%t):e,c=(e,t)=>e+(t-u(e,t));function f(e,t,r,i){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(r<=0||r>32)throw new Error(`convertRadix2: wrong to=${r}`);if(c(t,r)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${r} carryBits=${c(t,r)}`);let o=0,a=0;const s=2**r-1,l=[];for(const u of e){if(n(u),u>=2**t)throw new Error(`convertRadix2: invalid data word=${u} from=${t}`);if(o=o<<t|u,a+t>32)throw new Error(`convertRadix2: carry overflow pos=${a} from=${t}`);for(a+=t;a>=r;a-=r)l.push((o>>a-r&s)>>>0);o&=2**a-1}if(o=o<<r-a&s,!i&&a>=t)throw new Error("Excess padding");if(!i&&o)throw new Error(`Non-zero padding: ${o}`);return i&&a>0&&l.push(o>>>0),l}function d(e){return n(e),{encode:t=>{if(!(t instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return l(Array.from(t),256,e)},decode:t=>{if(!Array.isArray(t)||t.length&&"number"!==typeof t[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(l(t,e,256))}}}function h(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(n(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(c(8,e)>32||c(e,8)>32)throw new Error("radix2: carry overflow");return{encode:n=>{if(!(n instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return f(Array.from(n),8,e,!t)},decode:n=>{if(!Array.isArray(n)||n.length&&"number"!==typeof n[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(f(n,e,8,t))}}}function p(e){if("function"!==typeof e)throw new Error("unsafeWrapper fn should be function");return function(){try{for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.apply(null,n)}catch(i){}}}function m(e,t){if(n(e),"function"!==typeof t)throw new Error("checksum fn should be function");return{encode(n){if(!(n instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const r=t(n).slice(0,e),i=new Uint8Array(n.length+e);return i.set(n),i.set(r,n.length),i},decode(n){if(!(n instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const r=n.slice(0,-e),i=t(r).slice(0,e),o=n.slice(-e);for(let t=0;t<e;t++)if(i[t]!==o[t])throw new Error("Invalid checksum");return r}}}t.YU=r(h(4),i("0123456789ABCDEF"),o("")),t.pJ=r(h(5),i("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),a(5),o("")),r(h(5),i("0123456789ABCDEFGHIJKLMNOPQRSTUV"),a(5),o("")),r(h(5),i("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),o(""),s((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),t.US=r(h(6),i("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),a(6),o("")),t.tH=r(h(6),i("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),a(6),o(""));const y=e=>r(d(58),i(e),o(""));t.Jq=y("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),y("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),y("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const v=[0,2,3,5,6,7,9,10,11];t.S_={encode(e){let n="";for(let r=0;r<e.length;r+=8){const i=e.subarray(r,r+8);n+=t.Jq.encode(i).padStart(v[i.length],"1")}return n},decode(e){let n=[];for(let r=0;r<e.length;r+=11){const i=e.slice(r,r+11),o=v.indexOf(i.length),a=t.Jq.decode(i);for(let e=0;e<a.length-o;e++)if(0!==a[e])throw new Error("base58xmr: wrong padding");n=n.concat(Array.from(a.slice(a.length-o)))}return Uint8Array.from(n)}};const b=r(i("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),o("")),g=[996825010,642813549,513874426,1027748829,705979059];function w(e){const t=e>>25;let n=(33554431&e)<<5;for(let r=0;r<g.length;r++)1===(t>>r&1)&&(n^=g[r]);return n}function x(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=e.length;let i=1;for(let o=0;o<r;o++){const t=e.charCodeAt(o);if(t<33||t>126)throw new Error(`Invalid prefix (${e})`);i=w(i)^t>>5}i=w(i);for(let o=0;o<r;o++)i=w(i)^31&e.charCodeAt(o);for(let o of t)i=w(i)^o;for(let o=0;o<6;o++)i=w(i);return i^=n,b.encode(f([i%2**30],30,5,!1))}function P(e){const t="bech32"===e?1:734539939,n=h(5),r=n.decode,i=n.encode,o=p(r);function a(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:90;if("string"!==typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==n&&e.length>n)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${n})`);const r=e.toLowerCase();if(e!==r&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const i=(e=r).lastIndexOf("1");if(0===i||-1===i)throw new Error('Letter "1" must be present between prefix and data only');const[o,a]=[e.slice(0,i),e.slice(i+1)];if(a.length<6)throw new Error("Data must be at least 6 characters long");const s=b.decode(a).slice(0,-6),l=x(o,s,t);if(!a.endsWith(l))throw new Error(`Invalid checksum in ${e}: expected "${l}"`);return{prefix:o,words:s}}return{encode:function(e,n){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:90;if("string"!==typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(!Array.isArray(n)||n.length&&"number"!==typeof n[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof n);const i=e.length+7+n.length;if(!1!==r&&i>r)throw new TypeError(`Length ${i} exceeds limit ${r}`);return`${e=e.toLowerCase()}1${b.encode(n)}${x(e,n,t)}`},decode:a,decodeToBytes:function(e){const{prefix:t,words:n}=a(e,!1);return{prefix:t,words:n,bytes:r(n)}},decodeUnsafe:p(a),fromWords:r,fromWordsUnsafe:o,toWords:i}}P("bech32"),P("bech32m"),t.KA={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},t.$v=r(h(4),i("0123456789abcdef"),o(""),s((e=>{if("string"!==typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()})));const k={utf8:t.KA,hex:t.$v,base16:t.YU,base32:t.pJ,base64:t.US,base64url:t.tH,base58:t.Jq,base58xmr:t.S_},z=`Invalid encoding type. Available types: ${Object.keys(k).join(", ")}`;t.d3=(e,t)=>{if("string"!==typeof e||!k.hasOwnProperty(e))throw new TypeError(z);if(!(t instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return k[e].encode(t)},t.d3;t.qX=(e,t)=>{if(!k.hasOwnProperty(e))throw new TypeError(z);if("string"!==typeof t)throw new TypeError("stringToBytes() expects string");return k[e].decode(t)},t.qX},86:function(e,t,n){!function(e,t){"use strict";function r(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}function o(e,t,n){if(o.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(n=t,t=10),this._init(e||0,t||10,n||"be"))}var a;"object"===typeof e?e.exports=o:t.BN=o,o.BN=o,o.wordSize=26;try{a="undefined"!==typeof window&&"undefined"!==typeof window.Buffer?window.Buffer:n(341).Buffer}catch(T){}function s(e,t){var n=e.charCodeAt(t);return n>=48&&n<=57?n-48:n>=65&&n<=70?n-55:n>=97&&n<=102?n-87:void r(!1,"Invalid character in "+e)}function l(e,t,n){var r=s(e,n);return n-1>=t&&(r|=s(e,n-1)<<4),r}function u(e,t,n,i){for(var o=0,a=0,s=Math.min(e.length,n),l=t;l<s;l++){var u=e.charCodeAt(l)-48;o*=i,a=u>=49?u-49+10:u>=17?u-17+10:u,r(u>=0&&a<i,"Invalid character"),o+=a}return o}function c(e,t){e.words=t.words,e.length=t.length,e.negative=t.negative,e.red=t.red}if(o.isBN=function(e){return e instanceof o||null!==e&&"object"===typeof e&&e.constructor.wordSize===o.wordSize&&Array.isArray(e.words)},o.max=function(e,t){return e.cmp(t)>0?e:t},o.min=function(e,t){return e.cmp(t)<0?e:t},o.prototype._init=function(e,t,n){if("number"===typeof e)return this._initNumber(e,t,n);if("object"===typeof e)return this._initArray(e,t,n);"hex"===t&&(t=16),r(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,n):(this._parseBase(e,t,i),"le"===n&&this._initArray(this.toArray(),t,n)))},o.prototype._initNumber=function(e,t,n){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(r(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),t,n)},o.prototype._initArray=function(e,t,n){if(r("number"===typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,a,s=0;if("be"===n)for(i=e.length-1,o=0;i>=0;i-=3)a=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[o]|=a<<s&67108863,this.words[o+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);else if("le"===n)for(i=0,o=0;i<e.length;i+=3)a=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[o]|=a<<s&67108863,this.words[o+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);return this._strip()},o.prototype._parseHex=function(e,t,n){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var i,o=0,a=0;if("be"===n)for(r=e.length-1;r>=t;r-=2)i=l(e,t,r)<<o,this.words[a]|=67108863&i,o>=18?(o-=18,a+=1,this.words[a]|=i>>>26):o+=8;else for(r=(e.length-t)%2===0?t+1:t;r<e.length;r+=2)i=l(e,t,r)<<o,this.words[a]|=67108863&i,o>=18?(o-=18,a+=1,this.words[a]|=i>>>26):o+=8;this._strip()},o.prototype._parseBase=function(e,t,n){this.words=[0],this.length=1;for(var r=0,i=1;i<=67108863;i*=t)r++;r--,i=i/t|0;for(var o=e.length-n,a=o%r,s=Math.min(o,o-a)+n,l=0,c=n;c<s;c+=r)l=u(e,c,c+r,t),this.imuln(i),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l);if(0!==a){var f=1;for(l=u(e,c,e.length,t),c=0;c<a;c++)f*=t;this.imuln(f),this.words[0]+l<67108864?this.words[0]+=l:this._iaddn(l)}this._strip()},o.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},o.prototype._move=function(e){c(e,this)},o.prototype.clone=function(){var e=new o(null);return this.copy(e),e},o.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},o.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!==typeof Symbol&&"function"===typeof Symbol.for)try{o.prototype[Symbol.for("nodejs.util.inspect.custom")]=f}catch(T){o.prototype.inspect=f}else o.prototype.inspect=f;function f(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var d=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],h=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];o.prototype.toString=function(e,t){var n;if(t=0|t||1,16===(e=e||10)||"hex"===e){n="";for(var i=0,o=0,a=0;a<this.length;a++){var s=this.words[a],l=(16777215&(s<<i|o)).toString(16);n=0!==(o=s>>>24-i&16777215)||a!==this.length-1?d[6-l.length]+l+n:l+n,(i+=2)>=26&&(i-=26,a--)}for(0!==o&&(n=o.toString(16)+n);n.length%t!==0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(e===(0|e)&&e>=2&&e<=36){var u=h[e],c=p[e];n="";var f=this.clone();for(f.negative=0;!f.isZero();){var m=f.modrn(c).toString(e);n=(f=f.idivn(c)).isZero()?m+n:d[u-m.length]+m+n}for(this.isZero()&&(n="0"+n);n.length%t!==0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},o.prototype.toJSON=function(){return this.toString(16,2)},a&&(o.prototype.toBuffer=function(e,t){return this.toArrayLike(a,e,t)}),o.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)};function m(e,t,n){n.negative=t.negative^e.negative;var r=e.length+t.length|0;n.length=r,r=r-1|0;var i=0|e.words[0],o=0|t.words[0],a=i*o,s=67108863&a,l=a/67108864|0;n.words[0]=s;for(var u=1;u<r;u++){for(var c=l>>>26,f=67108863&l,d=Math.min(u,t.length-1),h=Math.max(0,u-e.length+1);h<=d;h++){var p=u-h|0;c+=(a=(i=0|e.words[p])*(o=0|t.words[h])+f)/67108864|0,f=67108863&a}n.words[u]=0|f,l=0|c}return 0!==l?n.words[u]=0|l:n.length--,n._strip()}o.prototype.toArrayLike=function(e,t,n){this._strip();var i=this.byteLength(),o=n||Math.max(1,i);r(i<=o,"byte array longer than desired length"),r(o>0,"Requested array length <= 0");var a=function(e,t){return e.allocUnsafe?e.allocUnsafe(t):new e(t)}(e,o);return this["_toArrayLike"+("le"===t?"LE":"BE")](a,i),a},o.prototype._toArrayLikeLE=function(e,t){for(var n=0,r=0,i=0,o=0;i<this.length;i++){var a=this.words[i]<<o|r;e[n++]=255&a,n<e.length&&(e[n++]=a>>8&255),n<e.length&&(e[n++]=a>>16&255),6===o?(n<e.length&&(e[n++]=a>>24&255),r=0,o=0):(r=a>>>24,o+=2)}if(n<e.length)for(e[n++]=r;n<e.length;)e[n++]=0},o.prototype._toArrayLikeBE=function(e,t){for(var n=e.length-1,r=0,i=0,o=0;i<this.length;i++){var a=this.words[i]<<o|r;e[n--]=255&a,n>=0&&(e[n--]=a>>8&255),n>=0&&(e[n--]=a>>16&255),6===o?(n>=0&&(e[n--]=a>>24&255),r=0,o=0):(r=a>>>24,o+=2)}if(n>=0)for(e[n--]=r;n>=0;)e[n--]=0},Math.clz32?o.prototype._countBits=function(e){return 32-Math.clz32(e)}:o.prototype._countBits=function(e){var t=e,n=0;return t>=4096&&(n+=13,t>>>=13),t>=64&&(n+=7,t>>>=7),t>=8&&(n+=4,t>>>=4),t>=2&&(n+=2,t>>>=2),n+t},o.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,n=0;return 0===(8191&t)&&(n+=13,t>>>=13),0===(127&t)&&(n+=7,t>>>=7),0===(15&t)&&(n+=4,t>>>=4),0===(3&t)&&(n+=2,t>>>=2),0===(1&t)&&n++,n},o.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var n=this._zeroBits(this.words[t]);if(e+=n,26!==n)break}return e},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},o.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},o.prototype.ior=function(e){return r(0===(this.negative|e.negative)),this.iuor(e)},o.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},o.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},o.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var n=0;n<t.length;n++)this.words[n]=this.words[n]&e.words[n];return this.length=t.length,this._strip()},o.prototype.iand=function(e){return r(0===(this.negative|e.negative)),this.iuand(e)},o.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},o.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},o.prototype.iuxor=function(e){var t,n;this.length>e.length?(t=this,n=e):(t=e,n=this);for(var r=0;r<n.length;r++)this.words[r]=t.words[r]^n.words[r];if(this!==t)for(;r<t.length;r++)this.words[r]=t.words[r];return this.length=t.length,this._strip()},o.prototype.ixor=function(e){return r(0===(this.negative|e.negative)),this.iuxor(e)},o.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},o.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},o.prototype.inotn=function(e){r("number"===typeof e&&e>=0);var t=0|Math.ceil(e/26),n=e%26;this._expand(t),n>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return n>0&&(this.words[i]=~this.words[i]&67108863>>26-n),this._strip()},o.prototype.notn=function(e){return this.clone().inotn(e)},o.prototype.setn=function(e,t){r("number"===typeof e&&e>=0);var n=e/26|0,i=e%26;return this._expand(n+1),this.words[n]=t?this.words[n]|1<<i:this.words[n]&~(1<<i),this._strip()},o.prototype.iadd=function(e){var t,n,r;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(n=this,r=e):(n=e,r=this);for(var i=0,o=0;o<r.length;o++)t=(0|n.words[o])+(0|r.words[o])+i,this.words[o]=67108863&t,i=t>>>26;for(;0!==i&&o<n.length;o++)t=(0|n.words[o])+i,this.words[o]=67108863&t,i=t>>>26;if(this.length=n.length,0!==i)this.words[this.length]=i,this.length++;else if(n!==this)for(;o<n.length;o++)this.words[o]=n.words[o];return this},o.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},o.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var n,r,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(n=this,r=e):(n=e,r=this);for(var o=0,a=0;a<r.length;a++)o=(t=(0|n.words[a])-(0|r.words[a])+o)>>26,this.words[a]=67108863&t;for(;0!==o&&a<n.length;a++)o=(t=(0|n.words[a])+o)>>26,this.words[a]=67108863&t;if(0===o&&a<n.length&&n!==this)for(;a<n.length;a++)this.words[a]=n.words[a];return this.length=Math.max(this.length,a),n!==this&&(this.negative=1),this._strip()},o.prototype.sub=function(e){return this.clone().isub(e)};var y=function(e,t,n){var r,i,o,a=e.words,s=t.words,l=n.words,u=0,c=0|a[0],f=8191&c,d=c>>>13,h=0|a[1],p=8191&h,m=h>>>13,y=0|a[2],v=8191&y,b=y>>>13,g=0|a[3],w=8191&g,x=g>>>13,P=0|a[4],k=8191&P,z=P>>>13,M=0|a[5],N=8191&M,O=M>>>13,T=0|a[6],j=8191&T,L=T>>>13,E=0|a[7],H=8191&E,X=E>>>13,A=0|a[8],S=8191&A,Z=A>>>13,D=0|a[9],R=8191&D,U=D>>>13,F=0|s[0],W=8191&F,C=F>>>13,q=0|s[1],I=8191&q,B=q>>>13,Y=0|s[2],V=8191&Y,G=Y>>>13,K=0|s[3],J=8191&K,Q=K>>>13,_=0|s[4],$=8191&_,ee=_>>>13,te=0|s[5],ne=8191&te,re=te>>>13,ie=0|s[6],oe=8191&ie,ae=ie>>>13,se=0|s[7],le=8191&se,ue=se>>>13,ce=0|s[8],fe=8191&ce,de=ce>>>13,he=0|s[9],pe=8191&he,me=he>>>13;n.negative=e.negative^t.negative,n.length=19;var ye=(u+(r=Math.imul(f,W))|0)+((8191&(i=(i=Math.imul(f,C))+Math.imul(d,W)|0))<<13)|0;u=((o=Math.imul(d,C))+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,r=Math.imul(p,W),i=(i=Math.imul(p,C))+Math.imul(m,W)|0,o=Math.imul(m,C);var ve=(u+(r=r+Math.imul(f,I)|0)|0)+((8191&(i=(i=i+Math.imul(f,B)|0)+Math.imul(d,I)|0))<<13)|0;u=((o=o+Math.imul(d,B)|0)+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,r=Math.imul(v,W),i=(i=Math.imul(v,C))+Math.imul(b,W)|0,o=Math.imul(b,C),r=r+Math.imul(p,I)|0,i=(i=i+Math.imul(p,B)|0)+Math.imul(m,I)|0,o=o+Math.imul(m,B)|0;var be=(u+(r=r+Math.imul(f,V)|0)|0)+((8191&(i=(i=i+Math.imul(f,G)|0)+Math.imul(d,V)|0))<<13)|0;u=((o=o+Math.imul(d,G)|0)+(i>>>13)|0)+(be>>>26)|0,be&=67108863,r=Math.imul(w,W),i=(i=Math.imul(w,C))+Math.imul(x,W)|0,o=Math.imul(x,C),r=r+Math.imul(v,I)|0,i=(i=i+Math.imul(v,B)|0)+Math.imul(b,I)|0,o=o+Math.imul(b,B)|0,r=r+Math.imul(p,V)|0,i=(i=i+Math.imul(p,G)|0)+Math.imul(m,V)|0,o=o+Math.imul(m,G)|0;var ge=(u+(r=r+Math.imul(f,J)|0)|0)+((8191&(i=(i=i+Math.imul(f,Q)|0)+Math.imul(d,J)|0))<<13)|0;u=((o=o+Math.imul(d,Q)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,r=Math.imul(k,W),i=(i=Math.imul(k,C))+Math.imul(z,W)|0,o=Math.imul(z,C),r=r+Math.imul(w,I)|0,i=(i=i+Math.imul(w,B)|0)+Math.imul(x,I)|0,o=o+Math.imul(x,B)|0,r=r+Math.imul(v,V)|0,i=(i=i+Math.imul(v,G)|0)+Math.imul(b,V)|0,o=o+Math.imul(b,G)|0,r=r+Math.imul(p,J)|0,i=(i=i+Math.imul(p,Q)|0)+Math.imul(m,J)|0,o=o+Math.imul(m,Q)|0;var we=(u+(r=r+Math.imul(f,$)|0)|0)+((8191&(i=(i=i+Math.imul(f,ee)|0)+Math.imul(d,$)|0))<<13)|0;u=((o=o+Math.imul(d,ee)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,r=Math.imul(N,W),i=(i=Math.imul(N,C))+Math.imul(O,W)|0,o=Math.imul(O,C),r=r+Math.imul(k,I)|0,i=(i=i+Math.imul(k,B)|0)+Math.imul(z,I)|0,o=o+Math.imul(z,B)|0,r=r+Math.imul(w,V)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(x,V)|0,o=o+Math.imul(x,G)|0,r=r+Math.imul(v,J)|0,i=(i=i+Math.imul(v,Q)|0)+Math.imul(b,J)|0,o=o+Math.imul(b,Q)|0,r=r+Math.imul(p,$)|0,i=(i=i+Math.imul(p,ee)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,ee)|0;var xe=(u+(r=r+Math.imul(f,ne)|0)|0)+((8191&(i=(i=i+Math.imul(f,re)|0)+Math.imul(d,ne)|0))<<13)|0;u=((o=o+Math.imul(d,re)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,r=Math.imul(j,W),i=(i=Math.imul(j,C))+Math.imul(L,W)|0,o=Math.imul(L,C),r=r+Math.imul(N,I)|0,i=(i=i+Math.imul(N,B)|0)+Math.imul(O,I)|0,o=o+Math.imul(O,B)|0,r=r+Math.imul(k,V)|0,i=(i=i+Math.imul(k,G)|0)+Math.imul(z,V)|0,o=o+Math.imul(z,G)|0,r=r+Math.imul(w,J)|0,i=(i=i+Math.imul(w,Q)|0)+Math.imul(x,J)|0,o=o+Math.imul(x,Q)|0,r=r+Math.imul(v,$)|0,i=(i=i+Math.imul(v,ee)|0)+Math.imul(b,$)|0,o=o+Math.imul(b,ee)|0,r=r+Math.imul(p,ne)|0,i=(i=i+Math.imul(p,re)|0)+Math.imul(m,ne)|0,o=o+Math.imul(m,re)|0;var Pe=(u+(r=r+Math.imul(f,oe)|0)|0)+((8191&(i=(i=i+Math.imul(f,ae)|0)+Math.imul(d,oe)|0))<<13)|0;u=((o=o+Math.imul(d,ae)|0)+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,r=Math.imul(H,W),i=(i=Math.imul(H,C))+Math.imul(X,W)|0,o=Math.imul(X,C),r=r+Math.imul(j,I)|0,i=(i=i+Math.imul(j,B)|0)+Math.imul(L,I)|0,o=o+Math.imul(L,B)|0,r=r+Math.imul(N,V)|0,i=(i=i+Math.imul(N,G)|0)+Math.imul(O,V)|0,o=o+Math.imul(O,G)|0,r=r+Math.imul(k,J)|0,i=(i=i+Math.imul(k,Q)|0)+Math.imul(z,J)|0,o=o+Math.imul(z,Q)|0,r=r+Math.imul(w,$)|0,i=(i=i+Math.imul(w,ee)|0)+Math.imul(x,$)|0,o=o+Math.imul(x,ee)|0,r=r+Math.imul(v,ne)|0,i=(i=i+Math.imul(v,re)|0)+Math.imul(b,ne)|0,o=o+Math.imul(b,re)|0,r=r+Math.imul(p,oe)|0,i=(i=i+Math.imul(p,ae)|0)+Math.imul(m,oe)|0,o=o+Math.imul(m,ae)|0;var ke=(u+(r=r+Math.imul(f,le)|0)|0)+((8191&(i=(i=i+Math.imul(f,ue)|0)+Math.imul(d,le)|0))<<13)|0;u=((o=o+Math.imul(d,ue)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,r=Math.imul(S,W),i=(i=Math.imul(S,C))+Math.imul(Z,W)|0,o=Math.imul(Z,C),r=r+Math.imul(H,I)|0,i=(i=i+Math.imul(H,B)|0)+Math.imul(X,I)|0,o=o+Math.imul(X,B)|0,r=r+Math.imul(j,V)|0,i=(i=i+Math.imul(j,G)|0)+Math.imul(L,V)|0,o=o+Math.imul(L,G)|0,r=r+Math.imul(N,J)|0,i=(i=i+Math.imul(N,Q)|0)+Math.imul(O,J)|0,o=o+Math.imul(O,Q)|0,r=r+Math.imul(k,$)|0,i=(i=i+Math.imul(k,ee)|0)+Math.imul(z,$)|0,o=o+Math.imul(z,ee)|0,r=r+Math.imul(w,ne)|0,i=(i=i+Math.imul(w,re)|0)+Math.imul(x,ne)|0,o=o+Math.imul(x,re)|0,r=r+Math.imul(v,oe)|0,i=(i=i+Math.imul(v,ae)|0)+Math.imul(b,oe)|0,o=o+Math.imul(b,ae)|0,r=r+Math.imul(p,le)|0,i=(i=i+Math.imul(p,ue)|0)+Math.imul(m,le)|0,o=o+Math.imul(m,ue)|0;var ze=(u+(r=r+Math.imul(f,fe)|0)|0)+((8191&(i=(i=i+Math.imul(f,de)|0)+Math.imul(d,fe)|0))<<13)|0;u=((o=o+Math.imul(d,de)|0)+(i>>>13)|0)+(ze>>>26)|0,ze&=67108863,r=Math.imul(R,W),i=(i=Math.imul(R,C))+Math.imul(U,W)|0,o=Math.imul(U,C),r=r+Math.imul(S,I)|0,i=(i=i+Math.imul(S,B)|0)+Math.imul(Z,I)|0,o=o+Math.imul(Z,B)|0,r=r+Math.imul(H,V)|0,i=(i=i+Math.imul(H,G)|0)+Math.imul(X,V)|0,o=o+Math.imul(X,G)|0,r=r+Math.imul(j,J)|0,i=(i=i+Math.imul(j,Q)|0)+Math.imul(L,J)|0,o=o+Math.imul(L,Q)|0,r=r+Math.imul(N,$)|0,i=(i=i+Math.imul(N,ee)|0)+Math.imul(O,$)|0,o=o+Math.imul(O,ee)|0,r=r+Math.imul(k,ne)|0,i=(i=i+Math.imul(k,re)|0)+Math.imul(z,ne)|0,o=o+Math.imul(z,re)|0,r=r+Math.imul(w,oe)|0,i=(i=i+Math.imul(w,ae)|0)+Math.imul(x,oe)|0,o=o+Math.imul(x,ae)|0,r=r+Math.imul(v,le)|0,i=(i=i+Math.imul(v,ue)|0)+Math.imul(b,le)|0,o=o+Math.imul(b,ue)|0,r=r+Math.imul(p,fe)|0,i=(i=i+Math.imul(p,de)|0)+Math.imul(m,fe)|0,o=o+Math.imul(m,de)|0;var Me=(u+(r=r+Math.imul(f,pe)|0)|0)+((8191&(i=(i=i+Math.imul(f,me)|0)+Math.imul(d,pe)|0))<<13)|0;u=((o=o+Math.imul(d,me)|0)+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,r=Math.imul(R,I),i=(i=Math.imul(R,B))+Math.imul(U,I)|0,o=Math.imul(U,B),r=r+Math.imul(S,V)|0,i=(i=i+Math.imul(S,G)|0)+Math.imul(Z,V)|0,o=o+Math.imul(Z,G)|0,r=r+Math.imul(H,J)|0,i=(i=i+Math.imul(H,Q)|0)+Math.imul(X,J)|0,o=o+Math.imul(X,Q)|0,r=r+Math.imul(j,$)|0,i=(i=i+Math.imul(j,ee)|0)+Math.imul(L,$)|0,o=o+Math.imul(L,ee)|0,r=r+Math.imul(N,ne)|0,i=(i=i+Math.imul(N,re)|0)+Math.imul(O,ne)|0,o=o+Math.imul(O,re)|0,r=r+Math.imul(k,oe)|0,i=(i=i+Math.imul(k,ae)|0)+Math.imul(z,oe)|0,o=o+Math.imul(z,ae)|0,r=r+Math.imul(w,le)|0,i=(i=i+Math.imul(w,ue)|0)+Math.imul(x,le)|0,o=o+Math.imul(x,ue)|0,r=r+Math.imul(v,fe)|0,i=(i=i+Math.imul(v,de)|0)+Math.imul(b,fe)|0,o=o+Math.imul(b,de)|0;var Ne=(u+(r=r+Math.imul(p,pe)|0)|0)+((8191&(i=(i=i+Math.imul(p,me)|0)+Math.imul(m,pe)|0))<<13)|0;u=((o=o+Math.imul(m,me)|0)+(i>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,r=Math.imul(R,V),i=(i=Math.imul(R,G))+Math.imul(U,V)|0,o=Math.imul(U,G),r=r+Math.imul(S,J)|0,i=(i=i+Math.imul(S,Q)|0)+Math.imul(Z,J)|0,o=o+Math.imul(Z,Q)|0,r=r+Math.imul(H,$)|0,i=(i=i+Math.imul(H,ee)|0)+Math.imul(X,$)|0,o=o+Math.imul(X,ee)|0,r=r+Math.imul(j,ne)|0,i=(i=i+Math.imul(j,re)|0)+Math.imul(L,ne)|0,o=o+Math.imul(L,re)|0,r=r+Math.imul(N,oe)|0,i=(i=i+Math.imul(N,ae)|0)+Math.imul(O,oe)|0,o=o+Math.imul(O,ae)|0,r=r+Math.imul(k,le)|0,i=(i=i+Math.imul(k,ue)|0)+Math.imul(z,le)|0,o=o+Math.imul(z,ue)|0,r=r+Math.imul(w,fe)|0,i=(i=i+Math.imul(w,de)|0)+Math.imul(x,fe)|0,o=o+Math.imul(x,de)|0;var Oe=(u+(r=r+Math.imul(v,pe)|0)|0)+((8191&(i=(i=i+Math.imul(v,me)|0)+Math.imul(b,pe)|0))<<13)|0;u=((o=o+Math.imul(b,me)|0)+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,r=Math.imul(R,J),i=(i=Math.imul(R,Q))+Math.imul(U,J)|0,o=Math.imul(U,Q),r=r+Math.imul(S,$)|0,i=(i=i+Math.imul(S,ee)|0)+Math.imul(Z,$)|0,o=o+Math.imul(Z,ee)|0,r=r+Math.imul(H,ne)|0,i=(i=i+Math.imul(H,re)|0)+Math.imul(X,ne)|0,o=o+Math.imul(X,re)|0,r=r+Math.imul(j,oe)|0,i=(i=i+Math.imul(j,ae)|0)+Math.imul(L,oe)|0,o=o+Math.imul(L,ae)|0,r=r+Math.imul(N,le)|0,i=(i=i+Math.imul(N,ue)|0)+Math.imul(O,le)|0,o=o+Math.imul(O,ue)|0,r=r+Math.imul(k,fe)|0,i=(i=i+Math.imul(k,de)|0)+Math.imul(z,fe)|0,o=o+Math.imul(z,de)|0;var Te=(u+(r=r+Math.imul(w,pe)|0)|0)+((8191&(i=(i=i+Math.imul(w,me)|0)+Math.imul(x,pe)|0))<<13)|0;u=((o=o+Math.imul(x,me)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,r=Math.imul(R,$),i=(i=Math.imul(R,ee))+Math.imul(U,$)|0,o=Math.imul(U,ee),r=r+Math.imul(S,ne)|0,i=(i=i+Math.imul(S,re)|0)+Math.imul(Z,ne)|0,o=o+Math.imul(Z,re)|0,r=r+Math.imul(H,oe)|0,i=(i=i+Math.imul(H,ae)|0)+Math.imul(X,oe)|0,o=o+Math.imul(X,ae)|0,r=r+Math.imul(j,le)|0,i=(i=i+Math.imul(j,ue)|0)+Math.imul(L,le)|0,o=o+Math.imul(L,ue)|0,r=r+Math.imul(N,fe)|0,i=(i=i+Math.imul(N,de)|0)+Math.imul(O,fe)|0,o=o+Math.imul(O,de)|0;var je=(u+(r=r+Math.imul(k,pe)|0)|0)+((8191&(i=(i=i+Math.imul(k,me)|0)+Math.imul(z,pe)|0))<<13)|0;u=((o=o+Math.imul(z,me)|0)+(i>>>13)|0)+(je>>>26)|0,je&=67108863,r=Math.imul(R,ne),i=(i=Math.imul(R,re))+Math.imul(U,ne)|0,o=Math.imul(U,re),r=r+Math.imul(S,oe)|0,i=(i=i+Math.imul(S,ae)|0)+Math.imul(Z,oe)|0,o=o+Math.imul(Z,ae)|0,r=r+Math.imul(H,le)|0,i=(i=i+Math.imul(H,ue)|0)+Math.imul(X,le)|0,o=o+Math.imul(X,ue)|0,r=r+Math.imul(j,fe)|0,i=(i=i+Math.imul(j,de)|0)+Math.imul(L,fe)|0,o=o+Math.imul(L,de)|0;var Le=(u+(r=r+Math.imul(N,pe)|0)|0)+((8191&(i=(i=i+Math.imul(N,me)|0)+Math.imul(O,pe)|0))<<13)|0;u=((o=o+Math.imul(O,me)|0)+(i>>>13)|0)+(Le>>>26)|0,Le&=67108863,r=Math.imul(R,oe),i=(i=Math.imul(R,ae))+Math.imul(U,oe)|0,o=Math.imul(U,ae),r=r+Math.imul(S,le)|0,i=(i=i+Math.imul(S,ue)|0)+Math.imul(Z,le)|0,o=o+Math.imul(Z,ue)|0,r=r+Math.imul(H,fe)|0,i=(i=i+Math.imul(H,de)|0)+Math.imul(X,fe)|0,o=o+Math.imul(X,de)|0;var Ee=(u+(r=r+Math.imul(j,pe)|0)|0)+((8191&(i=(i=i+Math.imul(j,me)|0)+Math.imul(L,pe)|0))<<13)|0;u=((o=o+Math.imul(L,me)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,r=Math.imul(R,le),i=(i=Math.imul(R,ue))+Math.imul(U,le)|0,o=Math.imul(U,ue),r=r+Math.imul(S,fe)|0,i=(i=i+Math.imul(S,de)|0)+Math.imul(Z,fe)|0,o=o+Math.imul(Z,de)|0;var He=(u+(r=r+Math.imul(H,pe)|0)|0)+((8191&(i=(i=i+Math.imul(H,me)|0)+Math.imul(X,pe)|0))<<13)|0;u=((o=o+Math.imul(X,me)|0)+(i>>>13)|0)+(He>>>26)|0,He&=67108863,r=Math.imul(R,fe),i=(i=Math.imul(R,de))+Math.imul(U,fe)|0,o=Math.imul(U,de);var Xe=(u+(r=r+Math.imul(S,pe)|0)|0)+((8191&(i=(i=i+Math.imul(S,me)|0)+Math.imul(Z,pe)|0))<<13)|0;u=((o=o+Math.imul(Z,me)|0)+(i>>>13)|0)+(Xe>>>26)|0,Xe&=67108863;var Ae=(u+(r=Math.imul(R,pe))|0)+((8191&(i=(i=Math.imul(R,me))+Math.imul(U,pe)|0))<<13)|0;return u=((o=Math.imul(U,me))+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,l[0]=ye,l[1]=ve,l[2]=be,l[3]=ge,l[4]=we,l[5]=xe,l[6]=Pe,l[7]=ke,l[8]=ze,l[9]=Me,l[10]=Ne,l[11]=Oe,l[12]=Te,l[13]=je,l[14]=Le,l[15]=Ee,l[16]=He,l[17]=Xe,l[18]=Ae,0!==u&&(l[19]=u,n.length++),n};function v(e,t,n){n.negative=t.negative^e.negative,n.length=e.length+t.length;for(var r=0,i=0,o=0;o<n.length-1;o++){var a=i;i=0;for(var s=67108863&r,l=Math.min(o,t.length-1),u=Math.max(0,o-e.length+1);u<=l;u++){var c=o-u,f=(0|e.words[c])*(0|t.words[u]),d=67108863&f;s=67108863&(d=d+s|0),i+=(a=(a=a+(f/67108864|0)|0)+(d>>>26)|0)>>>26,a&=67108863}n.words[o]=s,r=a,a=i}return 0!==r?n.words[o]=r:n.length--,n._strip()}function b(e,t,n){return v(e,t,n)}function g(e,t){this.x=e,this.y=t}Math.imul||(y=m),o.prototype.mulTo=function(e,t){var n=this.length+e.length;return 10===this.length&&10===e.length?y(this,e,t):n<63?m(this,e,t):n<1024?v(this,e,t):b(this,e,t)},g.prototype.makeRBT=function(e){for(var t=new Array(e),n=o.prototype._countBits(e)-1,r=0;r<e;r++)t[r]=this.revBin(r,n,e);return t},g.prototype.revBin=function(e,t,n){if(0===e||e===n-1)return e;for(var r=0,i=0;i<t;i++)r|=(1&e)<<t-i-1,e>>=1;return r},g.prototype.permute=function(e,t,n,r,i,o){for(var a=0;a<o;a++)r[a]=t[e[a]],i[a]=n[e[a]]},g.prototype.transform=function(e,t,n,r,i,o){this.permute(o,e,t,n,r,i);for(var a=1;a<i;a<<=1)for(var s=a<<1,l=Math.cos(2*Math.PI/s),u=Math.sin(2*Math.PI/s),c=0;c<i;c+=s)for(var f=l,d=u,h=0;h<a;h++){var p=n[c+h],m=r[c+h],y=n[c+h+a],v=r[c+h+a],b=f*y-d*v;v=f*v+d*y,y=b,n[c+h]=p+y,r[c+h]=m+v,n[c+h+a]=p-y,r[c+h+a]=m-v,h!==s&&(b=l*f-u*d,d=l*d+u*f,f=b)}},g.prototype.guessLen13b=function(e,t){var n=1|Math.max(t,e),r=1&n,i=0;for(n=n/2|0;n;n>>>=1)i++;return 1<<i+1+r},g.prototype.conjugate=function(e,t,n){if(!(n<=1))for(var r=0;r<n/2;r++){var i=e[r];e[r]=e[n-r-1],e[n-r-1]=i,i=t[r],t[r]=-t[n-r-1],t[n-r-1]=-i}},g.prototype.normalize13b=function(e,t){for(var n=0,r=0;r<t/2;r++){var i=8192*Math.round(e[2*r+1]/t)+Math.round(e[2*r]/t)+n;e[r]=67108863&i,n=i<67108864?0:i/67108864|0}return e},g.prototype.convert13b=function(e,t,n,i){for(var o=0,a=0;a<t;a++)o+=0|e[a],n[2*a]=8191&o,o>>>=13,n[2*a+1]=8191&o,o>>>=13;for(a=2*t;a<i;++a)n[a]=0;r(0===o),r(0===(-8192&o))},g.prototype.stub=function(e){for(var t=new Array(e),n=0;n<e;n++)t[n]=0;return t},g.prototype.mulp=function(e,t,n){var r=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(r),o=this.stub(r),a=new Array(r),s=new Array(r),l=new Array(r),u=new Array(r),c=new Array(r),f=new Array(r),d=n.words;d.length=r,this.convert13b(e.words,e.length,a,r),this.convert13b(t.words,t.length,u,r),this.transform(a,o,s,l,r,i),this.transform(u,o,c,f,r,i);for(var h=0;h<r;h++){var p=s[h]*c[h]-l[h]*f[h];l[h]=s[h]*f[h]+l[h]*c[h],s[h]=p}return this.conjugate(s,l,r),this.transform(s,l,d,o,r,i),this.conjugate(d,o,r),this.normalize13b(d,r),n.negative=e.negative^t.negative,n.length=e.length+t.length,n._strip()},o.prototype.mul=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},o.prototype.mulf=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),b(this,e,t)},o.prototype.imul=function(e){return this.clone().mulTo(e,this)},o.prototype.imuln=function(e){var t=e<0;t&&(e=-e),r("number"===typeof e),r(e<67108864);for(var n=0,i=0;i<this.length;i++){var o=(0|this.words[i])*e,a=(67108863&o)+(67108863&n);n>>=26,n+=o/67108864|0,n+=a>>>26,this.words[i]=67108863&a}return 0!==n&&(this.words[i]=n,this.length++),t?this.ineg():this},o.prototype.muln=function(e){return this.clone().imuln(e)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),n=0;n<t.length;n++){var r=n/26|0,i=n%26;t[n]=e.words[r]>>>i&1}return t}(e);if(0===t.length)return new o(1);for(var n=this,r=0;r<t.length&&0===t[r];r++,n=n.sqr());if(++r<t.length)for(var i=n.sqr();r<t.length;r++,i=i.sqr())0!==t[r]&&(n=n.mul(i));return n},o.prototype.iushln=function(e){r("number"===typeof e&&e>=0);var t,n=e%26,i=(e-n)/26,o=67108863>>>26-n<<26-n;if(0!==n){var a=0;for(t=0;t<this.length;t++){var s=this.words[t]&o,l=(0|this.words[t])-s<<n;this.words[t]=l|a,a=s>>>26-n}a&&(this.words[t]=a,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this._strip()},o.prototype.ishln=function(e){return r(0===this.negative),this.iushln(e)},o.prototype.iushrn=function(e,t,n){var i;r("number"===typeof e&&e>=0),i=t?(t-t%26)/26:0;var o=e%26,a=Math.min((e-o)/26,this.length),s=67108863^67108863>>>o<<o,l=n;if(i-=a,i=Math.max(0,i),l){for(var u=0;u<a;u++)l.words[u]=this.words[u];l.length=a}if(0===a);else if(this.length>a)for(this.length-=a,u=0;u<this.length;u++)this.words[u]=this.words[u+a];else this.words[0]=0,this.length=1;var c=0;for(u=this.length-1;u>=0&&(0!==c||u>=i);u--){var f=0|this.words[u];this.words[u]=c<<26-o|f>>>o,c=f&s}return l&&0!==c&&(l.words[l.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},o.prototype.ishrn=function(e,t,n){return r(0===this.negative),this.iushrn(e,t,n)},o.prototype.shln=function(e){return this.clone().ishln(e)},o.prototype.ushln=function(e){return this.clone().iushln(e)},o.prototype.shrn=function(e){return this.clone().ishrn(e)},o.prototype.ushrn=function(e){return this.clone().iushrn(e)},o.prototype.testn=function(e){r("number"===typeof e&&e>=0);var t=e%26,n=(e-t)/26,i=1<<t;return!(this.length<=n)&&!!(this.words[n]&i)},o.prototype.imaskn=function(e){r("number"===typeof e&&e>=0);var t=e%26,n=(e-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==t&&n++,this.length=Math.min(n,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this._strip()},o.prototype.maskn=function(e){return this.clone().imaskn(e)},o.prototype.iaddn=function(e){return r("number"===typeof e),r(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},o.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},o.prototype.isubn=function(e){if(r("number"===typeof e),r(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},o.prototype.addn=function(e){return this.clone().iaddn(e)},o.prototype.subn=function(e){return this.clone().isubn(e)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(e,t,n){var i,o,a=e.length+n;this._expand(a);var s=0;for(i=0;i<e.length;i++){o=(0|this.words[i+n])+s;var l=(0|e.words[i])*t;s=((o-=67108863&l)>>26)-(l/67108864|0),this.words[i+n]=67108863&o}for(;i<this.length-n;i++)s=(o=(0|this.words[i+n])+s)>>26,this.words[i+n]=67108863&o;if(0===s)return this._strip();for(r(-1===s),s=0,i=0;i<this.length;i++)s=(o=-(0|this.words[i])+s)>>26,this.words[i]=67108863&o;return this.negative=1,this._strip()},o.prototype._wordDiv=function(e,t){var n=(this.length,e.length),r=this.clone(),i=e,a=0|i.words[i.length-1];0!==(n=26-this._countBits(a))&&(i=i.ushln(n),r.iushln(n),a=0|i.words[i.length-1]);var s,l=r.length-i.length;if("mod"!==t){(s=new o(null)).length=l+1,s.words=new Array(s.length);for(var u=0;u<s.length;u++)s.words[u]=0}var c=r.clone()._ishlnsubmul(i,1,l);0===c.negative&&(r=c,s&&(s.words[l]=1));for(var f=l-1;f>=0;f--){var d=67108864*(0|r.words[i.length+f])+(0|r.words[i.length+f-1]);for(d=Math.min(d/a|0,67108863),r._ishlnsubmul(i,d,f);0!==r.negative;)d--,r.negative=0,r._ishlnsubmul(i,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=d)}return s&&s._strip(),r._strip(),"div"!==t&&0!==n&&r.iushrn(n),{div:s||null,mod:r}},o.prototype.divmod=function(e,t,n){return r(!e.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===e.negative?(s=this.neg().divmod(e,t),"mod"!==t&&(i=s.div.neg()),"div"!==t&&(a=s.mod.neg(),n&&0!==a.negative&&a.iadd(e)),{div:i,mod:a}):0===this.negative&&0!==e.negative?(s=this.divmod(e.neg(),t),"mod"!==t&&(i=s.div.neg()),{div:i,mod:s.mod}):0!==(this.negative&e.negative)?(s=this.neg().divmod(e.neg(),t),"div"!==t&&(a=s.mod.neg(),n&&0!==a.negative&&a.isub(e)),{div:s.div,mod:a}):e.length>this.length||this.cmp(e)<0?{div:new o(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new o(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new o(this.modrn(e.words[0]))}:this._wordDiv(e,t);var i,a,s},o.prototype.div=function(e){return this.divmod(e,"div",!1).div},o.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},o.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},o.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var n=0!==t.div.negative?t.mod.isub(e):t.mod,r=e.ushrn(1),i=e.andln(1),o=n.cmp(r);return o<0||1===i&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},o.prototype.modrn=function(e){var t=e<0;t&&(e=-e),r(e<=67108863);for(var n=(1<<26)%e,i=0,o=this.length-1;o>=0;o--)i=(n*i+(0|this.words[o]))%e;return t?-i:i},o.prototype.modn=function(e){return this.modrn(e)},o.prototype.idivn=function(e){var t=e<0;t&&(e=-e),r(e<=67108863);for(var n=0,i=this.length-1;i>=0;i--){var o=(0|this.words[i])+67108864*n;this.words[i]=o/e|0,n=o%e}return this._strip(),t?this.ineg():this},o.prototype.divn=function(e){return this.clone().idivn(e)},o.prototype.egcd=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new o(1),a=new o(0),s=new o(0),l=new o(1),u=0;t.isEven()&&n.isEven();)t.iushrn(1),n.iushrn(1),++u;for(var c=n.clone(),f=t.clone();!t.isZero();){for(var d=0,h=1;0===(t.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(i.isOdd()||a.isOdd())&&(i.iadd(c),a.isub(f)),i.iushrn(1),a.iushrn(1);for(var p=0,m=1;0===(n.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(n.iushrn(p);p-- >0;)(s.isOdd()||l.isOdd())&&(s.iadd(c),l.isub(f)),s.iushrn(1),l.iushrn(1);t.cmp(n)>=0?(t.isub(n),i.isub(s),a.isub(l)):(n.isub(t),s.isub(i),l.isub(a))}return{a:s,b:l,gcd:n.iushln(u)}},o.prototype._invmp=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i,a=new o(1),s=new o(0),l=n.clone();t.cmpn(1)>0&&n.cmpn(1)>0;){for(var u=0,c=1;0===(t.words[0]&c)&&u<26;++u,c<<=1);if(u>0)for(t.iushrn(u);u-- >0;)a.isOdd()&&a.iadd(l),a.iushrn(1);for(var f=0,d=1;0===(n.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(n.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(l),s.iushrn(1);t.cmp(n)>=0?(t.isub(n),a.isub(s)):(n.isub(t),s.isub(a))}return(i=0===t.cmpn(1)?a:s).cmpn(0)<0&&i.iadd(e),i},o.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),n=e.clone();t.negative=0,n.negative=0;for(var r=0;t.isEven()&&n.isEven();r++)t.iushrn(1),n.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;n.isEven();)n.iushrn(1);var i=t.cmp(n);if(i<0){var o=t;t=n,n=o}else if(0===i||0===n.cmpn(1))break;t.isub(n)}return n.iushln(r)},o.prototype.invm=function(e){return this.egcd(e).a.umod(e)},o.prototype.isEven=function(){return 0===(1&this.words[0])},o.prototype.isOdd=function(){return 1===(1&this.words[0])},o.prototype.andln=function(e){return this.words[0]&e},o.prototype.bincn=function(e){r("number"===typeof e);var t=e%26,n=(e-t)/26,i=1<<t;if(this.length<=n)return this._expand(n+1),this.words[n]|=i,this;for(var o=i,a=n;0!==o&&a<this.length;a++){var s=0|this.words[a];o=(s+=o)>>>26,s&=67108863,this.words[a]=s}return 0!==o&&(this.words[a]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(e){var t,n=e<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this._strip(),this.length>1)t=1;else{n&&(e=-e),r(e<=67108863,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},o.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},o.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,n=this.length-1;n>=0;n--){var r=0|this.words[n],i=0|e.words[n];if(r!==i){r<i?t=-1:r>i&&(t=1);break}}return t},o.prototype.gtn=function(e){return 1===this.cmpn(e)},o.prototype.gt=function(e){return 1===this.cmp(e)},o.prototype.gten=function(e){return this.cmpn(e)>=0},o.prototype.gte=function(e){return this.cmp(e)>=0},o.prototype.ltn=function(e){return-1===this.cmpn(e)},o.prototype.lt=function(e){return-1===this.cmp(e)},o.prototype.lten=function(e){return this.cmpn(e)<=0},o.prototype.lte=function(e){return this.cmp(e)<=0},o.prototype.eqn=function(e){return 0===this.cmpn(e)},o.prototype.eq=function(e){return 0===this.cmp(e)},o.red=function(e){return new N(e)},o.prototype.toRed=function(e){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},o.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(e){return this.red=e,this},o.prototype.forceRed=function(e){return r(!this.red,"Already a number in reduction context"),this._forceRed(e)},o.prototype.redAdd=function(e){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},o.prototype.redIAdd=function(e){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},o.prototype.redSub=function(e){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},o.prototype.redISub=function(e){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},o.prototype.redShl=function(e){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},o.prototype.redMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},o.prototype.redIMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},o.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(e){return r(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var w={k256:null,p224:null,p192:null,p25519:null};function x(e,t){this.name=e,this.p=new o(t,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function P(){x.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function k(){x.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function z(){x.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function M(){x.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function N(e){if("string"===typeof e){var t=o._prime(e);this.m=t.p,this.prime=t}else r(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function O(e){N.call(this,e),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}x.prototype._tmp=function(){var e=new o(null);return e.words=new Array(Math.ceil(this.n/13)),e},x.prototype.ireduce=function(e){var t,n=e;do{this.split(n,this.tmp),t=(n=(n=this.imulK(n)).iadd(this.tmp)).bitLength()}while(t>this.n);var r=t<this.n?-1:n.ucmp(this.p);return 0===r?(n.words[0]=0,n.length=1):r>0?n.isub(this.p):void 0!==n.strip?n.strip():n._strip(),n},x.prototype.split=function(e,t){e.iushrn(this.n,0,t)},x.prototype.imulK=function(e){return e.imul(this.k)},i(P,x),P.prototype.split=function(e,t){for(var n=4194303,r=Math.min(e.length,9),i=0;i<r;i++)t.words[i]=e.words[i];if(t.length=r,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&n,i=10;i<e.length;i++){var a=0|e.words[i];e.words[i-10]=(a&n)<<4|o>>>22,o=a}o>>>=22,e.words[i-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9},P.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,n=0;n<e.length;n++){var r=0|e.words[n];t+=977*r,e.words[n]=67108863&t,t=64*r+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(k,x),i(z,x),i(M,x),M.prototype.imulK=function(e){for(var t=0,n=0;n<e.length;n++){var r=19*(0|e.words[n])+t,i=67108863&r;r>>>=26,e.words[n]=i,t=r}return 0!==t&&(e.words[e.length++]=t),e},o._prime=function(e){if(w[e])return w[e];var t;if("k256"===e)t=new P;else if("p224"===e)t=new k;else if("p192"===e)t=new z;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new M}return w[e]=t,t},N.prototype._verify1=function(e){r(0===e.negative,"red works only with positives"),r(e.red,"red works only with red numbers")},N.prototype._verify2=function(e,t){r(0===(e.negative|t.negative),"red works only with positives"),r(e.red&&e.red===t.red,"red works only with red numbers")},N.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(c(e,e.umod(this.m)._forceRed(this)),e)},N.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},N.prototype.add=function(e,t){this._verify2(e,t);var n=e.add(t);return n.cmp(this.m)>=0&&n.isub(this.m),n._forceRed(this)},N.prototype.iadd=function(e,t){this._verify2(e,t);var n=e.iadd(t);return n.cmp(this.m)>=0&&n.isub(this.m),n},N.prototype.sub=function(e,t){this._verify2(e,t);var n=e.sub(t);return n.cmpn(0)<0&&n.iadd(this.m),n._forceRed(this)},N.prototype.isub=function(e,t){this._verify2(e,t);var n=e.isub(t);return n.cmpn(0)<0&&n.iadd(this.m),n},N.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},N.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},N.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},N.prototype.isqr=function(e){return this.imul(e,e.clone())},N.prototype.sqr=function(e){return this.mul(e,e)},N.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(r(t%2===1),3===t){var n=this.m.add(new o(1)).iushrn(2);return this.pow(e,n)}for(var i=this.m.subn(1),a=0;!i.isZero()&&0===i.andln(1);)a++,i.iushrn(1);r(!i.isZero());var s=new o(1).toRed(this),l=s.redNeg(),u=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new o(2*c*c).toRed(this);0!==this.pow(c,u).cmp(l);)c.redIAdd(l);for(var f=this.pow(c,i),d=this.pow(e,i.addn(1).iushrn(1)),h=this.pow(e,i),p=a;0!==h.cmp(s);){for(var m=h,y=0;0!==m.cmp(s);y++)m=m.redSqr();r(y<p);var v=this.pow(f,new o(1).iushln(p-y-1));d=d.redMul(v),f=v.redSqr(),h=h.redMul(f),p=y}return d},N.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},N.prototype.pow=function(e,t){if(t.isZero())return new o(1).toRed(this);if(0===t.cmpn(1))return e.clone();var n=new Array(16);n[0]=new o(1).toRed(this),n[1]=e;for(var r=2;r<n.length;r++)n[r]=this.mul(n[r-1],e);var i=n[0],a=0,s=0,l=t.bitLength()%26;for(0===l&&(l=26),r=t.length-1;r>=0;r--){for(var u=t.words[r],c=l-1;c>=0;c--){var f=u>>c&1;i!==n[0]&&(i=this.sqr(i)),0!==f||0!==a?(a<<=1,a|=f,(4===++s||0===r&&0===c)&&(i=this.mul(i,n[a]),s=0,a=0)):s=0}l=26}return i},N.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},N.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},o.mont=function(e){return new O(e)},i(O,N),O.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},O.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},O.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var n=e.imul(t),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},O.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new o(0)._forceRed(this);var n=e.mul(t),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),a=i;return i.cmp(this.m)>=0?a=i.isub(this.m):i.cmpn(0)<0&&(a=i.iadd(this.m)),a._forceRed(this)},O.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e=n.nmd(e),this)},820:(e,t,n)=>{!function(e){"use strict";var t=function(e){var t,n=new Float64Array(16);if(e)for(t=0;t<e.length;t++)n[t]=e[t];return n},r=function(){throw new Error("no PRNG")},i=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var a=t(),s=t([1]),l=t([56129,1]),u=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),c=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),f=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),d=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(e,t,n,r){e[t]=n>>24&255,e[t+1]=n>>16&255,e[t+2]=n>>8&255,e[t+3]=255&n,e[t+4]=r>>24&255,e[t+5]=r>>16&255,e[t+6]=r>>8&255,e[t+7]=255&r}function m(e,t,n,r,i){var o,a=0;for(o=0;o<i;o++)a|=e[t+o]^n[r+o];return(1&a-1>>>8)-1}function y(e,t,n,r){return m(e,t,n,r,16)}function v(e,t,n,r){return m(e,t,n,r,32)}function b(e,t,n,r){!function(e,t,n,r){for(var i,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,u=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,m=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,y=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,v=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,b=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,g=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,w=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,x=o,P=a,k=s,z=l,M=u,N=c,O=f,T=d,j=h,L=p,E=m,H=y,X=v,A=b,S=g,Z=w,D=0;D<20;D+=2)x^=(i=(X^=(i=(j^=(i=(M^=(i=x+X|0)<<7|i>>>25)+x|0)<<9|i>>>23)+M|0)<<13|i>>>19)+j|0)<<18|i>>>14,N^=(i=(P^=(i=(A^=(i=(L^=(i=N+P|0)<<7|i>>>25)+N|0)<<9|i>>>23)+L|0)<<13|i>>>19)+A|0)<<18|i>>>14,E^=(i=(O^=(i=(k^=(i=(S^=(i=E+O|0)<<7|i>>>25)+E|0)<<9|i>>>23)+S|0)<<13|i>>>19)+k|0)<<18|i>>>14,Z^=(i=(H^=(i=(T^=(i=(z^=(i=Z+H|0)<<7|i>>>25)+Z|0)<<9|i>>>23)+z|0)<<13|i>>>19)+T|0)<<18|i>>>14,x^=(i=(z^=(i=(k^=(i=(P^=(i=x+z|0)<<7|i>>>25)+x|0)<<9|i>>>23)+P|0)<<13|i>>>19)+k|0)<<18|i>>>14,N^=(i=(M^=(i=(T^=(i=(O^=(i=N+M|0)<<7|i>>>25)+N|0)<<9|i>>>23)+O|0)<<13|i>>>19)+T|0)<<18|i>>>14,E^=(i=(L^=(i=(j^=(i=(H^=(i=E+L|0)<<7|i>>>25)+E|0)<<9|i>>>23)+H|0)<<13|i>>>19)+j|0)<<18|i>>>14,Z^=(i=(S^=(i=(A^=(i=(X^=(i=Z+S|0)<<7|i>>>25)+Z|0)<<9|i>>>23)+X|0)<<13|i>>>19)+A|0)<<18|i>>>14;x=x+o|0,P=P+a|0,k=k+s|0,z=z+l|0,M=M+u|0,N=N+c|0,O=O+f|0,T=T+d|0,j=j+h|0,L=L+p|0,E=E+m|0,H=H+y|0,X=X+v|0,A=A+b|0,S=S+g|0,Z=Z+w|0,e[0]=x>>>0&255,e[1]=x>>>8&255,e[2]=x>>>16&255,e[3]=x>>>24&255,e[4]=P>>>0&255,e[5]=P>>>8&255,e[6]=P>>>16&255,e[7]=P>>>24&255,e[8]=k>>>0&255,e[9]=k>>>8&255,e[10]=k>>>16&255,e[11]=k>>>24&255,e[12]=z>>>0&255,e[13]=z>>>8&255,e[14]=z>>>16&255,e[15]=z>>>24&255,e[16]=M>>>0&255,e[17]=M>>>8&255,e[18]=M>>>16&255,e[19]=M>>>24&255,e[20]=N>>>0&255,e[21]=N>>>8&255,e[22]=N>>>16&255,e[23]=N>>>24&255,e[24]=O>>>0&255,e[25]=O>>>8&255,e[26]=O>>>16&255,e[27]=O>>>24&255,e[28]=T>>>0&255,e[29]=T>>>8&255,e[30]=T>>>16&255,e[31]=T>>>24&255,e[32]=j>>>0&255,e[33]=j>>>8&255,e[34]=j>>>16&255,e[35]=j>>>24&255,e[36]=L>>>0&255,e[37]=L>>>8&255,e[38]=L>>>16&255,e[39]=L>>>24&255,e[40]=E>>>0&255,e[41]=E>>>8&255,e[42]=E>>>16&255,e[43]=E>>>24&255,e[44]=H>>>0&255,e[45]=H>>>8&255,e[46]=H>>>16&255,e[47]=H>>>24&255,e[48]=X>>>0&255,e[49]=X>>>8&255,e[50]=X>>>16&255,e[51]=X>>>24&255,e[52]=A>>>0&255,e[53]=A>>>8&255,e[54]=A>>>16&255,e[55]=A>>>24&255,e[56]=S>>>0&255,e[57]=S>>>8&255,e[58]=S>>>16&255,e[59]=S>>>24&255,e[60]=Z>>>0&255,e[61]=Z>>>8&255,e[62]=Z>>>16&255,e[63]=Z>>>24&255}(e,t,n,r)}function g(e,t,n,r){!function(e,t,n,r){for(var i,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,u=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,m=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,y=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,v=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,b=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,g=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,w=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,x=0;x<20;x+=2)o^=(i=(v^=(i=(h^=(i=(u^=(i=o+v|0)<<7|i>>>25)+o|0)<<9|i>>>23)+u|0)<<13|i>>>19)+h|0)<<18|i>>>14,c^=(i=(a^=(i=(b^=(i=(p^=(i=c+a|0)<<7|i>>>25)+c|0)<<9|i>>>23)+p|0)<<13|i>>>19)+b|0)<<18|i>>>14,m^=(i=(f^=(i=(s^=(i=(g^=(i=m+f|0)<<7|i>>>25)+m|0)<<9|i>>>23)+g|0)<<13|i>>>19)+s|0)<<18|i>>>14,w^=(i=(y^=(i=(d^=(i=(l^=(i=w+y|0)<<7|i>>>25)+w|0)<<9|i>>>23)+l|0)<<13|i>>>19)+d|0)<<18|i>>>14,o^=(i=(l^=(i=(s^=(i=(a^=(i=o+l|0)<<7|i>>>25)+o|0)<<9|i>>>23)+a|0)<<13|i>>>19)+s|0)<<18|i>>>14,c^=(i=(u^=(i=(d^=(i=(f^=(i=c+u|0)<<7|i>>>25)+c|0)<<9|i>>>23)+f|0)<<13|i>>>19)+d|0)<<18|i>>>14,m^=(i=(p^=(i=(h^=(i=(y^=(i=m+p|0)<<7|i>>>25)+m|0)<<9|i>>>23)+y|0)<<13|i>>>19)+h|0)<<18|i>>>14,w^=(i=(g^=(i=(b^=(i=(v^=(i=w+g|0)<<7|i>>>25)+w|0)<<9|i>>>23)+v|0)<<13|i>>>19)+b|0)<<18|i>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=c>>>0&255,e[5]=c>>>8&255,e[6]=c>>>16&255,e[7]=c>>>24&255,e[8]=m>>>0&255,e[9]=m>>>8&255,e[10]=m>>>16&255,e[11]=m>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=f>>>0&255,e[17]=f>>>8&255,e[18]=f>>>16&255,e[19]=f>>>24&255,e[20]=d>>>0&255,e[21]=d>>>8&255,e[22]=d>>>16&255,e[23]=d>>>24&255,e[24]=h>>>0&255,e[25]=h>>>8&255,e[26]=h>>>16&255,e[27]=h>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,t,n,r)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function x(e,t,n,r,i,o,a){var s,l,u=new Uint8Array(16),c=new Uint8Array(64);for(l=0;l<16;l++)u[l]=0;for(l=0;l<8;l++)u[l]=o[l];for(;i>=64;){for(b(c,u,a,w),l=0;l<64;l++)e[t+l]=n[r+l]^c[l];for(s=1,l=8;l<16;l++)s=s+(255&u[l])|0,u[l]=255&s,s>>>=8;i-=64,t+=64,r+=64}if(i>0)for(b(c,u,a,w),l=0;l<i;l++)e[t+l]=n[r+l]^c[l];return 0}function P(e,t,n,r,i){var o,a,s=new Uint8Array(16),l=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=r[a];for(;n>=64;){for(b(l,s,i,w),a=0;a<64;a++)e[t+a]=l[a];for(o=1,a=8;a<16;a++)o=o+(255&s[a])|0,s[a]=255&o,o>>>=8;n-=64,t+=64}if(n>0)for(b(l,s,i,w),a=0;a<n;a++)e[t+a]=l[a];return 0}function k(e,t,n,r,i){var o=new Uint8Array(32);g(o,r,i,w);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=r[s+16];return P(e,t,n,a,o)}function z(e,t,n,r,i,o,a){var s=new Uint8Array(32);g(s,o,a,w);for(var l=new Uint8Array(8),u=0;u<8;u++)l[u]=o[u+16];return x(e,t,n,r,i,l,s)}var M=function(e){var t,n,r,i,o,a,s,l;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,n=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|n<<3),r=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(n>>>10|r<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(r>>>7|i<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|o<<12),this.r[5]=o>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),l=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|l<<8),this.r[9]=l>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function N(e,t,n,r,i,o){var a=new M(o);return a.update(n,r,i),a.finish(e,t),0}function O(e,t,n,r,i,o){var a=new Uint8Array(16);return N(a,0,n,r,i,o),y(e,t,a,0)}function T(e,t,n,r,i){var o;if(n<32)return-1;for(z(e,0,t,0,n,r,i),N(e,16,e,32,n-32,e),o=0;o<16;o++)e[o]=0;return 0}function j(e,t,n,r,i){var o,a=new Uint8Array(32);if(n<32)return-1;if(k(a,0,32,r,i),0!==O(t,16,t,32,n-32,a))return-1;for(z(e,0,t,0,n,r,i),o=0;o<32;o++)e[o]=0;return 0}function L(e,t){var n;for(n=0;n<16;n++)e[n]=0|t[n]}function E(e){var t,n,r=1;for(t=0;t<16;t++)n=e[t]+r+65535,r=Math.floor(n/65536),e[t]=n-65536*r;e[0]+=r-1+37*(r-1)}function H(e,t,n){for(var r,i=~(n-1),o=0;o<16;o++)r=i&(e[o]^t[o]),e[o]^=r,t[o]^=r}function X(e,n){var r,i,o,a=t(),s=t();for(r=0;r<16;r++)s[r]=n[r];for(E(s),E(s),E(s),i=0;i<2;i++){for(a[0]=s[0]-65517,r=1;r<15;r++)a[r]=s[r]-65535-(a[r-1]>>16&1),a[r-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),o=a[15]>>16&1,a[14]&=65535,H(s,a,1-o)}for(r=0;r<16;r++)e[2*r]=255&s[r],e[2*r+1]=s[r]>>8}function A(e,t){var n=new Uint8Array(32),r=new Uint8Array(32);return X(n,e),X(r,t),v(n,0,r,0)}function S(e){var t=new Uint8Array(32);return X(t,e),1&t[0]}function Z(e,t){var n;for(n=0;n<16;n++)e[n]=t[2*n]+(t[2*n+1]<<8);e[15]&=32767}function D(e,t,n){for(var r=0;r<16;r++)e[r]=t[r]+n[r]}function R(e,t,n){for(var r=0;r<16;r++)e[r]=t[r]-n[r]}function U(e,t,n){var r,i,o=0,a=0,s=0,l=0,u=0,c=0,f=0,d=0,h=0,p=0,m=0,y=0,v=0,b=0,g=0,w=0,x=0,P=0,k=0,z=0,M=0,N=0,O=0,T=0,j=0,L=0,E=0,H=0,X=0,A=0,S=0,Z=n[0],D=n[1],R=n[2],U=n[3],F=n[4],W=n[5],C=n[6],q=n[7],I=n[8],B=n[9],Y=n[10],V=n[11],G=n[12],K=n[13],J=n[14],Q=n[15];o+=(r=t[0])*Z,a+=r*D,s+=r*R,l+=r*U,u+=r*F,c+=r*W,f+=r*C,d+=r*q,h+=r*I,p+=r*B,m+=r*Y,y+=r*V,v+=r*G,b+=r*K,g+=r*J,w+=r*Q,a+=(r=t[1])*Z,s+=r*D,l+=r*R,u+=r*U,c+=r*F,f+=r*W,d+=r*C,h+=r*q,p+=r*I,m+=r*B,y+=r*Y,v+=r*V,b+=r*G,g+=r*K,w+=r*J,x+=r*Q,s+=(r=t[2])*Z,l+=r*D,u+=r*R,c+=r*U,f+=r*F,d+=r*W,h+=r*C,p+=r*q,m+=r*I,y+=r*B,v+=r*Y,b+=r*V,g+=r*G,w+=r*K,x+=r*J,P+=r*Q,l+=(r=t[3])*Z,u+=r*D,c+=r*R,f+=r*U,d+=r*F,h+=r*W,p+=r*C,m+=r*q,y+=r*I,v+=r*B,b+=r*Y,g+=r*V,w+=r*G,x+=r*K,P+=r*J,k+=r*Q,u+=(r=t[4])*Z,c+=r*D,f+=r*R,d+=r*U,h+=r*F,p+=r*W,m+=r*C,y+=r*q,v+=r*I,b+=r*B,g+=r*Y,w+=r*V,x+=r*G,P+=r*K,k+=r*J,z+=r*Q,c+=(r=t[5])*Z,f+=r*D,d+=r*R,h+=r*U,p+=r*F,m+=r*W,y+=r*C,v+=r*q,b+=r*I,g+=r*B,w+=r*Y,x+=r*V,P+=r*G,k+=r*K,z+=r*J,M+=r*Q,f+=(r=t[6])*Z,d+=r*D,h+=r*R,p+=r*U,m+=r*F,y+=r*W,v+=r*C,b+=r*q,g+=r*I,w+=r*B,x+=r*Y,P+=r*V,k+=r*G,z+=r*K,M+=r*J,N+=r*Q,d+=(r=t[7])*Z,h+=r*D,p+=r*R,m+=r*U,y+=r*F,v+=r*W,b+=r*C,g+=r*q,w+=r*I,x+=r*B,P+=r*Y,k+=r*V,z+=r*G,M+=r*K,N+=r*J,O+=r*Q,h+=(r=t[8])*Z,p+=r*D,m+=r*R,y+=r*U,v+=r*F,b+=r*W,g+=r*C,w+=r*q,x+=r*I,P+=r*B,k+=r*Y,z+=r*V,M+=r*G,N+=r*K,O+=r*J,T+=r*Q,p+=(r=t[9])*Z,m+=r*D,y+=r*R,v+=r*U,b+=r*F,g+=r*W,w+=r*C,x+=r*q,P+=r*I,k+=r*B,z+=r*Y,M+=r*V,N+=r*G,O+=r*K,T+=r*J,j+=r*Q,m+=(r=t[10])*Z,y+=r*D,v+=r*R,b+=r*U,g+=r*F,w+=r*W,x+=r*C,P+=r*q,k+=r*I,z+=r*B,M+=r*Y,N+=r*V,O+=r*G,T+=r*K,j+=r*J,L+=r*Q,y+=(r=t[11])*Z,v+=r*D,b+=r*R,g+=r*U,w+=r*F,x+=r*W,P+=r*C,k+=r*q,z+=r*I,M+=r*B,N+=r*Y,O+=r*V,T+=r*G,j+=r*K,L+=r*J,E+=r*Q,v+=(r=t[12])*Z,b+=r*D,g+=r*R,w+=r*U,x+=r*F,P+=r*W,k+=r*C,z+=r*q,M+=r*I,N+=r*B,O+=r*Y,T+=r*V,j+=r*G,L+=r*K,E+=r*J,H+=r*Q,b+=(r=t[13])*Z,g+=r*D,w+=r*R,x+=r*U,P+=r*F,k+=r*W,z+=r*C,M+=r*q,N+=r*I,O+=r*B,T+=r*Y,j+=r*V,L+=r*G,E+=r*K,H+=r*J,X+=r*Q,g+=(r=t[14])*Z,w+=r*D,x+=r*R,P+=r*U,k+=r*F,z+=r*W,M+=r*C,N+=r*q,O+=r*I,T+=r*B,j+=r*Y,L+=r*V,E+=r*G,H+=r*K,X+=r*J,A+=r*Q,w+=(r=t[15])*Z,a+=38*(P+=r*R),s+=38*(k+=r*U),l+=38*(z+=r*F),u+=38*(M+=r*W),c+=38*(N+=r*C),f+=38*(O+=r*q),d+=38*(T+=r*I),h+=38*(j+=r*B),p+=38*(L+=r*Y),m+=38*(E+=r*V),y+=38*(H+=r*G),v+=38*(X+=r*K),b+=38*(A+=r*J),g+=38*(S+=r*Q),o=(r=(o+=38*(x+=r*D))+(i=1)+65535)-65536*(i=Math.floor(r/65536)),a=(r=a+i+65535)-65536*(i=Math.floor(r/65536)),s=(r=s+i+65535)-65536*(i=Math.floor(r/65536)),l=(r=l+i+65535)-65536*(i=Math.floor(r/65536)),u=(r=u+i+65535)-65536*(i=Math.floor(r/65536)),c=(r=c+i+65535)-65536*(i=Math.floor(r/65536)),f=(r=f+i+65535)-65536*(i=Math.floor(r/65536)),d=(r=d+i+65535)-65536*(i=Math.floor(r/65536)),h=(r=h+i+65535)-65536*(i=Math.floor(r/65536)),p=(r=p+i+65535)-65536*(i=Math.floor(r/65536)),m=(r=m+i+65535)-65536*(i=Math.floor(r/65536)),y=(r=y+i+65535)-65536*(i=Math.floor(r/65536)),v=(r=v+i+65535)-65536*(i=Math.floor(r/65536)),b=(r=b+i+65535)-65536*(i=Math.floor(r/65536)),g=(r=g+i+65535)-65536*(i=Math.floor(r/65536)),w=(r=w+i+65535)-65536*(i=Math.floor(r/65536)),o=(r=(o+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(r/65536)),a=(r=a+i+65535)-65536*(i=Math.floor(r/65536)),s=(r=s+i+65535)-65536*(i=Math.floor(r/65536)),l=(r=l+i+65535)-65536*(i=Math.floor(r/65536)),u=(r=u+i+65535)-65536*(i=Math.floor(r/65536)),c=(r=c+i+65535)-65536*(i=Math.floor(r/65536)),f=(r=f+i+65535)-65536*(i=Math.floor(r/65536)),d=(r=d+i+65535)-65536*(i=Math.floor(r/65536)),h=(r=h+i+65535)-65536*(i=Math.floor(r/65536)),p=(r=p+i+65535)-65536*(i=Math.floor(r/65536)),m=(r=m+i+65535)-65536*(i=Math.floor(r/65536)),y=(r=y+i+65535)-65536*(i=Math.floor(r/65536)),v=(r=v+i+65535)-65536*(i=Math.floor(r/65536)),b=(r=b+i+65535)-65536*(i=Math.floor(r/65536)),g=(r=g+i+65535)-65536*(i=Math.floor(r/65536)),w=(r=w+i+65535)-65536*(i=Math.floor(r/65536)),o+=i-1+37*(i-1),e[0]=o,e[1]=a,e[2]=s,e[3]=l,e[4]=u,e[5]=c,e[6]=f,e[7]=d,e[8]=h,e[9]=p,e[10]=m,e[11]=y,e[12]=v,e[13]=b,e[14]=g,e[15]=w}function F(e,t){U(e,t,t)}function W(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=253;r>=0;r--)F(i,i),2!==r&&4!==r&&U(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}function C(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=250;r>=0;r--)F(i,i),1!==r&&U(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}function q(e,n,r){var i,o,a=new Uint8Array(32),s=new Float64Array(80),u=t(),c=t(),f=t(),d=t(),h=t(),p=t();for(o=0;o<31;o++)a[o]=n[o];for(a[31]=127&n[31]|64,a[0]&=248,Z(s,r),o=0;o<16;o++)c[o]=s[o],d[o]=u[o]=f[o]=0;for(u[0]=d[0]=1,o=254;o>=0;--o)H(u,c,i=a[o>>>3]>>>(7&o)&1),H(f,d,i),D(h,u,f),R(u,u,f),D(f,c,d),R(c,c,d),F(d,h),F(p,u),U(u,f,u),U(f,c,h),D(h,u,f),R(u,u,f),F(c,u),R(f,d,p),U(u,f,l),D(u,u,d),U(f,f,u),U(u,d,p),U(d,c,s),F(c,h),H(u,c,i),H(f,d,i);for(o=0;o<16;o++)s[o+16]=u[o],s[o+32]=f[o],s[o+48]=c[o],s[o+64]=d[o];var m=s.subarray(32),y=s.subarray(16);return W(m,m),U(y,y,m),X(e,y),0}function I(e,t){return q(e,t,o)}function B(e,t){return r(t,32),I(e,t)}function Y(e,t,n){var r=new Uint8Array(32);return q(r,n,t),g(e,i,r,w)}M.prototype.blocks=function(e,t,n){for(var r,i,o,a,s,l,u,c,f,d,h,p,m,y,v,b,g,w,x,P=this.fin?0:2048,k=this.h[0],z=this.h[1],M=this.h[2],N=this.h[3],O=this.h[4],T=this.h[5],j=this.h[6],L=this.h[7],E=this.h[8],H=this.h[9],X=this.r[0],A=this.r[1],S=this.r[2],Z=this.r[3],D=this.r[4],R=this.r[5],U=this.r[6],F=this.r[7],W=this.r[8],C=this.r[9];n>=16;)d=f=0,d+=(k+=8191&(r=255&e[t+0]|(255&e[t+1])<<8))*X,d+=(z+=8191&(r>>>13|(i=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*C),d+=(M+=8191&(i>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*W),d+=(N+=8191&(o>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),f=(d+=(O+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*U))>>>13,d&=8191,d+=(T+=s>>>1&8191)*(5*R),d+=(j+=8191&(s>>>14|(l=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*D),d+=(L+=8191&(l>>>11|(u=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*Z),d+=(E+=8191&(u>>>8|(c=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*S),h=f+=(d+=(H+=c>>>5|P)*(5*A))>>>13,h+=k*A,h+=z*X,h+=M*(5*C),h+=N*(5*W),f=(h+=O*(5*F))>>>13,h&=8191,h+=T*(5*U),h+=j*(5*R),h+=L*(5*D),h+=E*(5*Z),f+=(h+=H*(5*S))>>>13,h&=8191,p=f,p+=k*S,p+=z*A,p+=M*X,p+=N*(5*C),f=(p+=O*(5*W))>>>13,p&=8191,p+=T*(5*F),p+=j*(5*U),p+=L*(5*R),p+=E*(5*D),m=f+=(p+=H*(5*Z))>>>13,m+=k*Z,m+=z*S,m+=M*A,m+=N*X,f=(m+=O*(5*C))>>>13,m&=8191,m+=T*(5*W),m+=j*(5*F),m+=L*(5*U),m+=E*(5*R),y=f+=(m+=H*(5*D))>>>13,y+=k*D,y+=z*Z,y+=M*S,y+=N*A,f=(y+=O*X)>>>13,y&=8191,y+=T*(5*C),y+=j*(5*W),y+=L*(5*F),y+=E*(5*U),v=f+=(y+=H*(5*R))>>>13,v+=k*R,v+=z*D,v+=M*Z,v+=N*S,f=(v+=O*A)>>>13,v&=8191,v+=T*X,v+=j*(5*C),v+=L*(5*W),v+=E*(5*F),b=f+=(v+=H*(5*U))>>>13,b+=k*U,b+=z*R,b+=M*D,b+=N*Z,f=(b+=O*S)>>>13,b&=8191,b+=T*A,b+=j*X,b+=L*(5*C),b+=E*(5*W),g=f+=(b+=H*(5*F))>>>13,g+=k*F,g+=z*U,g+=M*R,g+=N*D,f=(g+=O*Z)>>>13,g&=8191,g+=T*S,g+=j*A,g+=L*X,g+=E*(5*C),w=f+=(g+=H*(5*W))>>>13,w+=k*W,w+=z*F,w+=M*U,w+=N*R,f=(w+=O*D)>>>13,w&=8191,w+=T*Z,w+=j*S,w+=L*A,w+=E*X,x=f+=(w+=H*(5*C))>>>13,x+=k*C,x+=z*W,x+=M*F,x+=N*U,f=(x+=O*R)>>>13,x&=8191,x+=T*D,x+=j*Z,x+=L*S,x+=E*A,k=d=8191&(f=(f=((f+=(x+=H*X)>>>13)<<2)+f|0)+(d&=8191)|0),z=h+=f>>>=13,M=p&=8191,N=m&=8191,O=y&=8191,T=v&=8191,j=b&=8191,L=g&=8191,E=w&=8191,H=x&=8191,t+=16,n-=16;this.h[0]=k,this.h[1]=z,this.h[2]=M,this.h[3]=N,this.h[4]=O,this.h[5]=T,this.h[6]=j,this.h[7]=L,this.h[8]=E,this.h[9]=H},M.prototype.finish=function(e,t){var n,r,i,o,a=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(n=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=n,n=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*n,n=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=n,n=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=n,a[0]=this.h[0]+5,n=a[0]>>>13,a[0]&=8191,o=1;o<10;o++)a[o]=this.h[o]+n,n=a[o]>>>13,a[o]&=8191;for(a[9]-=8192,r=(1^n)-1,o=0;o<10;o++)a[o]&=r;for(r=~r,o=0;o<10;o++)this.h[o]=this.h[o]&r|a[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,o=1;o<8;o++)i=(this.h[o]+this.pad[o]|0)+(i>>>16)|0,this.h[o]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},M.prototype.update=function(e,t,n){var r,i;if(this.leftover){for((i=16-this.leftover)>n&&(i=n),r=0;r<i;r++)this.buffer[this.leftover+r]=e[t+r];if(n-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(n>=16&&(i=n-n%16,this.blocks(e,t,i),t+=i,n-=i),n){for(r=0;r<n;r++)this.buffer[this.leftover+r]=e[t+r];this.leftover+=n}};var V=T,G=j;var K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function J(e,t,n,r){for(var i,o,a,s,l,u,c,f,d,h,p,m,y,v,b,g,w,x,P,k,z,M,N,O,T,j,L=new Int32Array(16),E=new Int32Array(16),H=e[0],X=e[1],A=e[2],S=e[3],Z=e[4],D=e[5],R=e[6],U=e[7],F=t[0],W=t[1],C=t[2],q=t[3],I=t[4],B=t[5],Y=t[6],V=t[7],G=0;r>=128;){for(P=0;P<16;P++)k=8*P+G,L[P]=n[k+0]<<24|n[k+1]<<16|n[k+2]<<8|n[k+3],E[P]=n[k+4]<<24|n[k+5]<<16|n[k+6]<<8|n[k+7];for(P=0;P<80;P++)if(i=H,o=X,a=A,s=S,l=Z,u=D,c=R,U,d=F,h=W,p=C,m=q,y=I,v=B,b=Y,V,N=65535&(M=V),O=M>>>16,T=65535&(z=U),j=z>>>16,N+=65535&(M=(I>>>14|Z<<18)^(I>>>18|Z<<14)^(Z>>>9|I<<23)),O+=M>>>16,T+=65535&(z=(Z>>>14|I<<18)^(Z>>>18|I<<14)^(I>>>9|Z<<23)),j+=z>>>16,N+=65535&(M=I&B^~I&Y),O+=M>>>16,T+=65535&(z=Z&D^~Z&R),j+=z>>>16,N+=65535&(M=K[2*P+1]),O+=M>>>16,T+=65535&(z=K[2*P]),j+=z>>>16,z=L[P%16],O+=(M=E[P%16])>>>16,T+=65535&z,j+=z>>>16,T+=(O+=(N+=65535&M)>>>16)>>>16,N=65535&(M=x=65535&N|O<<16),O=M>>>16,T=65535&(z=w=65535&T|(j+=T>>>16)<<16),j=z>>>16,N+=65535&(M=(F>>>28|H<<4)^(H>>>2|F<<30)^(H>>>7|F<<25)),O+=M>>>16,T+=65535&(z=(H>>>28|F<<4)^(F>>>2|H<<30)^(F>>>7|H<<25)),j+=z>>>16,O+=(M=F&W^F&C^W&C)>>>16,T+=65535&(z=H&X^H&A^X&A),j+=z>>>16,f=65535&(T+=(O+=(N+=65535&M)>>>16)>>>16)|(j+=T>>>16)<<16,g=65535&N|O<<16,N=65535&(M=m),O=M>>>16,T=65535&(z=s),j=z>>>16,O+=(M=x)>>>16,T+=65535&(z=w),j+=z>>>16,X=i,A=o,S=a,Z=s=65535&(T+=(O+=(N+=65535&M)>>>16)>>>16)|(j+=T>>>16)<<16,D=l,R=u,U=c,H=f,W=d,C=h,q=p,I=m=65535&N|O<<16,B=y,Y=v,V=b,F=g,P%16===15)for(k=0;k<16;k++)z=L[k],N=65535&(M=E[k]),O=M>>>16,T=65535&z,j=z>>>16,z=L[(k+9)%16],N+=65535&(M=E[(k+9)%16]),O+=M>>>16,T+=65535&z,j+=z>>>16,w=L[(k+1)%16],N+=65535&(M=((x=E[(k+1)%16])>>>1|w<<31)^(x>>>8|w<<24)^(x>>>7|w<<25)),O+=M>>>16,T+=65535&(z=(w>>>1|x<<31)^(w>>>8|x<<24)^w>>>7),j+=z>>>16,w=L[(k+14)%16],O+=(M=((x=E[(k+14)%16])>>>19|w<<13)^(w>>>29|x<<3)^(x>>>6|w<<26))>>>16,T+=65535&(z=(w>>>19|x<<13)^(x>>>29|w<<3)^w>>>6),j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,L[k]=65535&T|j<<16,E[k]=65535&N|O<<16;N=65535&(M=F),O=M>>>16,T=65535&(z=H),j=z>>>16,z=e[0],O+=(M=t[0])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[0]=H=65535&T|j<<16,t[0]=F=65535&N|O<<16,N=65535&(M=W),O=M>>>16,T=65535&(z=X),j=z>>>16,z=e[1],O+=(M=t[1])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[1]=X=65535&T|j<<16,t[1]=W=65535&N|O<<16,N=65535&(M=C),O=M>>>16,T=65535&(z=A),j=z>>>16,z=e[2],O+=(M=t[2])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[2]=A=65535&T|j<<16,t[2]=C=65535&N|O<<16,N=65535&(M=q),O=M>>>16,T=65535&(z=S),j=z>>>16,z=e[3],O+=(M=t[3])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[3]=S=65535&T|j<<16,t[3]=q=65535&N|O<<16,N=65535&(M=I),O=M>>>16,T=65535&(z=Z),j=z>>>16,z=e[4],O+=(M=t[4])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[4]=Z=65535&T|j<<16,t[4]=I=65535&N|O<<16,N=65535&(M=B),O=M>>>16,T=65535&(z=D),j=z>>>16,z=e[5],O+=(M=t[5])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[5]=D=65535&T|j<<16,t[5]=B=65535&N|O<<16,N=65535&(M=Y),O=M>>>16,T=65535&(z=R),j=z>>>16,z=e[6],O+=(M=t[6])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[6]=R=65535&T|j<<16,t[6]=Y=65535&N|O<<16,N=65535&(M=V),O=M>>>16,T=65535&(z=U),j=z>>>16,z=e[7],O+=(M=t[7])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[7]=U=65535&T|j<<16,t[7]=V=65535&N|O<<16,G+=128,r-=128}return r}function Q(e,t,n){var r,i=new Int32Array(8),o=new Int32Array(8),a=new Uint8Array(256),s=n;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,J(i,o,t,n),n%=128,r=0;r<n;r++)a[r]=t[s-n+r];for(a[n]=128,a[(n=256-128*(n<112?1:0))-9]=0,p(a,n-8,s/536870912|0,s<<3),J(i,o,a,n),r=0;r<8;r++)p(e,8*r,i[r],o[r]);return 0}function _(e,n){var r=t(),i=t(),o=t(),a=t(),s=t(),l=t(),u=t(),f=t(),d=t();R(r,e[1],e[0]),R(d,n[1],n[0]),U(r,r,d),D(i,e[0],e[1]),D(d,n[0],n[1]),U(i,i,d),U(o,e[3],n[3]),U(o,o,c),U(a,e[2],n[2]),D(a,a,a),R(s,i,r),R(l,a,o),D(u,a,o),D(f,i,r),U(e[0],s,l),U(e[1],f,u),U(e[2],u,l),U(e[3],s,f)}function $(e,t,n){var r;for(r=0;r<4;r++)H(e[r],t[r],n)}function ee(e,n){var r=t(),i=t(),o=t();W(o,n[2]),U(r,n[0],o),U(i,n[1],o),X(e,i),e[31]^=S(r)<<7}function te(e,t,n){var r,i;for(L(e[0],a),L(e[1],s),L(e[2],s),L(e[3],a),i=255;i>=0;--i)$(e,t,r=n[i/8|0]>>(7&i)&1),_(t,e),_(e,e),$(e,t,r)}function ne(e,n){var r=[t(),t(),t(),t()];L(r[0],f),L(r[1],d),L(r[2],s),U(r[3],f,d),te(e,r,n)}function re(e,n,i){var o,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(i||r(n,32),Q(a,n,32),a[0]&=248,a[31]&=127,a[31]|=64,ne(s,a),ee(e,s),o=0;o<32;o++)n[o+32]=e[o];return 0}var ie=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var n,r,i,o;for(r=63;r>=32;--r){for(n=0,i=r-32,o=r-12;i<o;++i)t[i]+=n-16*t[r]*ie[i-(r-32)],n=Math.floor((t[i]+128)/256),t[i]-=256*n;t[i]+=n,t[r]=0}for(n=0,i=0;i<32;i++)t[i]+=n-(t[31]>>4)*ie[i],n=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=n*ie[i];for(r=0;r<32;r++)t[r+1]+=t[r]>>8,e[r]=255&t[r]}function ae(e){var t,n=new Float64Array(64);for(t=0;t<64;t++)n[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,n)}function se(e,n,r,i){var o,a,s=new Uint8Array(64),l=new Uint8Array(64),u=new Uint8Array(64),c=new Float64Array(64),f=[t(),t(),t(),t()];Q(s,i,32),s[0]&=248,s[31]&=127,s[31]|=64;var d=r+64;for(o=0;o<r;o++)e[64+o]=n[o];for(o=0;o<32;o++)e[32+o]=s[32+o];for(Q(u,e.subarray(32),r+32),ae(u),ne(f,u),ee(e,f),o=32;o<64;o++)e[o]=i[o];for(Q(l,e,r+64),ae(l),o=0;o<64;o++)c[o]=0;for(o=0;o<32;o++)c[o]=u[o];for(o=0;o<32;o++)for(a=0;a<32;a++)c[o+a]+=l[o]*s[a];return oe(e.subarray(32),c),d}function le(e,n,r,i){var o,l=new Uint8Array(32),c=new Uint8Array(64),f=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(r<64)return-1;if(function(e,n){var r=t(),i=t(),o=t(),l=t(),c=t(),f=t(),d=t();return L(e[2],s),Z(e[1],n),F(o,e[1]),U(l,o,u),R(o,o,e[2]),D(l,e[2],l),F(c,l),F(f,c),U(d,f,c),U(r,d,o),U(r,r,l),C(r,r),U(r,r,o),U(r,r,l),U(r,r,l),U(e[0],r,l),F(i,e[0]),U(i,i,l),A(i,o)&&U(e[0],e[0],h),F(i,e[0]),U(i,i,l),A(i,o)?-1:(S(e[0])===n[31]>>7&&R(e[0],a,e[0]),U(e[3],e[0],e[1]),0)}(d,i))return-1;for(o=0;o<r;o++)e[o]=n[o];for(o=0;o<32;o++)e[o+32]=i[o];if(Q(c,e,r),ae(c),te(f,d,c),ne(d,n.subarray(32)),_(f,d),ee(l,f),r-=64,v(n,0,l,0)){for(o=0;o<r;o++)e[o]=0;return-1}for(o=0;o<r;o++)e[o]=n[o+64];return r}var ue=16,ce=64,fe=32,de=64;function he(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function pe(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function me(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:g,crypto_stream_xor:z,crypto_stream:k,crypto_stream_salsa20_xor:x,crypto_stream_salsa20:P,crypto_onetimeauth:N,crypto_onetimeauth_verify:O,crypto_verify_16:y,crypto_verify_32:v,crypto_secretbox:T,crypto_secretbox_open:j,crypto_scalarmult:q,crypto_scalarmult_base:I,crypto_box_beforenm:Y,crypto_box_afternm:V,crypto_box:function(e,t,n,r,i,o){var a=new Uint8Array(32);return Y(a,i,o),V(e,t,n,r,a)},crypto_box_open:function(e,t,n,r,i,o){var a=new Uint8Array(32);return Y(a,i,o),G(e,t,n,r,a)},crypto_box_keypair:B,crypto_hash:Q,crypto_sign:se,crypto_sign_keypair:re,crypto_sign_open:le,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:ue,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:fe,crypto_sign_SECRETKEYBYTES:de,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:u,L:ie,pack25519:X,unpack25519:Z,M:U,A:D,S:F,Z:R,pow2523:C,add:_,set25519:L,modL:oe,scalarmult:te,scalarbase:ne},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,n){pe(e,t,n),he(n,t);for(var r=new Uint8Array(32+e.length),i=new Uint8Array(r.length),o=0;o<e.length;o++)r[o+32]=e[o];return T(i,r,r.length,t,n),i.subarray(ue)},e.secretbox.open=function(e,t,n){pe(e,t,n),he(n,t);for(var r=new Uint8Array(ue+e.length),i=new Uint8Array(r.length),o=0;o<e.length;o++)r[o+ue]=e[o];return r.length<32||0!==j(i,r,r.length,t,n)?null:i.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=ue,e.scalarMult=function(e,t){if(pe(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var n=new Uint8Array(32);return q(n,e,t),n},e.scalarMult.base=function(e){if(pe(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return I(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,n,r,i){var o=e.box.before(r,i);return e.secretbox(t,n,o)},e.box.before=function(e,t){pe(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var n=new Uint8Array(32);return Y(n,e,t),n},e.box.after=e.secretbox,e.box.open=function(t,n,r,i){var o=e.box.before(r,i);return e.secretbox.open(t,n,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return B(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(pe(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return I(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(pe(e,t),t.length!==de)throw new Error("bad secret key size");var n=new Uint8Array(ce+e.length);return se(n,e,e.length,t),n},e.sign.open=function(e,t){if(pe(e,t),t.length!==fe)throw new Error("bad public key size");var n=new Uint8Array(e.length),r=le(n,e,e.length,t);if(r<0)return null;for(var i=new Uint8Array(r),o=0;o<i.length;o++)i[o]=n[o];return i},e.sign.detached=function(t,n){for(var r=e.sign(t,n),i=new Uint8Array(ce),o=0;o<i.length;o++)i[o]=r[o];return i},e.sign.detached.verify=function(e,t,n){if(pe(e,t,n),t.length!==ce)throw new Error("bad signature size");if(n.length!==fe)throw new Error("bad public key size");var r,i=new Uint8Array(ce+e.length),o=new Uint8Array(ce+e.length);for(r=0;r<ce;r++)i[r]=t[r];for(r=0;r<e.length;r++)i[r+ce]=e[r];return le(o,i,i.length,n)>=0},e.sign.keyPair=function(){var e=new Uint8Array(fe),t=new Uint8Array(de);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(pe(e),e.length!==de)throw new Error("bad secret key size");for(var t=new Uint8Array(fe),n=0;n<t.length;n++)t[n]=e[32+n];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(pe(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(fe),n=new Uint8Array(de),r=0;r<32;r++)n[r]=e[r];return re(t,n,!0),{publicKey:t,secretKey:n}},e.sign.publicKeyLength=fe,e.sign.secretKeyLength=de,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){pe(e);var t=new Uint8Array(64);return Q(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return pe(e,t),0!==e.length&&0!==t.length&&(e.length===t.length&&0===m(e,0,t,0,e.length))},e.setPRNG=function(e){r=e},function(){var t="undefined"!==typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){e.setPRNG((function(e,n){var r,i=new Uint8Array(n);for(r=0;r<n;r+=65536)t.getRandomValues(i.subarray(r,r+Math.min(n-r,65536)));for(r=0;r<n;r++)e[r]=i[r];me(i)}))}else(t=n(654))&&t.randomBytes&&e.setPRNG((function(e,n){var r,i=t.randomBytes(n);for(r=0;r<n;r++)e[r]=i[r];me(i)}))}()}(e.exports?e.exports:self.nacl=self.nacl||{})},826:(e,t,n)=>{!function(e){"use strict";var t=function(e){var t,n=new Float64Array(16);if(e)for(t=0;t<e.length;t++)n[t]=e[t];return n},r=function(){throw new Error("no PRNG")},i=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var a=t(),s=t([1]),l=t([56129,1]),u=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),c=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),f=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),d=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(e,t,n,r){e[t]=n>>24&255,e[t+1]=n>>16&255,e[t+2]=n>>8&255,e[t+3]=255&n,e[t+4]=r>>24&255,e[t+5]=r>>16&255,e[t+6]=r>>8&255,e[t+7]=255&r}function m(e,t,n,r,i){var o,a=0;for(o=0;o<i;o++)a|=e[t+o]^n[r+o];return(1&a-1>>>8)-1}function y(e,t,n,r){return m(e,t,n,r,16)}function v(e,t,n,r){return m(e,t,n,r,32)}function b(e,t,n,r){!function(e,t,n,r){for(var i,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,u=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,m=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,y=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,v=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,b=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,g=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,w=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,x=o,P=a,k=s,z=l,M=u,N=c,O=f,T=d,j=h,L=p,E=m,H=y,X=v,A=b,S=g,Z=w,D=0;D<20;D+=2)x^=(i=(X^=(i=(j^=(i=(M^=(i=x+X|0)<<7|i>>>25)+x|0)<<9|i>>>23)+M|0)<<13|i>>>19)+j|0)<<18|i>>>14,N^=(i=(P^=(i=(A^=(i=(L^=(i=N+P|0)<<7|i>>>25)+N|0)<<9|i>>>23)+L|0)<<13|i>>>19)+A|0)<<18|i>>>14,E^=(i=(O^=(i=(k^=(i=(S^=(i=E+O|0)<<7|i>>>25)+E|0)<<9|i>>>23)+S|0)<<13|i>>>19)+k|0)<<18|i>>>14,Z^=(i=(H^=(i=(T^=(i=(z^=(i=Z+H|0)<<7|i>>>25)+Z|0)<<9|i>>>23)+z|0)<<13|i>>>19)+T|0)<<18|i>>>14,x^=(i=(z^=(i=(k^=(i=(P^=(i=x+z|0)<<7|i>>>25)+x|0)<<9|i>>>23)+P|0)<<13|i>>>19)+k|0)<<18|i>>>14,N^=(i=(M^=(i=(T^=(i=(O^=(i=N+M|0)<<7|i>>>25)+N|0)<<9|i>>>23)+O|0)<<13|i>>>19)+T|0)<<18|i>>>14,E^=(i=(L^=(i=(j^=(i=(H^=(i=E+L|0)<<7|i>>>25)+E|0)<<9|i>>>23)+H|0)<<13|i>>>19)+j|0)<<18|i>>>14,Z^=(i=(S^=(i=(A^=(i=(X^=(i=Z+S|0)<<7|i>>>25)+Z|0)<<9|i>>>23)+X|0)<<13|i>>>19)+A|0)<<18|i>>>14;x=x+o|0,P=P+a|0,k=k+s|0,z=z+l|0,M=M+u|0,N=N+c|0,O=O+f|0,T=T+d|0,j=j+h|0,L=L+p|0,E=E+m|0,H=H+y|0,X=X+v|0,A=A+b|0,S=S+g|0,Z=Z+w|0,e[0]=x>>>0&255,e[1]=x>>>8&255,e[2]=x>>>16&255,e[3]=x>>>24&255,e[4]=P>>>0&255,e[5]=P>>>8&255,e[6]=P>>>16&255,e[7]=P>>>24&255,e[8]=k>>>0&255,e[9]=k>>>8&255,e[10]=k>>>16&255,e[11]=k>>>24&255,e[12]=z>>>0&255,e[13]=z>>>8&255,e[14]=z>>>16&255,e[15]=z>>>24&255,e[16]=M>>>0&255,e[17]=M>>>8&255,e[18]=M>>>16&255,e[19]=M>>>24&255,e[20]=N>>>0&255,e[21]=N>>>8&255,e[22]=N>>>16&255,e[23]=N>>>24&255,e[24]=O>>>0&255,e[25]=O>>>8&255,e[26]=O>>>16&255,e[27]=O>>>24&255,e[28]=T>>>0&255,e[29]=T>>>8&255,e[30]=T>>>16&255,e[31]=T>>>24&255,e[32]=j>>>0&255,e[33]=j>>>8&255,e[34]=j>>>16&255,e[35]=j>>>24&255,e[36]=L>>>0&255,e[37]=L>>>8&255,e[38]=L>>>16&255,e[39]=L>>>24&255,e[40]=E>>>0&255,e[41]=E>>>8&255,e[42]=E>>>16&255,e[43]=E>>>24&255,e[44]=H>>>0&255,e[45]=H>>>8&255,e[46]=H>>>16&255,e[47]=H>>>24&255,e[48]=X>>>0&255,e[49]=X>>>8&255,e[50]=X>>>16&255,e[51]=X>>>24&255,e[52]=A>>>0&255,e[53]=A>>>8&255,e[54]=A>>>16&255,e[55]=A>>>24&255,e[56]=S>>>0&255,e[57]=S>>>8&255,e[58]=S>>>16&255,e[59]=S>>>24&255,e[60]=Z>>>0&255,e[61]=Z>>>8&255,e[62]=Z>>>16&255,e[63]=Z>>>24&255}(e,t,n,r)}function g(e,t,n,r){!function(e,t,n,r){for(var i,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,l=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,u=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,f=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,d=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,m=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,y=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,v=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,b=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,g=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,w=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,x=0;x<20;x+=2)o^=(i=(v^=(i=(h^=(i=(u^=(i=o+v|0)<<7|i>>>25)+o|0)<<9|i>>>23)+u|0)<<13|i>>>19)+h|0)<<18|i>>>14,c^=(i=(a^=(i=(b^=(i=(p^=(i=c+a|0)<<7|i>>>25)+c|0)<<9|i>>>23)+p|0)<<13|i>>>19)+b|0)<<18|i>>>14,m^=(i=(f^=(i=(s^=(i=(g^=(i=m+f|0)<<7|i>>>25)+m|0)<<9|i>>>23)+g|0)<<13|i>>>19)+s|0)<<18|i>>>14,w^=(i=(y^=(i=(d^=(i=(l^=(i=w+y|0)<<7|i>>>25)+w|0)<<9|i>>>23)+l|0)<<13|i>>>19)+d|0)<<18|i>>>14,o^=(i=(l^=(i=(s^=(i=(a^=(i=o+l|0)<<7|i>>>25)+o|0)<<9|i>>>23)+a|0)<<13|i>>>19)+s|0)<<18|i>>>14,c^=(i=(u^=(i=(d^=(i=(f^=(i=c+u|0)<<7|i>>>25)+c|0)<<9|i>>>23)+f|0)<<13|i>>>19)+d|0)<<18|i>>>14,m^=(i=(p^=(i=(h^=(i=(y^=(i=m+p|0)<<7|i>>>25)+m|0)<<9|i>>>23)+y|0)<<13|i>>>19)+h|0)<<18|i>>>14,w^=(i=(g^=(i=(b^=(i=(v^=(i=w+g|0)<<7|i>>>25)+w|0)<<9|i>>>23)+v|0)<<13|i>>>19)+b|0)<<18|i>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=c>>>0&255,e[5]=c>>>8&255,e[6]=c>>>16&255,e[7]=c>>>24&255,e[8]=m>>>0&255,e[9]=m>>>8&255,e[10]=m>>>16&255,e[11]=m>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=f>>>0&255,e[17]=f>>>8&255,e[18]=f>>>16&255,e[19]=f>>>24&255,e[20]=d>>>0&255,e[21]=d>>>8&255,e[22]=d>>>16&255,e[23]=d>>>24&255,e[24]=h>>>0&255,e[25]=h>>>8&255,e[26]=h>>>16&255,e[27]=h>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,t,n,r)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function x(e,t,n,r,i,o,a){var s,l,u=new Uint8Array(16),c=new Uint8Array(64);for(l=0;l<16;l++)u[l]=0;for(l=0;l<8;l++)u[l]=o[l];for(;i>=64;){for(b(c,u,a,w),l=0;l<64;l++)e[t+l]=n[r+l]^c[l];for(s=1,l=8;l<16;l++)s=s+(255&u[l])|0,u[l]=255&s,s>>>=8;i-=64,t+=64,r+=64}if(i>0)for(b(c,u,a,w),l=0;l<i;l++)e[t+l]=n[r+l]^c[l];return 0}function P(e,t,n,r,i){var o,a,s=new Uint8Array(16),l=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=r[a];for(;n>=64;){for(b(l,s,i,w),a=0;a<64;a++)e[t+a]=l[a];for(o=1,a=8;a<16;a++)o=o+(255&s[a])|0,s[a]=255&o,o>>>=8;n-=64,t+=64}if(n>0)for(b(l,s,i,w),a=0;a<n;a++)e[t+a]=l[a];return 0}function k(e,t,n,r,i){var o=new Uint8Array(32);g(o,r,i,w);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=r[s+16];return P(e,t,n,a,o)}function z(e,t,n,r,i,o,a){var s=new Uint8Array(32);g(s,o,a,w);for(var l=new Uint8Array(8),u=0;u<8;u++)l[u]=o[u+16];return x(e,t,n,r,i,l,s)}var M=function(e){var t,n,r,i,o,a,s,l;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,n=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|n<<3),r=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(n>>>10|r<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(r>>>7|i<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|o<<12),this.r[5]=o>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),l=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|l<<8),this.r[9]=l>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function N(e,t,n,r,i,o){var a=new M(o);return a.update(n,r,i),a.finish(e,t),0}function O(e,t,n,r,i,o){var a=new Uint8Array(16);return N(a,0,n,r,i,o),y(e,t,a,0)}function T(e,t,n,r,i){var o;if(n<32)return-1;for(z(e,0,t,0,n,r,i),N(e,16,e,32,n-32,e),o=0;o<16;o++)e[o]=0;return 0}function j(e,t,n,r,i){var o,a=new Uint8Array(32);if(n<32)return-1;if(k(a,0,32,r,i),0!==O(t,16,t,32,n-32,a))return-1;for(z(e,0,t,0,n,r,i),o=0;o<32;o++)e[o]=0;return 0}function L(e,t){var n;for(n=0;n<16;n++)e[n]=0|t[n]}function E(e){var t,n,r=1;for(t=0;t<16;t++)n=e[t]+r+65535,r=Math.floor(n/65536),e[t]=n-65536*r;e[0]+=r-1+37*(r-1)}function H(e,t,n){for(var r,i=~(n-1),o=0;o<16;o++)r=i&(e[o]^t[o]),e[o]^=r,t[o]^=r}function X(e,n){var r,i,o,a=t(),s=t();for(r=0;r<16;r++)s[r]=n[r];for(E(s),E(s),E(s),i=0;i<2;i++){for(a[0]=s[0]-65517,r=1;r<15;r++)a[r]=s[r]-65535-(a[r-1]>>16&1),a[r-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),o=a[15]>>16&1,a[14]&=65535,H(s,a,1-o)}for(r=0;r<16;r++)e[2*r]=255&s[r],e[2*r+1]=s[r]>>8}function A(e,t){var n=new Uint8Array(32),r=new Uint8Array(32);return X(n,e),X(r,t),v(n,0,r,0)}function S(e){var t=new Uint8Array(32);return X(t,e),1&t[0]}function Z(e,t){var n;for(n=0;n<16;n++)e[n]=t[2*n]+(t[2*n+1]<<8);e[15]&=32767}function D(e,t,n){for(var r=0;r<16;r++)e[r]=t[r]+n[r]}function R(e,t,n){for(var r=0;r<16;r++)e[r]=t[r]-n[r]}function U(e,t,n){var r,i,o=0,a=0,s=0,l=0,u=0,c=0,f=0,d=0,h=0,p=0,m=0,y=0,v=0,b=0,g=0,w=0,x=0,P=0,k=0,z=0,M=0,N=0,O=0,T=0,j=0,L=0,E=0,H=0,X=0,A=0,S=0,Z=n[0],D=n[1],R=n[2],U=n[3],F=n[4],W=n[5],C=n[6],q=n[7],I=n[8],B=n[9],Y=n[10],V=n[11],G=n[12],K=n[13],J=n[14],Q=n[15];o+=(r=t[0])*Z,a+=r*D,s+=r*R,l+=r*U,u+=r*F,c+=r*W,f+=r*C,d+=r*q,h+=r*I,p+=r*B,m+=r*Y,y+=r*V,v+=r*G,b+=r*K,g+=r*J,w+=r*Q,a+=(r=t[1])*Z,s+=r*D,l+=r*R,u+=r*U,c+=r*F,f+=r*W,d+=r*C,h+=r*q,p+=r*I,m+=r*B,y+=r*Y,v+=r*V,b+=r*G,g+=r*K,w+=r*J,x+=r*Q,s+=(r=t[2])*Z,l+=r*D,u+=r*R,c+=r*U,f+=r*F,d+=r*W,h+=r*C,p+=r*q,m+=r*I,y+=r*B,v+=r*Y,b+=r*V,g+=r*G,w+=r*K,x+=r*J,P+=r*Q,l+=(r=t[3])*Z,u+=r*D,c+=r*R,f+=r*U,d+=r*F,h+=r*W,p+=r*C,m+=r*q,y+=r*I,v+=r*B,b+=r*Y,g+=r*V,w+=r*G,x+=r*K,P+=r*J,k+=r*Q,u+=(r=t[4])*Z,c+=r*D,f+=r*R,d+=r*U,h+=r*F,p+=r*W,m+=r*C,y+=r*q,v+=r*I,b+=r*B,g+=r*Y,w+=r*V,x+=r*G,P+=r*K,k+=r*J,z+=r*Q,c+=(r=t[5])*Z,f+=r*D,d+=r*R,h+=r*U,p+=r*F,m+=r*W,y+=r*C,v+=r*q,b+=r*I,g+=r*B,w+=r*Y,x+=r*V,P+=r*G,k+=r*K,z+=r*J,M+=r*Q,f+=(r=t[6])*Z,d+=r*D,h+=r*R,p+=r*U,m+=r*F,y+=r*W,v+=r*C,b+=r*q,g+=r*I,w+=r*B,x+=r*Y,P+=r*V,k+=r*G,z+=r*K,M+=r*J,N+=r*Q,d+=(r=t[7])*Z,h+=r*D,p+=r*R,m+=r*U,y+=r*F,v+=r*W,b+=r*C,g+=r*q,w+=r*I,x+=r*B,P+=r*Y,k+=r*V,z+=r*G,M+=r*K,N+=r*J,O+=r*Q,h+=(r=t[8])*Z,p+=r*D,m+=r*R,y+=r*U,v+=r*F,b+=r*W,g+=r*C,w+=r*q,x+=r*I,P+=r*B,k+=r*Y,z+=r*V,M+=r*G,N+=r*K,O+=r*J,T+=r*Q,p+=(r=t[9])*Z,m+=r*D,y+=r*R,v+=r*U,b+=r*F,g+=r*W,w+=r*C,x+=r*q,P+=r*I,k+=r*B,z+=r*Y,M+=r*V,N+=r*G,O+=r*K,T+=r*J,j+=r*Q,m+=(r=t[10])*Z,y+=r*D,v+=r*R,b+=r*U,g+=r*F,w+=r*W,x+=r*C,P+=r*q,k+=r*I,z+=r*B,M+=r*Y,N+=r*V,O+=r*G,T+=r*K,j+=r*J,L+=r*Q,y+=(r=t[11])*Z,v+=r*D,b+=r*R,g+=r*U,w+=r*F,x+=r*W,P+=r*C,k+=r*q,z+=r*I,M+=r*B,N+=r*Y,O+=r*V,T+=r*G,j+=r*K,L+=r*J,E+=r*Q,v+=(r=t[12])*Z,b+=r*D,g+=r*R,w+=r*U,x+=r*F,P+=r*W,k+=r*C,z+=r*q,M+=r*I,N+=r*B,O+=r*Y,T+=r*V,j+=r*G,L+=r*K,E+=r*J,H+=r*Q,b+=(r=t[13])*Z,g+=r*D,w+=r*R,x+=r*U,P+=r*F,k+=r*W,z+=r*C,M+=r*q,N+=r*I,O+=r*B,T+=r*Y,j+=r*V,L+=r*G,E+=r*K,H+=r*J,X+=r*Q,g+=(r=t[14])*Z,w+=r*D,x+=r*R,P+=r*U,k+=r*F,z+=r*W,M+=r*C,N+=r*q,O+=r*I,T+=r*B,j+=r*Y,L+=r*V,E+=r*G,H+=r*K,X+=r*J,A+=r*Q,w+=(r=t[15])*Z,a+=38*(P+=r*R),s+=38*(k+=r*U),l+=38*(z+=r*F),u+=38*(M+=r*W),c+=38*(N+=r*C),f+=38*(O+=r*q),d+=38*(T+=r*I),h+=38*(j+=r*B),p+=38*(L+=r*Y),m+=38*(E+=r*V),y+=38*(H+=r*G),v+=38*(X+=r*K),b+=38*(A+=r*J),g+=38*(S+=r*Q),o=(r=(o+=38*(x+=r*D))+(i=1)+65535)-65536*(i=Math.floor(r/65536)),a=(r=a+i+65535)-65536*(i=Math.floor(r/65536)),s=(r=s+i+65535)-65536*(i=Math.floor(r/65536)),l=(r=l+i+65535)-65536*(i=Math.floor(r/65536)),u=(r=u+i+65535)-65536*(i=Math.floor(r/65536)),c=(r=c+i+65535)-65536*(i=Math.floor(r/65536)),f=(r=f+i+65535)-65536*(i=Math.floor(r/65536)),d=(r=d+i+65535)-65536*(i=Math.floor(r/65536)),h=(r=h+i+65535)-65536*(i=Math.floor(r/65536)),p=(r=p+i+65535)-65536*(i=Math.floor(r/65536)),m=(r=m+i+65535)-65536*(i=Math.floor(r/65536)),y=(r=y+i+65535)-65536*(i=Math.floor(r/65536)),v=(r=v+i+65535)-65536*(i=Math.floor(r/65536)),b=(r=b+i+65535)-65536*(i=Math.floor(r/65536)),g=(r=g+i+65535)-65536*(i=Math.floor(r/65536)),w=(r=w+i+65535)-65536*(i=Math.floor(r/65536)),o=(r=(o+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(r/65536)),a=(r=a+i+65535)-65536*(i=Math.floor(r/65536)),s=(r=s+i+65535)-65536*(i=Math.floor(r/65536)),l=(r=l+i+65535)-65536*(i=Math.floor(r/65536)),u=(r=u+i+65535)-65536*(i=Math.floor(r/65536)),c=(r=c+i+65535)-65536*(i=Math.floor(r/65536)),f=(r=f+i+65535)-65536*(i=Math.floor(r/65536)),d=(r=d+i+65535)-65536*(i=Math.floor(r/65536)),h=(r=h+i+65535)-65536*(i=Math.floor(r/65536)),p=(r=p+i+65535)-65536*(i=Math.floor(r/65536)),m=(r=m+i+65535)-65536*(i=Math.floor(r/65536)),y=(r=y+i+65535)-65536*(i=Math.floor(r/65536)),v=(r=v+i+65535)-65536*(i=Math.floor(r/65536)),b=(r=b+i+65535)-65536*(i=Math.floor(r/65536)),g=(r=g+i+65535)-65536*(i=Math.floor(r/65536)),w=(r=w+i+65535)-65536*(i=Math.floor(r/65536)),o+=i-1+37*(i-1),e[0]=o,e[1]=a,e[2]=s,e[3]=l,e[4]=u,e[5]=c,e[6]=f,e[7]=d,e[8]=h,e[9]=p,e[10]=m,e[11]=y,e[12]=v,e[13]=b,e[14]=g,e[15]=w}function F(e,t){U(e,t,t)}function W(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=253;r>=0;r--)F(i,i),2!==r&&4!==r&&U(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}function C(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=250;r>=0;r--)F(i,i),1!==r&&U(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}function q(e,n,r){var i,o,a=new Uint8Array(32),s=new Float64Array(80),u=t(),c=t(),f=t(),d=t(),h=t(),p=t();for(o=0;o<31;o++)a[o]=n[o];for(a[31]=127&n[31]|64,a[0]&=248,Z(s,r),o=0;o<16;o++)c[o]=s[o],d[o]=u[o]=f[o]=0;for(u[0]=d[0]=1,o=254;o>=0;--o)H(u,c,i=a[o>>>3]>>>(7&o)&1),H(f,d,i),D(h,u,f),R(u,u,f),D(f,c,d),R(c,c,d),F(d,h),F(p,u),U(u,f,u),U(f,c,h),D(h,u,f),R(u,u,f),F(c,u),R(f,d,p),U(u,f,l),D(u,u,d),U(f,f,u),U(u,d,p),U(d,c,s),F(c,h),H(u,c,i),H(f,d,i);for(o=0;o<16;o++)s[o+16]=u[o],s[o+32]=f[o],s[o+48]=c[o],s[o+64]=d[o];var m=s.subarray(32),y=s.subarray(16);return W(m,m),U(y,y,m),X(e,y),0}function I(e,t){return q(e,t,o)}function B(e,t){return r(t,32),I(e,t)}function Y(e,t,n){var r=new Uint8Array(32);return q(r,n,t),g(e,i,r,w)}M.prototype.blocks=function(e,t,n){for(var r,i,o,a,s,l,u,c,f,d,h,p,m,y,v,b,g,w,x,P=this.fin?0:2048,k=this.h[0],z=this.h[1],M=this.h[2],N=this.h[3],O=this.h[4],T=this.h[5],j=this.h[6],L=this.h[7],E=this.h[8],H=this.h[9],X=this.r[0],A=this.r[1],S=this.r[2],Z=this.r[3],D=this.r[4],R=this.r[5],U=this.r[6],F=this.r[7],W=this.r[8],C=this.r[9];n>=16;)d=f=0,d+=(k+=8191&(r=255&e[t+0]|(255&e[t+1])<<8))*X,d+=(z+=8191&(r>>>13|(i=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*C),d+=(M+=8191&(i>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*W),d+=(N+=8191&(o>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),f=(d+=(O+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*U))>>>13,d&=8191,d+=(T+=s>>>1&8191)*(5*R),d+=(j+=8191&(s>>>14|(l=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*D),d+=(L+=8191&(l>>>11|(u=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*Z),d+=(E+=8191&(u>>>8|(c=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*S),h=f+=(d+=(H+=c>>>5|P)*(5*A))>>>13,h+=k*A,h+=z*X,h+=M*(5*C),h+=N*(5*W),f=(h+=O*(5*F))>>>13,h&=8191,h+=T*(5*U),h+=j*(5*R),h+=L*(5*D),h+=E*(5*Z),f+=(h+=H*(5*S))>>>13,h&=8191,p=f,p+=k*S,p+=z*A,p+=M*X,p+=N*(5*C),f=(p+=O*(5*W))>>>13,p&=8191,p+=T*(5*F),p+=j*(5*U),p+=L*(5*R),p+=E*(5*D),m=f+=(p+=H*(5*Z))>>>13,m+=k*Z,m+=z*S,m+=M*A,m+=N*X,f=(m+=O*(5*C))>>>13,m&=8191,m+=T*(5*W),m+=j*(5*F),m+=L*(5*U),m+=E*(5*R),y=f+=(m+=H*(5*D))>>>13,y+=k*D,y+=z*Z,y+=M*S,y+=N*A,f=(y+=O*X)>>>13,y&=8191,y+=T*(5*C),y+=j*(5*W),y+=L*(5*F),y+=E*(5*U),v=f+=(y+=H*(5*R))>>>13,v+=k*R,v+=z*D,v+=M*Z,v+=N*S,f=(v+=O*A)>>>13,v&=8191,v+=T*X,v+=j*(5*C),v+=L*(5*W),v+=E*(5*F),b=f+=(v+=H*(5*U))>>>13,b+=k*U,b+=z*R,b+=M*D,b+=N*Z,f=(b+=O*S)>>>13,b&=8191,b+=T*A,b+=j*X,b+=L*(5*C),b+=E*(5*W),g=f+=(b+=H*(5*F))>>>13,g+=k*F,g+=z*U,g+=M*R,g+=N*D,f=(g+=O*Z)>>>13,g&=8191,g+=T*S,g+=j*A,g+=L*X,g+=E*(5*C),w=f+=(g+=H*(5*W))>>>13,w+=k*W,w+=z*F,w+=M*U,w+=N*R,f=(w+=O*D)>>>13,w&=8191,w+=T*Z,w+=j*S,w+=L*A,w+=E*X,x=f+=(w+=H*(5*C))>>>13,x+=k*C,x+=z*W,x+=M*F,x+=N*U,f=(x+=O*R)>>>13,x&=8191,x+=T*D,x+=j*Z,x+=L*S,x+=E*A,k=d=8191&(f=(f=((f+=(x+=H*X)>>>13)<<2)+f|0)+(d&=8191)|0),z=h+=f>>>=13,M=p&=8191,N=m&=8191,O=y&=8191,T=v&=8191,j=b&=8191,L=g&=8191,E=w&=8191,H=x&=8191,t+=16,n-=16;this.h[0]=k,this.h[1]=z,this.h[2]=M,this.h[3]=N,this.h[4]=O,this.h[5]=T,this.h[6]=j,this.h[7]=L,this.h[8]=E,this.h[9]=H},M.prototype.finish=function(e,t){var n,r,i,o,a=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(n=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=n,n=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*n,n=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=n,n=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=n,a[0]=this.h[0]+5,n=a[0]>>>13,a[0]&=8191,o=1;o<10;o++)a[o]=this.h[o]+n,n=a[o]>>>13,a[o]&=8191;for(a[9]-=8192,r=(1^n)-1,o=0;o<10;o++)a[o]&=r;for(r=~r,o=0;o<10;o++)this.h[o]=this.h[o]&r|a[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,o=1;o<8;o++)i=(this.h[o]+this.pad[o]|0)+(i>>>16)|0,this.h[o]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},M.prototype.update=function(e,t,n){var r,i;if(this.leftover){for((i=16-this.leftover)>n&&(i=n),r=0;r<i;r++)this.buffer[this.leftover+r]=e[t+r];if(n-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(n>=16&&(i=n-n%16,this.blocks(e,t,i),t+=i,n-=i),n){for(r=0;r<n;r++)this.buffer[this.leftover+r]=e[t+r];this.leftover+=n}};var V=T,G=j;var K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function J(e,t,n,r){for(var i,o,a,s,l,u,c,f,d,h,p,m,y,v,b,g,w,x,P,k,z,M,N,O,T,j,L=new Int32Array(16),E=new Int32Array(16),H=e[0],X=e[1],A=e[2],S=e[3],Z=e[4],D=e[5],R=e[6],U=e[7],F=t[0],W=t[1],C=t[2],q=t[3],I=t[4],B=t[5],Y=t[6],V=t[7],G=0;r>=128;){for(P=0;P<16;P++)k=8*P+G,L[P]=n[k+0]<<24|n[k+1]<<16|n[k+2]<<8|n[k+3],E[P]=n[k+4]<<24|n[k+5]<<16|n[k+6]<<8|n[k+7];for(P=0;P<80;P++)if(i=H,o=X,a=A,s=S,l=Z,u=D,c=R,U,d=F,h=W,p=C,m=q,y=I,v=B,b=Y,V,N=65535&(M=V),O=M>>>16,T=65535&(z=U),j=z>>>16,N+=65535&(M=(I>>>14|Z<<18)^(I>>>18|Z<<14)^(Z>>>9|I<<23)),O+=M>>>16,T+=65535&(z=(Z>>>14|I<<18)^(Z>>>18|I<<14)^(I>>>9|Z<<23)),j+=z>>>16,N+=65535&(M=I&B^~I&Y),O+=M>>>16,T+=65535&(z=Z&D^~Z&R),j+=z>>>16,N+=65535&(M=K[2*P+1]),O+=M>>>16,T+=65535&(z=K[2*P]),j+=z>>>16,z=L[P%16],O+=(M=E[P%16])>>>16,T+=65535&z,j+=z>>>16,T+=(O+=(N+=65535&M)>>>16)>>>16,N=65535&(M=x=65535&N|O<<16),O=M>>>16,T=65535&(z=w=65535&T|(j+=T>>>16)<<16),j=z>>>16,N+=65535&(M=(F>>>28|H<<4)^(H>>>2|F<<30)^(H>>>7|F<<25)),O+=M>>>16,T+=65535&(z=(H>>>28|F<<4)^(F>>>2|H<<30)^(F>>>7|H<<25)),j+=z>>>16,O+=(M=F&W^F&C^W&C)>>>16,T+=65535&(z=H&X^H&A^X&A),j+=z>>>16,f=65535&(T+=(O+=(N+=65535&M)>>>16)>>>16)|(j+=T>>>16)<<16,g=65535&N|O<<16,N=65535&(M=m),O=M>>>16,T=65535&(z=s),j=z>>>16,O+=(M=x)>>>16,T+=65535&(z=w),j+=z>>>16,X=i,A=o,S=a,Z=s=65535&(T+=(O+=(N+=65535&M)>>>16)>>>16)|(j+=T>>>16)<<16,D=l,R=u,U=c,H=f,W=d,C=h,q=p,I=m=65535&N|O<<16,B=y,Y=v,V=b,F=g,P%16===15)for(k=0;k<16;k++)z=L[k],N=65535&(M=E[k]),O=M>>>16,T=65535&z,j=z>>>16,z=L[(k+9)%16],N+=65535&(M=E[(k+9)%16]),O+=M>>>16,T+=65535&z,j+=z>>>16,w=L[(k+1)%16],N+=65535&(M=((x=E[(k+1)%16])>>>1|w<<31)^(x>>>8|w<<24)^(x>>>7|w<<25)),O+=M>>>16,T+=65535&(z=(w>>>1|x<<31)^(w>>>8|x<<24)^w>>>7),j+=z>>>16,w=L[(k+14)%16],O+=(M=((x=E[(k+14)%16])>>>19|w<<13)^(w>>>29|x<<3)^(x>>>6|w<<26))>>>16,T+=65535&(z=(w>>>19|x<<13)^(x>>>29|w<<3)^w>>>6),j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,L[k]=65535&T|j<<16,E[k]=65535&N|O<<16;N=65535&(M=F),O=M>>>16,T=65535&(z=H),j=z>>>16,z=e[0],O+=(M=t[0])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[0]=H=65535&T|j<<16,t[0]=F=65535&N|O<<16,N=65535&(M=W),O=M>>>16,T=65535&(z=X),j=z>>>16,z=e[1],O+=(M=t[1])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[1]=X=65535&T|j<<16,t[1]=W=65535&N|O<<16,N=65535&(M=C),O=M>>>16,T=65535&(z=A),j=z>>>16,z=e[2],O+=(M=t[2])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[2]=A=65535&T|j<<16,t[2]=C=65535&N|O<<16,N=65535&(M=q),O=M>>>16,T=65535&(z=S),j=z>>>16,z=e[3],O+=(M=t[3])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[3]=S=65535&T|j<<16,t[3]=q=65535&N|O<<16,N=65535&(M=I),O=M>>>16,T=65535&(z=Z),j=z>>>16,z=e[4],O+=(M=t[4])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[4]=Z=65535&T|j<<16,t[4]=I=65535&N|O<<16,N=65535&(M=B),O=M>>>16,T=65535&(z=D),j=z>>>16,z=e[5],O+=(M=t[5])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[5]=D=65535&T|j<<16,t[5]=B=65535&N|O<<16,N=65535&(M=Y),O=M>>>16,T=65535&(z=R),j=z>>>16,z=e[6],O+=(M=t[6])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[6]=R=65535&T|j<<16,t[6]=Y=65535&N|O<<16,N=65535&(M=V),O=M>>>16,T=65535&(z=U),j=z>>>16,z=e[7],O+=(M=t[7])>>>16,T+=65535&z,j+=z>>>16,j+=(T+=(O+=(N+=65535&M)>>>16)>>>16)>>>16,e[7]=U=65535&T|j<<16,t[7]=V=65535&N|O<<16,G+=128,r-=128}return r}function Q(e,t,n){var r,i=new Int32Array(8),o=new Int32Array(8),a=new Uint8Array(256),s=n;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,J(i,o,t,n),n%=128,r=0;r<n;r++)a[r]=t[s-n+r];for(a[n]=128,a[(n=256-128*(n<112?1:0))-9]=0,p(a,n-8,s/536870912|0,s<<3),J(i,o,a,n),r=0;r<8;r++)p(e,8*r,i[r],o[r]);return 0}function _(e,n){var r=t(),i=t(),o=t(),a=t(),s=t(),l=t(),u=t(),f=t(),d=t();R(r,e[1],e[0]),R(d,n[1],n[0]),U(r,r,d),D(i,e[0],e[1]),D(d,n[0],n[1]),U(i,i,d),U(o,e[3],n[3]),U(o,o,c),U(a,e[2],n[2]),D(a,a,a),R(s,i,r),R(l,a,o),D(u,a,o),D(f,i,r),U(e[0],s,l),U(e[1],f,u),U(e[2],u,l),U(e[3],s,f)}function $(e,t,n){var r;for(r=0;r<4;r++)H(e[r],t[r],n)}function ee(e,n){var r=t(),i=t(),o=t();W(o,n[2]),U(r,n[0],o),U(i,n[1],o),X(e,i),e[31]^=S(r)<<7}function te(e,t,n){var r,i;for(L(e[0],a),L(e[1],s),L(e[2],s),L(e[3],a),i=255;i>=0;--i)$(e,t,r=n[i/8|0]>>(7&i)&1),_(t,e),_(e,e),$(e,t,r)}function ne(e,n){var r=[t(),t(),t(),t()];L(r[0],f),L(r[1],d),L(r[2],s),U(r[3],f,d),te(e,r,n)}function re(e,n,i){var o,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(i||r(n,32),Q(a,n,32),a[0]&=248,a[31]&=127,a[31]|=64,ne(s,a),ee(e,s),o=0;o<32;o++)n[o+32]=e[o];return 0}var ie=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var n,r,i,o;for(r=63;r>=32;--r){for(n=0,i=r-32,o=r-12;i<o;++i)t[i]+=n-16*t[r]*ie[i-(r-32)],n=Math.floor((t[i]+128)/256),t[i]-=256*n;t[i]+=n,t[r]=0}for(n=0,i=0;i<32;i++)t[i]+=n-(t[31]>>4)*ie[i],n=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=n*ie[i];for(r=0;r<32;r++)t[r+1]+=t[r]>>8,e[r]=255&t[r]}function ae(e){var t,n=new Float64Array(64);for(t=0;t<64;t++)n[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,n)}function se(e,n,r,i){var o,a,s=new Uint8Array(64),l=new Uint8Array(64),u=new Uint8Array(64),c=new Float64Array(64),f=[t(),t(),t(),t()];Q(s,i,32),s[0]&=248,s[31]&=127,s[31]|=64;var d=r+64;for(o=0;o<r;o++)e[64+o]=n[o];for(o=0;o<32;o++)e[32+o]=s[32+o];for(Q(u,e.subarray(32),r+32),ae(u),ne(f,u),ee(e,f),o=32;o<64;o++)e[o]=i[o];for(Q(l,e,r+64),ae(l),o=0;o<64;o++)c[o]=0;for(o=0;o<32;o++)c[o]=u[o];for(o=0;o<32;o++)for(a=0;a<32;a++)c[o+a]+=l[o]*s[a];return oe(e.subarray(32),c),d}function le(e,n,r,i){var o,l=new Uint8Array(32),c=new Uint8Array(64),f=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(r<64)return-1;if(function(e,n){var r=t(),i=t(),o=t(),l=t(),c=t(),f=t(),d=t();return L(e[2],s),Z(e[1],n),F(o,e[1]),U(l,o,u),R(o,o,e[2]),D(l,e[2],l),F(c,l),F(f,c),U(d,f,c),U(r,d,o),U(r,r,l),C(r,r),U(r,r,o),U(r,r,l),U(r,r,l),U(e[0],r,l),F(i,e[0]),U(i,i,l),A(i,o)&&U(e[0],e[0],h),F(i,e[0]),U(i,i,l),A(i,o)?-1:(S(e[0])===n[31]>>7&&R(e[0],a,e[0]),U(e[3],e[0],e[1]),0)}(d,i))return-1;for(o=0;o<r;o++)e[o]=n[o];for(o=0;o<32;o++)e[o+32]=i[o];if(Q(c,e,r),ae(c),te(f,d,c),ne(d,n.subarray(32)),_(f,d),ee(l,f),r-=64,v(n,0,l,0)){for(o=0;o<r;o++)e[o]=0;return-1}for(o=0;o<r;o++)e[o]=n[o+64];return r}var ue=16,ce=64,fe=32,de=64;function he(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function pe(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function me(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:g,crypto_stream_xor:z,crypto_stream:k,crypto_stream_salsa20_xor:x,crypto_stream_salsa20:P,crypto_onetimeauth:N,crypto_onetimeauth_verify:O,crypto_verify_16:y,crypto_verify_32:v,crypto_secretbox:T,crypto_secretbox_open:j,crypto_scalarmult:q,crypto_scalarmult_base:I,crypto_box_beforenm:Y,crypto_box_afternm:V,crypto_box:function(e,t,n,r,i,o){var a=new Uint8Array(32);return Y(a,i,o),V(e,t,n,r,a)},crypto_box_open:function(e,t,n,r,i,o){var a=new Uint8Array(32);return Y(a,i,o),G(e,t,n,r,a)},crypto_box_keypair:B,crypto_hash:Q,crypto_sign:se,crypto_sign_keypair:re,crypto_sign_open:le,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:ue,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ce,crypto_sign_PUBLICKEYBYTES:fe,crypto_sign_SECRETKEYBYTES:de,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:u,L:ie,pack25519:X,unpack25519:Z,M:U,A:D,S:F,Z:R,pow2523:C,add:_,set25519:L,modL:oe,scalarmult:te,scalarbase:ne},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,n){pe(e,t,n),he(n,t);for(var r=new Uint8Array(32+e.length),i=new Uint8Array(r.length),o=0;o<e.length;o++)r[o+32]=e[o];return T(i,r,r.length,t,n),i.subarray(ue)},e.secretbox.open=function(e,t,n){pe(e,t,n),he(n,t);for(var r=new Uint8Array(ue+e.length),i=new Uint8Array(r.length),o=0;o<e.length;o++)r[o+ue]=e[o];return r.length<32||0!==j(i,r,r.length,t,n)?null:i.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=ue,e.scalarMult=function(e,t){if(pe(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var n=new Uint8Array(32);return q(n,e,t),n},e.scalarMult.base=function(e){if(pe(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return I(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,n,r,i){var o=e.box.before(r,i);return e.secretbox(t,n,o)},e.box.before=function(e,t){pe(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var n=new Uint8Array(32);return Y(n,e,t),n},e.box.after=e.secretbox,e.box.open=function(t,n,r,i){var o=e.box.before(r,i);return e.secretbox.open(t,n,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return B(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(pe(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return I(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(pe(e,t),t.length!==de)throw new Error("bad secret key size");var n=new Uint8Array(ce+e.length);return se(n,e,e.length,t),n},e.sign.open=function(e,t){if(pe(e,t),t.length!==fe)throw new Error("bad public key size");var n=new Uint8Array(e.length),r=le(n,e,e.length,t);if(r<0)return null;for(var i=new Uint8Array(r),o=0;o<i.length;o++)i[o]=n[o];return i},e.sign.detached=function(t,n){for(var r=e.sign(t,n),i=new Uint8Array(ce),o=0;o<i.length;o++)i[o]=r[o];return i},e.sign.detached.verify=function(e,t,n){if(pe(e,t,n),t.length!==ce)throw new Error("bad signature size");if(n.length!==fe)throw new Error("bad public key size");var r,i=new Uint8Array(ce+e.length),o=new Uint8Array(ce+e.length);for(r=0;r<ce;r++)i[r]=t[r];for(r=0;r<e.length;r++)i[r+ce]=e[r];return le(o,i,i.length,n)>=0},e.sign.keyPair=function(){var e=new Uint8Array(fe),t=new Uint8Array(de);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(pe(e),e.length!==de)throw new Error("bad secret key size");for(var t=new Uint8Array(fe),n=0;n<t.length;n++)t[n]=e[32+n];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(pe(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(fe),n=new Uint8Array(de),r=0;r<32;r++)n[r]=e[r];return re(t,n,!0),{publicKey:t,secretKey:n}},e.sign.publicKeyLength=fe,e.sign.secretKeyLength=de,e.sign.seedLength=32,e.sign.signatureLength=ce,e.hash=function(e){pe(e);var t=new Uint8Array(64);return Q(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return pe(e,t),0!==e.length&&0!==t.length&&(e.length===t.length&&0===m(e,0,t,0,e.length))},e.setPRNG=function(e){r=e},function(){var t="undefined"!==typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){e.setPRNG((function(e,n){var r,i=new Uint8Array(n);for(r=0;r<n;r+=65536)t.getRandomValues(i.subarray(r,r+Math.min(n-r,65536)));for(r=0;r<n;r++)e[r]=i[r];me(i)}))}else(t=n(24))&&t.randomBytes&&e.setPRNG((function(e,n){var r,i=t.randomBytes(n);for(r=0;r<n;r++)e[r]=i[r];me(i)}))}()}(e.exports?e.exports:self.nacl=self.nacl||{})},391:e=>{"use strict";var t=function(){};e.exports=t},856:()=>{},601:()=>{},817:()=>{},341:()=>{},654:()=>{},24:()=>{},355:e=>{e.exports={bytes:"",sizeCompressed:171145,sizeUncompressed:349919}},616:e=>{e.exports={bytes:"",sizeCompressed:171464,sizeUncompressed:340174}}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[])),n.u=e=>"static/js/"+e+".d6701d21.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="tw3t-debugger:";n.l=(r,i,o,a)=>{if(e[r])e[r].push(i);else{var s,l;if(void 0!==o)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var f=u[c];if(f.getAttribute("src")==r||f.getAttribute("data-webpack")==t+o){s=f;break}}s||(l=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,n.nc&&s.setAttribute("nonce",n.nc),s.setAttribute("data-webpack",t+o),s.src=r),e[r]=[i];var d=(t,n)=>{s.onerror=s.onload=null,clearTimeout(h);var i=e[r];if(delete e[r],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(n))),t)return t(n)},h=setTimeout(d.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=d.bind(null,s.onerror),s.onload=d.bind(null,s.onload),l&&document.head.appendChild(s)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/tw3t-debugger/",(()=>{var e={179:0};n.f.j=(t,r)=>{var i=n.o(e,t)?e[t]:void 0;if(0!==i)if(i)r.push(i[2]);else{var o=new Promise(((n,r)=>i=e[t]=[n,r]));r.push(i[2]=o);var a=n.p+n.u(t),s=new Error;n.l(a,(r=>{if(n.o(e,t)&&(0!==(i=e[t])&&(e[t]=void 0),i)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",s.name="ChunkLoadError",s.type=o,s.request=a,i[1](s)}}),"chunk-"+t,t)}};var t=(t,r)=>{var i,o,[a,s,l]=r,u=0;if(a.some((t=>0!==e[t]))){for(i in s)n.o(s,i)&&(n.m[i]=s[i]);if(l)l(n)}for(t&&t(r);u<a.length;u++)o=a[u],n.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=globalThis.webpackChunktw3t_debugger=globalThis.webpackChunktw3t_debugger||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{__wbg_crypto_968f1772287e2df0:()=>Wf,__wbg_getRandomValues_a3d34b4fee3c2869:()=>Cf,__wbg_getRandomValues_f5e14ab7ac8e995d:()=>qf,__wbg_randomFillSync_d5bd2d655fdf256a:()=>If,__wbg_require_604837428532a733:()=>Ff,__wbg_self_1b7a39e3a92c949c:()=>Uf,__wbindgen_is_undefined:()=>Df,__wbindgen_object_drop_ref:()=>Bf,__wbindgen_throw:()=>Rf,abort:()=>Yf});var t={};n.r(t),n.d(t,{__wbg_crypto_968f1772287e2df0:()=>Bm,__wbg_getRandomValues_a3d34b4fee3c2869:()=>Ym,__wbg_getRandomValues_f5e14ab7ac8e995d:()=>Vm,__wbg_randomFillSync_d5bd2d655fdf256a:()=>Gm,__wbg_require_604837428532a733:()=>Im,__wbg_self_1b7a39e3a92c949c:()=>qm,__wbindgen_is_undefined:()=>Wm,__wbindgen_object_drop_ref:()=>Km,__wbindgen_throw:()=>Cm,abort:()=>Jm});var r=n(791),i=n(164),o=n(7),a=n.n(o),s=n(694),l=n.n(s),u=Function.prototype.bind.call(Function.prototype.call,[].slice);function c(e,t){return u(e.querySelectorAll(t))}const f=!("undefined"===typeof window||!window.document||!window.document.createElement);var d=!1,h=!1;try{var p={get passive(){return d=!0},get once(){return h=d=!0}};f&&(window.addEventListener("test",p,p),window.removeEventListener("test",p,!0))}catch(Dz){}const m=function(e,t,n,r){if(r&&"boolean"!==typeof r&&!h){var i=r.once,o=r.capture,a=n;!h&&i&&(a=n.__once||function e(r){this.removeEventListener(t,e,o),n.call(this,r)},n.__once=a),e.addEventListener(t,a,d?r:o)}e.addEventListener(t,n,r)};function y(){return y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},y.apply(this,arguments)}function v(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}n(176);function b(e){return"default"+e.charAt(0).toUpperCase()+e.substr(1)}function g(e){var t=function(e,t){if("object"!==typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===typeof t?t:String(t)}function w(e,t,n){var i=(0,r.useRef)(void 0!==e),o=(0,r.useState)(t),a=o[0],s=o[1],l=void 0!==e,u=i.current;return i.current=l,!l&&u&&a!==t&&s(t),[l?e:a,(0,r.useCallback)((function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];n&&n.apply(void 0,[e].concat(r)),s(e)}),[n])]}function x(e,t){return Object.keys(t).reduce((function(n,r){var i,o=n,a=o[b(r)],s=o[r],l=v(o,[b(r),r].map(g)),u=t[r],c=w(s,a,e[u]),f=c[0],d=c[1];return y({},l,((i={})[r]=f,i[u]=d,i))}),e)}function P(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);null!==e&&void 0!==e&&this.setState(e)}function k(e){this.setState(function(t){var n=this.constructor.getDerivedStateFromProps(e,t);return null!==n&&void 0!==n?n:null}.bind(this))}function z(e,t){try{var n=this.props,r=this.state;this.props=e,this.state=t,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,r)}finally{this.props=n,this.state=r}}P.__suppressDeprecationWarning=!0,k.__suppressDeprecationWarning=!0,z.__suppressDeprecationWarning=!0;function M(e){var t=(0,r.useRef)(null);return(0,r.useEffect)((function(){t.current=e})),t.current}function N(){return(0,r.useReducer)((function(e){return!e}),!1)[1]}const O=function(e){var t=(0,r.useRef)(e);return(0,r.useEffect)((function(){t.current=e}),[e]),t};function T(e){var t=O(e);return(0,r.useCallback)((function(){return t.current&&t.current.apply(t,arguments)}),[t])}const j=r.createContext(null);function L(){return(0,r.useState)(null)}var E=Object.prototype.hasOwnProperty;function H(e,t,n){for(n of e.keys())if(X(n,t))return n}function X(e,t){var n,r,i;if(e===t)return!0;if(e&&t&&(n=e.constructor)===t.constructor){if(n===Date)return e.getTime()===t.getTime();if(n===RegExp)return e.toString()===t.toString();if(n===Array){if((r=e.length)===t.length)for(;r--&&X(e[r],t[r]););return-1===r}if(n===Set){if(e.size!==t.size)return!1;for(r of e){if((i=r)&&"object"===typeof i&&!(i=H(t,i)))return!1;if(!t.has(i))return!1}return!0}if(n===Map){if(e.size!==t.size)return!1;for(r of e){if((i=r[0])&&"object"===typeof i&&!(i=H(t,i)))return!1;if(!X(r[1],t.get(i)))return!1}return!0}if(n===ArrayBuffer)e=new Uint8Array(e),t=new Uint8Array(t);else if(n===DataView){if((r=e.byteLength)===t.byteLength)for(;r--&&e.getInt8(r)===t.getInt8(r););return-1===r}if(ArrayBuffer.isView(e)){if((r=e.byteLength)===t.byteLength)for(;r--&&e[r]===t[r];);return-1===r}if(!n||"object"===typeof e){for(n in r=0,e){if(E.call(e,n)&&++r&&!E.call(t,n))return!1;if(!(n in t)||!X(e[n],t[n]))return!1}return Object.keys(t).length===r}}return e!==e&&t!==t}function A(){var e=(0,r.useRef)(!0),t=(0,r.useRef)((function(){return e.current}));return(0,r.useEffect)((function(){return function(){e.current=!1}}),[]),t.current}const S=function(e){var t=A();return[e[0],(0,r.useCallback)((function(n){if(t())return e[1](n)}),[t,e[1]])]};function Z(e){return e.split("-")[0]}function D(e){if(null==e)return window;if("[object Window]"!==e.toString()){var t=e.ownerDocument;return t&&t.defaultView||window}return e}function R(e){return e instanceof D(e).Element||e instanceof Element}function U(e){return e instanceof D(e).HTMLElement||e instanceof HTMLElement}function F(e){return"undefined"!==typeof ShadowRoot&&(e instanceof D(e).ShadowRoot||e instanceof ShadowRoot)}var W=Math.max,C=Math.min,q=Math.round;function I(e,t){void 0===t&&(t=!1);var n=e.getBoundingClientRect(),r=1,i=1;if(U(e)&&t){var o=e.offsetHeight,a=e.offsetWidth;a>0&&(r=q(n.width)/a||1),o>0&&(i=q(n.height)/o||1)}return{width:n.width/r,height:n.height/i,top:n.top/i,right:n.right/r,bottom:n.bottom/i,left:n.left/r,x:n.left/r,y:n.top/i}}function B(e){var t=I(e),n=e.offsetWidth,r=e.offsetHeight;return Math.abs(t.width-n)<=1&&(n=t.width),Math.abs(t.height-r)<=1&&(r=t.height),{x:e.offsetLeft,y:e.offsetTop,width:n,height:r}}function Y(e,t){var n=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(n&&F(n)){var r=t;do{if(r&&e.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function V(e){return e?(e.nodeName||"").toLowerCase():null}function G(e){return D(e).getComputedStyle(e)}function K(e){return["table","td","th"].indexOf(V(e))>=0}function J(e){return((R(e)?e.ownerDocument:e.document)||window.document).documentElement}function Q(e){return"html"===V(e)?e:e.assignedSlot||e.parentNode||(F(e)?e.host:null)||J(e)}function _(e){return U(e)&&"fixed"!==G(e).position?e.offsetParent:null}function $(e){for(var t=D(e),n=_(e);n&&K(n)&&"static"===G(n).position;)n=_(n);return n&&("html"===V(n)||"body"===V(n)&&"static"===G(n).position)?t:n||function(e){var t=-1!==navigator.userAgent.toLowerCase().indexOf("firefox");if(-1!==navigator.userAgent.indexOf("Trident")&&U(e)&&"fixed"===G(e).position)return null;var n=Q(e);for(F(n)&&(n=n.host);U(n)&&["html","body"].indexOf(V(n))<0;){var r=G(n);if("none"!==r.transform||"none"!==r.perspective||"paint"===r.contain||-1!==["transform","perspective"].indexOf(r.willChange)||t&&"filter"===r.willChange||t&&r.filter&&"none"!==r.filter)return n;n=n.parentNode}return null}(e)||t}function ee(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function te(e,t,n){return W(e,C(t,n))}function ne(e){return Object.assign({},{top:0,right:0,bottom:0,left:0},e)}function re(e,t){return t.reduce((function(t,n){return t[n]=e,t}),{})}var ie="top",oe="bottom",ae="right",se="left",le="auto",ue=[ie,oe,ae,se],ce="start",fe="end",de="viewport",he="popper",pe=ue.reduce((function(e,t){return e.concat([t+"-"+ce,t+"-"+fe])}),[]),me=[].concat(ue,[le]).reduce((function(e,t){return e.concat([t,t+"-"+ce,t+"-"+fe])}),[]),ye=["beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite"];const ve={name:"arrow",enabled:!0,phase:"main",fn:function(e){var t,n=e.state,r=e.name,i=e.options,o=n.elements.arrow,a=n.modifiersData.popperOffsets,s=Z(n.placement),l=ee(s),u=[se,ae].indexOf(s)>=0?"height":"width";if(o&&a){var c=function(e,t){return ne("number"!==typeof(e="function"===typeof e?e(Object.assign({},t.rects,{placement:t.placement})):e)?e:re(e,ue))}(i.padding,n),f=B(o),d="y"===l?ie:se,h="y"===l?oe:ae,p=n.rects.reference[u]+n.rects.reference[l]-a[l]-n.rects.popper[u],m=a[l]-n.rects.reference[l],y=$(o),v=y?"y"===l?y.clientHeight||0:y.clientWidth||0:0,b=p/2-m/2,g=c[d],w=v-f[u]-c[h],x=v/2-f[u]/2+b,P=te(g,x,w),k=l;n.modifiersData[r]=((t={})[k]=P,t.centerOffset=P-x,t)}},effect:function(e){var t=e.state,n=e.options.element,r=void 0===n?"[data-popper-arrow]":n;null!=r&&("string"!==typeof r||(r=t.elements.popper.querySelector(r)))&&Y(t.elements.popper,r)&&(t.elements.arrow=r)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function be(e){return e.split("-")[1]}var ge={top:"auto",right:"auto",bottom:"auto",left:"auto"};function we(e){var t,n=e.popper,r=e.popperRect,i=e.placement,o=e.variation,a=e.offsets,s=e.position,l=e.gpuAcceleration,u=e.adaptive,c=e.roundOffsets,f=e.isFixed,d=a.x,h=void 0===d?0:d,p=a.y,m=void 0===p?0:p,y="function"===typeof c?c({x:h,y:m}):{x:h,y:m};h=y.x,m=y.y;var v=a.hasOwnProperty("x"),b=a.hasOwnProperty("y"),g=se,w=ie,x=window;if(u){var P=$(n),k="clientHeight",z="clientWidth";if(P===D(n)&&"static"!==G(P=J(n)).position&&"absolute"===s&&(k="scrollHeight",z="scrollWidth"),P=P,i===ie||(i===se||i===ae)&&o===fe)w=oe,m-=(f&&P===x&&x.visualViewport?x.visualViewport.height:P[k])-r.height,m*=l?1:-1;if(i===se||(i===ie||i===oe)&&o===fe)g=ae,h-=(f&&P===x&&x.visualViewport?x.visualViewport.width:P[z])-r.width,h*=l?1:-1}var M,N=Object.assign({position:s},u&&ge),O=!0===c?function(e){var t=e.x,n=e.y,r=window.devicePixelRatio||1;return{x:q(t*r)/r||0,y:q(n*r)/r||0}}({x:h,y:m}):{x:h,y:m};return h=O.x,m=O.y,l?Object.assign({},N,((M={})[w]=b?"0":"",M[g]=v?"0":"",M.transform=(x.devicePixelRatio||1)<=1?"translate("+h+"px, "+m+"px)":"translate3d("+h+"px, "+m+"px, 0)",M)):Object.assign({},N,((t={})[w]=b?m+"px":"",t[g]=v?h+"px":"",t.transform="",t))}const xe={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(e){var t=e.state,n=e.options,r=n.gpuAcceleration,i=void 0===r||r,o=n.adaptive,a=void 0===o||o,s=n.roundOffsets,l=void 0===s||s,u={placement:Z(t.placement),variation:be(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:i,isFixed:"fixed"===t.options.strategy};null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,we(Object.assign({},u,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:a,roundOffsets:l})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,we(Object.assign({},u,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})},data:{}};var Pe={passive:!0};const ke={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(e){var t=e.state,n=e.instance,r=e.options,i=r.scroll,o=void 0===i||i,a=r.resize,s=void 0===a||a,l=D(t.elements.popper),u=[].concat(t.scrollParents.reference,t.scrollParents.popper);return o&&u.forEach((function(e){e.addEventListener("scroll",n.update,Pe)})),s&&l.addEventListener("resize",n.update,Pe),function(){o&&u.forEach((function(e){e.removeEventListener("scroll",n.update,Pe)})),s&&l.removeEventListener("resize",n.update,Pe)}},data:{}};var ze={left:"right",right:"left",bottom:"top",top:"bottom"};function Me(e){return e.replace(/left|right|bottom|top/g,(function(e){return ze[e]}))}var Ne={start:"end",end:"start"};function Oe(e){return e.replace(/start|end/g,(function(e){return Ne[e]}))}function Te(e){var t=D(e);return{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function je(e){return I(J(e)).left+Te(e).scrollLeft}function Le(e){var t=G(e),n=t.overflow,r=t.overflowX,i=t.overflowY;return/auto|scroll|overlay|hidden/.test(n+i+r)}function Ee(e){return["html","body","#document"].indexOf(V(e))>=0?e.ownerDocument.body:U(e)&&Le(e)?e:Ee(Q(e))}function He(e,t){var n;void 0===t&&(t=[]);var r=Ee(e),i=r===(null==(n=e.ownerDocument)?void 0:n.body),o=D(r),a=i?[o].concat(o.visualViewport||[],Le(r)?r:[]):r,s=t.concat(a);return i?s:s.concat(He(Q(a)))}function Xe(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function Ae(e,t){return t===de?Xe(function(e){var t=D(e),n=J(e),r=t.visualViewport,i=n.clientWidth,o=n.clientHeight,a=0,s=0;return r&&(i=r.width,o=r.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(a=r.offsetLeft,s=r.offsetTop)),{width:i,height:o,x:a+je(e),y:s}}(e)):R(t)?function(e){var t=I(e);return t.top=t.top+e.clientTop,t.left=t.left+e.clientLeft,t.bottom=t.top+e.clientHeight,t.right=t.left+e.clientWidth,t.width=e.clientWidth,t.height=e.clientHeight,t.x=t.left,t.y=t.top,t}(t):Xe(function(e){var t,n=J(e),r=Te(e),i=null==(t=e.ownerDocument)?void 0:t.body,o=W(n.scrollWidth,n.clientWidth,i?i.scrollWidth:0,i?i.clientWidth:0),a=W(n.scrollHeight,n.clientHeight,i?i.scrollHeight:0,i?i.clientHeight:0),s=-r.scrollLeft+je(e),l=-r.scrollTop;return"rtl"===G(i||n).direction&&(s+=W(n.clientWidth,i?i.clientWidth:0)-o),{width:o,height:a,x:s,y:l}}(J(e)))}function Se(e,t,n){var r="clippingParents"===t?function(e){var t=He(Q(e)),n=["absolute","fixed"].indexOf(G(e).position)>=0&&U(e)?$(e):e;return R(n)?t.filter((function(e){return R(e)&&Y(e,n)&&"body"!==V(e)})):[]}(e):[].concat(t),i=[].concat(r,[n]),o=i[0],a=i.reduce((function(t,n){var r=Ae(e,n);return t.top=W(r.top,t.top),t.right=C(r.right,t.right),t.bottom=C(r.bottom,t.bottom),t.left=W(r.left,t.left),t}),Ae(e,o));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}function Ze(e){var t,n=e.reference,r=e.element,i=e.placement,o=i?Z(i):null,a=i?be(i):null,s=n.x+n.width/2-r.width/2,l=n.y+n.height/2-r.height/2;switch(o){case ie:t={x:s,y:n.y-r.height};break;case oe:t={x:s,y:n.y+n.height};break;case ae:t={x:n.x+n.width,y:l};break;case se:t={x:n.x-r.width,y:l};break;default:t={x:n.x,y:n.y}}var u=o?ee(o):null;if(null!=u){var c="y"===u?"height":"width";switch(a){case ce:t[u]=t[u]-(n[c]/2-r[c]/2);break;case fe:t[u]=t[u]+(n[c]/2-r[c]/2)}}return t}function De(e,t){void 0===t&&(t={});var n=t,r=n.placement,i=void 0===r?e.placement:r,o=n.boundary,a=void 0===o?"clippingParents":o,s=n.rootBoundary,l=void 0===s?de:s,u=n.elementContext,c=void 0===u?he:u,f=n.altBoundary,d=void 0!==f&&f,h=n.padding,p=void 0===h?0:h,m=ne("number"!==typeof p?p:re(p,ue)),y=c===he?"reference":he,v=e.rects.popper,b=e.elements[d?y:c],g=Se(R(b)?b:b.contextElement||J(e.elements.popper),a,l),w=I(e.elements.reference),x=Ze({reference:w,element:v,strategy:"absolute",placement:i}),P=Xe(Object.assign({},v,x)),k=c===he?P:w,z={top:g.top-k.top+m.top,bottom:k.bottom-g.bottom+m.bottom,left:g.left-k.left+m.left,right:k.right-g.right+m.right},M=e.modifiersData.offset;if(c===he&&M){var N=M[i];Object.keys(z).forEach((function(e){var t=[ae,oe].indexOf(e)>=0?1:-1,n=[ie,oe].indexOf(e)>=0?"y":"x";z[e]+=N[n]*t}))}return z}const Re={name:"flip",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,r=e.name;if(!t.modifiersData[r]._skip){for(var i=n.mainAxis,o=void 0===i||i,a=n.altAxis,s=void 0===a||a,l=n.fallbackPlacements,u=n.padding,c=n.boundary,f=n.rootBoundary,d=n.altBoundary,h=n.flipVariations,p=void 0===h||h,m=n.allowedAutoPlacements,y=t.options.placement,v=Z(y),b=l||(v===y||!p?[Me(y)]:function(e){if(Z(e)===le)return[];var t=Me(e);return[Oe(e),t,Oe(t)]}(y)),g=[y].concat(b).reduce((function(e,n){return e.concat(Z(n)===le?function(e,t){void 0===t&&(t={});var n=t,r=n.placement,i=n.boundary,o=n.rootBoundary,a=n.padding,s=n.flipVariations,l=n.allowedAutoPlacements,u=void 0===l?me:l,c=be(r),f=c?s?pe:pe.filter((function(e){return be(e)===c})):ue,d=f.filter((function(e){return u.indexOf(e)>=0}));0===d.length&&(d=f);var h=d.reduce((function(t,n){return t[n]=De(e,{placement:n,boundary:i,rootBoundary:o,padding:a})[Z(n)],t}),{});return Object.keys(h).sort((function(e,t){return h[e]-h[t]}))}(t,{placement:n,boundary:c,rootBoundary:f,padding:u,flipVariations:p,allowedAutoPlacements:m}):n)}),[]),w=t.rects.reference,x=t.rects.popper,P=new Map,k=!0,z=g[0],M=0;M<g.length;M++){var N=g[M],O=Z(N),T=be(N)===ce,j=[ie,oe].indexOf(O)>=0,L=j?"width":"height",E=De(t,{placement:N,boundary:c,rootBoundary:f,altBoundary:d,padding:u}),H=j?T?ae:se:T?oe:ie;w[L]>x[L]&&(H=Me(H));var X=Me(H),A=[];if(o&&A.push(E[O]<=0),s&&A.push(E[H]<=0,E[X]<=0),A.every((function(e){return e}))){z=N,k=!1;break}P.set(N,A)}if(k)for(var S=function(e){var t=g.find((function(t){var n=P.get(t);if(n)return n.slice(0,e).every((function(e){return e}))}));if(t)return z=t,"break"},D=p?3:1;D>0;D--){if("break"===S(D))break}t.placement!==z&&(t.modifiersData[r]._skip=!0,t.placement=z,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function Ue(e,t,n){return void 0===n&&(n={x:0,y:0}),{top:e.top-t.height-n.y,right:e.right-t.width+n.x,bottom:e.bottom-t.height+n.y,left:e.left-t.width-n.x}}function Fe(e){return[ie,ae,oe,se].some((function(t){return e[t]>=0}))}const We={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(e){var t=e.state,n=e.options,r=e.name,i=n.offset,o=void 0===i?[0,0]:i,a=me.reduce((function(e,n){return e[n]=function(e,t,n){var r=Z(e),i=[se,ie].indexOf(r)>=0?-1:1,o="function"===typeof n?n(Object.assign({},t,{placement:e})):n,a=o[0],s=o[1];return a=a||0,s=(s||0)*i,[se,ae].indexOf(r)>=0?{x:s,y:a}:{x:a,y:s}}(n,t.rects,o),e}),{}),s=a[t.placement],l=s.x,u=s.y;null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=l,t.modifiersData.popperOffsets.y+=u),t.modifiersData[r]=a}};const Ce={name:"preventOverflow",enabled:!0,phase:"main",fn:function(e){var t=e.state,n=e.options,r=e.name,i=n.mainAxis,o=void 0===i||i,a=n.altAxis,s=void 0!==a&&a,l=n.boundary,u=n.rootBoundary,c=n.altBoundary,f=n.padding,d=n.tether,h=void 0===d||d,p=n.tetherOffset,m=void 0===p?0:p,y=De(t,{boundary:l,rootBoundary:u,padding:f,altBoundary:c}),v=Z(t.placement),b=be(t.placement),g=!b,w=ee(v),x="x"===w?"y":"x",P=t.modifiersData.popperOffsets,k=t.rects.reference,z=t.rects.popper,M="function"===typeof m?m(Object.assign({},t.rects,{placement:t.placement})):m,N="number"===typeof M?{mainAxis:M,altAxis:M}:Object.assign({mainAxis:0,altAxis:0},M),O=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,T={x:0,y:0};if(P){if(o){var j,L="y"===w?ie:se,E="y"===w?oe:ae,H="y"===w?"height":"width",X=P[w],A=X+y[L],S=X-y[E],D=h?-z[H]/2:0,R=b===ce?k[H]:z[H],U=b===ce?-z[H]:-k[H],F=t.elements.arrow,q=h&&F?B(F):{width:0,height:0},I=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},Y=I[L],V=I[E],G=te(0,k[H],q[H]),K=g?k[H]/2-D-G-Y-N.mainAxis:R-G-Y-N.mainAxis,J=g?-k[H]/2+D+G+V+N.mainAxis:U+G+V+N.mainAxis,Q=t.elements.arrow&&$(t.elements.arrow),_=Q?"y"===w?Q.clientTop||0:Q.clientLeft||0:0,ne=null!=(j=null==O?void 0:O[w])?j:0,re=X+J-ne,le=te(h?C(A,X+K-ne-_):A,X,h?W(S,re):S);P[w]=le,T[w]=le-X}if(s){var ue,fe="x"===w?ie:se,de="x"===w?oe:ae,he=P[x],pe="y"===x?"height":"width",me=he+y[fe],ye=he-y[de],ve=-1!==[ie,se].indexOf(v),ge=null!=(ue=null==O?void 0:O[x])?ue:0,we=ve?me:he-k[pe]-z[pe]-ge+N.altAxis,xe=ve?he+k[pe]+z[pe]-ge-N.altAxis:ye,Pe=h&&ve?function(e,t,n){var r=te(e,t,n);return r>n?n:r}(we,he,xe):te(h?we:me,he,h?xe:ye);P[x]=Pe,T[x]=Pe-he}t.modifiersData[r]=T}},requiresIfExists:["offset"]};function qe(e,t,n){void 0===n&&(n=!1);var r=U(t),i=U(t)&&function(e){var t=e.getBoundingClientRect(),n=q(t.width)/e.offsetWidth||1,r=q(t.height)/e.offsetHeight||1;return 1!==n||1!==r}(t),o=J(t),a=I(e,i),s={scrollLeft:0,scrollTop:0},l={x:0,y:0};return(r||!r&&!n)&&(("body"!==V(t)||Le(o))&&(s=function(e){return e!==D(e)&&U(e)?{scrollLeft:(t=e).scrollLeft,scrollTop:t.scrollTop}:Te(e);var t}(t)),U(t)?((l=I(t,!0)).x+=t.clientLeft,l.y+=t.clientTop):o&&(l.x=je(o))),{x:a.left+s.scrollLeft-l.x,y:a.top+s.scrollTop-l.y,width:a.width,height:a.height}}function Ie(e){var t=new Map,n=new Set,r=[];function i(e){n.add(e.name),[].concat(e.requires||[],e.requiresIfExists||[]).forEach((function(e){if(!n.has(e)){var r=t.get(e);r&&i(r)}})),r.push(e)}return e.forEach((function(e){t.set(e.name,e)})),e.forEach((function(e){n.has(e.name)||i(e)})),r}function Be(e){var t;return function(){return t||(t=new Promise((function(n){Promise.resolve().then((function(){t=void 0,n(e())}))}))),t}}var Ye={placement:"bottom",modifiers:[],strategy:"absolute"};function Ve(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return!t.some((function(e){return!(e&&"function"===typeof e.getBoundingClientRect)}))}function Ge(e){void 0===e&&(e={});var t=e,n=t.defaultModifiers,r=void 0===n?[]:n,i=t.defaultOptions,o=void 0===i?Ye:i;return function(e,t,n){void 0===n&&(n=o);var i={placement:"bottom",orderedModifiers:[],options:Object.assign({},Ye,o),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},a=[],s=!1,l={state:i,setOptions:function(n){var s="function"===typeof n?n(i.options):n;u(),i.options=Object.assign({},o,i.options,s),i.scrollParents={reference:R(e)?He(e):e.contextElement?He(e.contextElement):[],popper:He(t)};var c=function(e){var t=Ie(e);return ye.reduce((function(e,n){return e.concat(t.filter((function(e){return e.phase===n})))}),[])}(function(e){var t=e.reduce((function(e,t){var n=e[t.name];return e[t.name]=n?Object.assign({},n,t,{options:Object.assign({},n.options,t.options),data:Object.assign({},n.data,t.data)}):t,e}),{});return Object.keys(t).map((function(e){return t[e]}))}([].concat(r,i.options.modifiers)));return i.orderedModifiers=c.filter((function(e){return e.enabled})),i.orderedModifiers.forEach((function(e){var t=e.name,n=e.options,r=void 0===n?{}:n,o=e.effect;if("function"===typeof o){var s=o({state:i,name:t,instance:l,options:r}),u=function(){};a.push(s||u)}})),l.update()},forceUpdate:function(){if(!s){var e=i.elements,t=e.reference,n=e.popper;if(Ve(t,n)){i.rects={reference:qe(t,$(n),"fixed"===i.options.strategy),popper:B(n)},i.reset=!1,i.placement=i.options.placement,i.orderedModifiers.forEach((function(e){return i.modifiersData[e.name]=Object.assign({},e.data)}));for(var r=0;r<i.orderedModifiers.length;r++)if(!0!==i.reset){var o=i.orderedModifiers[r],a=o.fn,u=o.options,c=void 0===u?{}:u,f=o.name;"function"===typeof a&&(i=a({state:i,options:c,name:f,instance:l})||i)}else i.reset=!1,r=-1}}},update:Be((function(){return new Promise((function(e){l.forceUpdate(),e(i)}))})),destroy:function(){u(),s=!0}};if(!Ve(e,t))return l;function u(){a.forEach((function(e){return e()})),a=[]}return l.setOptions(n).then((function(e){!s&&n.onFirstUpdate&&n.onFirstUpdate(e)})),l}}const Ke=Ge({defaultModifiers:[{name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(e){var t=e.state,n=e.name,r=t.rects.reference,i=t.rects.popper,o=t.modifiersData.preventOverflow,a=De(t,{elementContext:"reference"}),s=De(t,{altBoundary:!0}),l=Ue(a,r),u=Ue(s,i,o),c=Fe(l),f=Fe(u);t.modifiersData[n]={referenceClippingOffsets:l,popperEscapeOffsets:u,isReferenceHidden:c,hasPopperEscaped:f},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":c,"data-popper-escaped":f})}},{name:"popperOffsets",enabled:!0,phase:"read",fn:function(e){var t=e.state,n=e.name;t.modifiersData[n]=Ze({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}},xe,ke,We,Re,Ce,ve]}),Je=["enabled","placement","strategy","modifiers"];function Qe(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}const _e={name:"applyStyles",enabled:!1,phase:"afterWrite",fn:()=>{}},$e={name:"ariaDescribedBy",enabled:!0,phase:"afterWrite",effect:e=>{let{state:t}=e;return()=>{const{reference:e,popper:n}=t.elements;if("removeAttribute"in e){const t=(e.getAttribute("aria-describedby")||"").split(",").filter((e=>e.trim()!==n.id));t.length?e.setAttribute("aria-describedby",t.join(",")):e.removeAttribute("aria-describedby")}}},fn:e=>{let{state:t}=e;var n;const{popper:r,reference:i}=t.elements,o=null==(n=r.getAttribute("role"))?void 0:n.toLowerCase();if(r.id&&"tooltip"===o&&"setAttribute"in i){const e=i.getAttribute("aria-describedby");if(e&&-1!==e.split(",").indexOf(r.id))return;i.setAttribute("aria-describedby",e?`${e},${r.id}`:r.id)}}},et=[];const tt=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{enabled:i=!0,placement:o="bottom",strategy:a="absolute",modifiers:s=et}=n,l=Qe(n,Je);const u=(0,r.useRef)(s),c=(0,r.useRef)(),f=(0,r.useCallback)((()=>{var e;null==(e=c.current)||e.update()}),[]),d=(0,r.useCallback)((()=>{var e;null==(e=c.current)||e.forceUpdate()}),[]),[h,p]=S((0,r.useState)({placement:o,update:f,forceUpdate:d,attributes:{},styles:{popper:{},arrow:{}}})),m=(0,r.useMemo)((()=>({name:"updateStateModifier",enabled:!0,phase:"write",requires:["computeStyles"],fn:e=>{let{state:t}=e;const n={},r={};Object.keys(t.elements).forEach((e=>{n[e]=t.styles[e],r[e]=t.attributes[e]})),p({state:t,styles:n,attributes:r,update:f,forceUpdate:d,placement:t.placement})}})),[f,d,p]),y=(0,r.useMemo)((()=>(X(u.current,s)||(u.current=s),u.current)),[s]);return(0,r.useEffect)((()=>{c.current&&i&&c.current.setOptions({placement:o,strategy:a,modifiers:[...y,m,_e]})}),[a,o,m,i,y]),(0,r.useEffect)((()=>{if(i&&null!=e&&null!=t)return c.current=Ke(e,t,Object.assign({},l,{placement:o,strategy:a,modifiers:[...y,$e,m]})),()=>{null!=c.current&&(c.current.destroy(),c.current=void 0,p((e=>Object.assign({},e,{attributes:{},styles:{popper:{}}}))))}}),[i,e,t]),h};function nt(e,t){return e.contains?e.contains(t):e.compareDocumentPosition?e===t||!!(16&e.compareDocumentPosition(t)):void 0}const rt=function(e,t,n,r){var i=r&&"boolean"!==typeof r?r.capture:r;e.removeEventListener(t,n,i),n.__once&&e.removeEventListener(t,n.__once,i)};const it=function(e,t,n,r){return m(e,t,n,r),function(){rt(e,t,n,r)}};function ot(e){return e&&e.ownerDocument||document}var at=n(391),st=n.n(at);const lt=()=>{};function ut(e){return 0===e.button}function ct(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}const ft=e=>e&&("current"in e?e.current:e);const dt=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:lt,{disabled:n,clickTrigger:i="click"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const o=(0,r.useRef)(!1),a=(0,r.useCallback)((t=>{const n=ft(e);st()(!!n,"ClickOutside captured a close event but does not have a ref to compare it to. useClickOutside(), should be passed a ref that resolves to a DOM node"),o.current=!n||ct(t)||!ut(t)||!!nt(n,t.target)}),[e]),s=T((e=>{o.current||t(e)}));(0,r.useEffect)((()=>{if(n||null==e)return;const t=ot(ft(e));let r=(t.defaultView||window).event;const o=it(t,i,a,!0),l=it(t,i,(e=>{e!==r?s(e):r=void 0}));let u=[];return"ontouchstart"in t.documentElement&&(u=[].slice.call(t.body.children).map((e=>it(e,"mousemove",lt)))),()=>{o(),l(),u.forEach((e=>e()))}}),[e,n,i,a,s])};function ht(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Array.isArray(e)?e:Object.keys(e).map((t=>(e[t].name=t,e[t])))}function pt(e){let{enabled:t,enableEvents:n,placement:r,flip:i,offset:o,fixed:a,containerPadding:s,arrowElement:l,popperConfig:u={}}=e;var c,f,d,h;const p=function(e){const t={};return Array.isArray(e)?(null==e||e.forEach((e=>{t[e.name]=e})),t):e||t}(u.modifiers);return Object.assign({},u,{placement:r,enabled:t,strategy:a?"fixed":u.strategy,modifiers:ht(Object.assign({},p,{eventListeners:{enabled:n},preventOverflow:Object.assign({},p.preventOverflow,{options:s?Object.assign({padding:s},null==(c=p.preventOverflow)?void 0:c.options):null==(f=p.preventOverflow)?void 0:f.options}),offset:{options:Object.assign({offset:o},null==(d=p.offset)?void 0:d.options)},arrow:Object.assign({},p.arrow,{enabled:!!l,options:Object.assign({},null==(h=p.arrow)?void 0:h.options,{element:l})}),flip:Object.assign({enabled:!!i},p.flip)}))})}var mt=n(184);const yt=["children"];const vt=()=>{};function bt(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=(0,r.useContext)(j),[n,i]=L(),o=(0,r.useRef)(!1),{flip:a,offset:s,rootCloseEvent:l,fixed:u=!1,placement:c,popperConfig:f={},enableEventListeners:d=!0,usePopper:h=!!t}=e,p=null==(null==t?void 0:t.show)?!!e.show:t.show;p&&!o.current&&(o.current=!0);const m=e=>{null==t||t.toggle(!1,e)},{placement:y,setMenu:v,menuElement:b,toggleElement:g}=t||{},w=tt(g,b,pt({placement:c||y||"bottom-start",enabled:h,enableEvents:null==d?p:d,offset:s,flip:a,fixed:u,arrowElement:n,popperConfig:f})),x=Object.assign({ref:v||vt,"aria-labelledby":null==g?void 0:g.id},w.attributes.popper,{style:w.styles.popper}),P={show:p,placement:y,hasShown:o.current,toggle:null==t?void 0:t.toggle,popper:h?w:null,arrowProps:h?Object.assign({ref:i},w.attributes.arrow,{style:w.styles.arrow}):{}};return dt(b,m,{clickTrigger:l,disabled:!p}),[x,P]}function gt(e){let{children:t}=e,n=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,yt);const[r,i]=bt(n);return(0,mt.jsx)(mt.Fragment,{children:t(r,i)})}gt.displayName="DropdownMenu",gt.defaultProps={usePopper:!0};const wt=gt;function xt(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}var Pt={};xt(Pt,"SSRProvider",(()=>Mt)),xt(Pt,"useSSRSafeId",(()=>Ot)),xt(Pt,"useIsSSR",(()=>Tt));const kt={prefix:String(Math.round(1e10*Math.random())),current:0},zt=r.createContext(kt);function Mt(e){let t=(0,r.useContext)(zt),n=(0,r.useMemo)((()=>({prefix:t===kt?"":`${t.prefix}-${++t.current}`,current:0})),[t]);return r.createElement(zt.Provider,{value:n},e.children)}let Nt=Boolean("undefined"!==typeof window&&window.document&&window.document.createElement);function Ot(e){let t=(0,r.useContext)(zt);return t!==kt||Nt||console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server."),(0,r.useMemo)((()=>e||`react-aria${t.prefix}-${++t.current}`),[e])}function Tt(){let e=(0,r.useContext)(zt)!==kt,[t,n]=(0,r.useState)(e);return"undefined"!==typeof window&&e&&(0,r.useLayoutEffect)((()=>{n(!1)}),[]),t}const jt=e=>{var t;return"menu"===(null==(t=e.getAttribute("role"))?void 0:t.toLowerCase())},Lt=()=>{};function Et(){const e=Ot(),{show:t=!1,toggle:n=Lt,setToggle:i,menuElement:o}=(0,r.useContext)(j)||{},a=(0,r.useCallback)((e=>{n(!t,e)}),[t,n]),s={id:e,ref:i||Lt,onClick:a,"aria-expanded":!!t};return o&&jt(o)&&(s["aria-haspopup"]=!0),[s,{show:t,toggle:n}]}function Ht(e){let{children:t}=e;const[n,r]=Et();return(0,mt.jsx)(mt.Fragment,{children:t(n,r)})}Ht.displayName="DropdownToggle";const Xt=Ht,At=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return null!=e?String(e):t||null},St=r.createContext(null),Zt=r.createContext(null);Zt.displayName="NavContext";const Dt=Zt,Rt=["as","disabled"];function Ut(e){let{tagName:t,disabled:n,href:r,target:i,rel:o,onClick:a,tabIndex:s=0,type:l}=e;t||(t=null!=r||null!=i||null!=o?"a":"button");const u={tagName:t};if("button"===t)return[{type:l||"button",disabled:n},u];const c=e=>{(n||"a"===t&&function(e){return!e||"#"===e.trim()}(r))&&e.preventDefault(),n?e.stopPropagation():null==a||a(e)};return"a"===t&&(r||(r="#"),n&&(r=void 0)),[{role:"button",disabled:void 0,tabIndex:n?void 0:s,href:r,target:"a"===t?i:void 0,"aria-disabled":n||void 0,rel:"a"===t?o:void 0,onClick:c,onKeyDown:e=>{" "===e.key&&(e.preventDefault(),c(e))}},u]}const Ft=r.forwardRef(((e,t)=>{let{as:n,disabled:r}=e,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,Rt);const[o,{tagName:a}]=Ut(Object.assign({tagName:n,disabled:r},i));return(0,mt.jsx)(a,Object.assign({},i,o,{ref:t}))}));Ft.displayName="Button";const Wt=Ft;function Ct(e){return`data-rr-ui-${e}`}const qt=["eventKey","disabled","onClick","active","as"];function It(e){let{key:t,href:n,active:i,disabled:o,onClick:a}=e;const s=(0,r.useContext)(St),l=(0,r.useContext)(Dt),{activeKey:u}=l||{},c=At(t,n),f=null==i&&null!=t?At(u)===c:i;return[{onClick:T((e=>{o||(null==a||a(e),s&&!e.isPropagationStopped()&&s(c,e))})),"aria-disabled":o||void 0,"aria-selected":f,[Ct("dropdown-item")]:""},{isActive:f}]}const Bt=r.forwardRef(((e,t)=>{let{eventKey:n,disabled:r,onClick:i,active:o,as:a=Wt}=e,s=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,qt);const[l]=It({key:n,href:s.href,disabled:r,onClick:i,active:o});return(0,mt.jsx)(a,Object.assign({},s,{ref:t},l))}));Bt.displayName="DropdownItem";const Yt=Bt,Vt=(0,r.createContext)(f?window:void 0);Vt.Provider;function Gt(){return(0,r.useContext)(Vt)}function Kt(){const e=N(),t=(0,r.useRef)(null),n=(0,r.useCallback)((n=>{t.current=n,e()}),[e]);return[t,n]}function Jt(e){let{defaultShow:t,show:n,onSelect:i,onToggle:o,itemSelector:a=`* [${Ct("dropdown-item")}]`,focusFirstItemOnShow:s,placement:l="bottom-start",children:u}=e;const f=Gt(),[d,h]=w(n,t,o),[p,y]=Kt(),v=p.current,[b,g]=Kt(),x=b.current,P=M(d),k=(0,r.useRef)(null),z=(0,r.useRef)(!1),N=(0,r.useContext)(St),O=(0,r.useCallback)((function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null==t?void 0:t.type;h(e,{originalEvent:t,source:n})}),[h]),L=T(((e,t)=>{null==i||i(e,t),O(!1,t,"select"),t.isPropagationStopped()||null==N||N(e,t)})),E=(0,r.useMemo)((()=>({toggle:O,placement:l,show:d,menuElement:v,toggleElement:x,setMenu:y,setToggle:g})),[O,l,d,v,x,y,g]);v&&P&&!d&&(z.current=v.contains(v.ownerDocument.activeElement));const H=T((()=>{x&&x.focus&&x.focus()})),X=T((()=>{const e=k.current;let t=s;if(null==t&&(t=!(!p.current||!jt(p.current))&&"keyboard"),!1===t||"keyboard"===t&&!/^key.+$/.test(e))return;const n=c(p.current,a)[0];n&&n.focus&&n.focus()}));(0,r.useEffect)((()=>{d?X():z.current&&(z.current=!1,H())}),[d,z,H,X]),(0,r.useEffect)((()=>{k.current=null}));const A=(e,t)=>{if(!p.current)return null;const n=c(p.current,a);let r=n.indexOf(e)+t;return r=Math.max(0,Math.min(r,n.length)),n[r]};return function(e,t,n,i){void 0===i&&(i=!1);var o=T(n);(0,r.useEffect)((function(){var n="function"===typeof e?e():e;return n.addEventListener(t,o,i),function(){return n.removeEventListener(t,o,i)}}),[e])}((0,r.useCallback)((()=>f.document),[f]),"keydown",(e=>{var t,n;const{key:r}=e,i=e.target,o=null==(t=p.current)?void 0:t.contains(i),a=null==(n=b.current)?void 0:n.contains(i);if(/input|textarea/i.test(i.tagName)&&(" "===r||"Escape"!==r&&o||"Escape"===r&&"search"===i.type))return;if(!o&&!a)return;if("Tab"===r&&(!p.current||!d))return;k.current=e.type;const s={originalEvent:e,source:e.type};switch(r){case"ArrowUp":{const t=A(i,-1);return t&&t.focus&&t.focus(),void e.preventDefault()}case"ArrowDown":if(e.preventDefault(),d){const e=A(i,1);e&&e.focus&&e.focus()}else h(!0,s);return;case"Tab":m(i.ownerDocument,"keyup",(e=>{var t;("Tab"!==e.key||e.target)&&null!=(t=p.current)&&t.contains(e.target)||h(!1,s)}),{once:!0});break;case"Escape":"Escape"===r&&(e.preventDefault(),e.stopPropagation()),h(!1,s)}})),(0,mt.jsx)(St.Provider,{value:L,children:(0,mt.jsx)(j.Provider,{value:E,children:u})})}Jt.displayName="Dropdown",Jt.Menu=wt,Jt.Toggle=Xt,Jt.Item=Yt;const Qt=Jt,_t=r.createContext({});_t.displayName="DropdownContext";const $t=_t;var en="undefined"!==typeof n.g&&n.g.navigator&&"ReactNative"===n.g.navigator.product;const tn="undefined"!==typeof document||en?r.useLayoutEffect:r.useEffect;new WeakMap;const nn=["onKeyDown"];const rn=r.forwardRef(((e,t)=>{let{onKeyDown:n}=e,r=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,nn);const[i]=Ut(Object.assign({tagName:"a"},r)),o=T((e=>{i.onKeyDown(e),null==n||n(e)}));return((a=r.href)&&"#"!==a.trim()||r.role)&&"button"!==r.role?(0,mt.jsx)("a",Object.assign({ref:t},r,{onKeyDown:n})):(0,mt.jsx)("a",Object.assign({ref:t},r,i,{onKeyDown:o}));var a}));rn.displayName="Anchor";const on=rn,an=["xxl","xl","lg","md","sm","xs"],sn=r.createContext({prefixes:{},breakpoints:an}),{Consumer:ln,Provider:un}=sn;function cn(e,t){const{prefixes:n}=(0,r.useContext)(sn);return e||n[t]||t}function fn(){const{breakpoints:e}=(0,r.useContext)(sn);return e}const dn=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:r,eventKey:i,disabled:o=!1,onClick:a,active:s,as:u=on,...c}=e;const f=cn(n,"dropdown-item"),[d,h]=It({key:i,href:c.href,disabled:o,onClick:a,active:s});return(0,mt.jsx)(u,{...c,...d,ref:t,className:l()(r,f,h.isActive&&"active",o&&"disabled")})}));dn.displayName="DropdownItem";const hn=dn;var pn=function(e){return e&&"function"!==typeof e?function(t){e.current=t}:e};const mn=function(e,t){return(0,r.useMemo)((function(){return function(e,t){var n=pn(e),r=pn(t);return function(e){n&&n(e),r&&r(e)}}(e,t)}),[e,t])},yn=r.createContext(null);yn.displayName="InputGroupContext";const vn=yn,bn=r.createContext(null);bn.displayName="NavbarContext";const gn=bn;function wn(e,t){return e}function xn(e,t,n){let r=e?n?"bottom-start":"bottom-end":n?"bottom-end":"bottom-start";return"up"===t?r=e?n?"top-start":"top-end":n?"top-end":"top-start":"end"===t?r=e?n?"left-end":"right-end":n?"left-start":"right-start":"start"===t&&(r=e?n?"right-end":"left-end":n?"right-start":"left-start"),r}const Pn=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:i,align:o,rootCloseEvent:a,flip:s,show:u,renderOnMount:c,as:f="div",popperConfig:d,variant:h,...p}=e,m=!1;const y=(0,r.useContext)(gn),v=cn(n,"dropdown-menu"),{align:b,drop:g,isRTL:w}=(0,r.useContext)($t);o=o||b;const x=(0,r.useContext)(vn),P=[];if(o)if("object"===typeof o){const e=Object.keys(o);if(e.length){const t=e[0],n=o[t];m="start"===n,P.push(`${v}-${t}-${n}`)}}else"end"===o&&(m=!0);const k=xn(m,g,w),[z,{hasShown:M,popper:N,show:O,toggle:T}]=bt({flip:s,rootCloseEvent:a,show:u,usePopper:!y&&0===P.length,offset:[0,2],popperConfig:d,placement:k});if(z.ref=mn(wn(t),z.ref),tn((()=>{O&&(null==N||N.update())}),[O]),!M&&!c&&!x)return null;"string"!==typeof f&&(z.show=O,z.close=()=>null==T?void 0:T(!1),z.align=o);let j=p.style;return null!=N&&N.placement&&(j={...p.style,...z.style},p["x-placement"]=N.placement),(0,mt.jsx)(f,{...p,...z,style:j,...(P.length||y)&&{"data-bs-popper":"static"},className:l()(i,v,O&&"show",m&&`${v}-end`,h&&`${v}-${h}`,...P)})}));Pn.displayName="DropdownMenu",Pn.defaultProps={flip:!0};const kn=Pn,zn=r.forwardRef(((e,t)=>{let{as:n,bsPrefix:r,variant:i,size:o,active:a,className:s,...u}=e;const c=cn(r,"btn"),[f,{tagName:d}]=Ut({tagName:n,...u}),h=d;return(0,mt.jsx)(h,{...f,...u,ref:t,className:l()(s,c,a&&"active",i&&`${c}-${i}`,o&&`${c}-${o}`,u.href&&u.disabled&&"disabled")})}));zn.displayName="Button",zn.defaultProps={variant:"primary",active:!1,disabled:!1};const Mn=zn,Nn=r.forwardRef(((e,t)=>{let{bsPrefix:n,split:i,className:o,childBsPrefix:a,as:s=Mn,...u}=e;const c=cn(n,"dropdown-toggle"),f=(0,r.useContext)(j),d=(0,r.useContext)(vn);void 0!==a&&(u.bsPrefix=a);const[h]=Et();return h.ref=mn(h.ref,wn(t)),(0,mt.jsx)(s,{className:l()(o,c,i&&`${c}-split`,!!d&&(null==f?void 0:f.show)&&"show"),...h,...u})}));Nn.displayName="DropdownToggle";const On=Nn;var Tn=/-(.)/g;const jn=e=>{return e[0].toUpperCase()+(t=e,t.replace(Tn,(function(e,t){return t.toUpperCase()}))).slice(1);var t};function Ln(e){let{displayName:t=jn(e),Component:n,defaultProps:i}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const o=r.forwardRef(((t,r)=>{let{className:i,bsPrefix:o,as:a=n||"div",...s}=t;const u=cn(o,e);return(0,mt.jsx)(a,{ref:r,className:l()(i,u),...s})}));return o.defaultProps=i,o.displayName=t,o}const En=Ln("dropdown-header",{defaultProps:{role:"heading"}}),Hn=Ln("dropdown-divider",{Component:"hr",defaultProps:{role:"separator"}}),Xn=Ln("dropdown-item-text",{Component:"span"}),An=r.forwardRef(((e,t)=>{const{bsPrefix:n,drop:i,show:o,className:a,align:s,onSelect:u,onToggle:c,focusFirstItemOnShow:f,as:d="div",navbar:h,autoClose:p,...m}=x(e,{show:"onToggle"}),y=(0,r.useContext)(vn),v=cn(n,"dropdown"),b=function(){const{dir:e}=(0,r.useContext)(sn);return"rtl"===e}(),g=T(((e,t)=>{var n;t.originalEvent.currentTarget!==document||"keydown"===t.source&&"Escape"!==t.originalEvent.key||(t.source="rootClose"),n=t.source,(!1===p?"click"===n:"inside"===p?"rootClose"!==n:"outside"!==p||"select"!==n)&&(null==c||c(e,t))})),w=xn("end"===s,i,b),P=(0,r.useMemo)((()=>({align:s,drop:i,isRTL:b})),[s,i,b]);return(0,mt.jsx)($t.Provider,{value:P,children:(0,mt.jsx)(Qt,{placement:w,show:o,onSelect:u,onToggle:g,focusFirstItemOnShow:f,itemSelector:`.${v}-item:not(.disabled):not(:disabled)`,children:y?m.children:(0,mt.jsx)(d,{...m,ref:t,className:l()(a,o&&"show",(!i||"down"===i)&&v,"up"===i&&"dropup","end"===i&&"dropend","start"===i&&"dropstart")})})})}));An.displayName="Dropdown",An.defaultProps={navbar:!1,align:"start",autoClose:!0};const Sn=Object.assign(An,{Toggle:On,Menu:kn,Item:hn,ItemText:Xn,Divider:Hn,Header:En}),Zn=a().oneOf(["start","end"]),Dn=a().oneOfType([Zn,a().shape({sm:Zn}),a().shape({md:Zn}),a().shape({lg:Zn}),a().shape({xl:Zn}),a().shape({xxl:Zn}),a().object]),Rn={id:a().string,href:a().string,onClick:a().func,title:a().node.isRequired,disabled:a().bool,align:Dn,menuRole:a().string,renderMenuOnMount:a().bool,rootCloseEvent:a().string,menuVariant:a().oneOf(["dark"]),bsPrefix:a().string,variant:a().string,size:a().string},Un=r.forwardRef(((e,t)=>{let{title:n,children:r,bsPrefix:i,rootCloseEvent:o,variant:a,size:s,menuRole:l,renderMenuOnMount:u,disabled:c,href:f,id:d,menuVariant:h,...p}=e;return(0,mt.jsxs)(Sn,{ref:t,...p,children:[(0,mt.jsx)(On,{id:d,href:f,size:s,variant:a,disabled:c,childBsPrefix:i,children:n}),(0,mt.jsx)(kn,{role:l,renderOnMount:u,rootCloseEvent:o,variant:h,children:r})]})}));Un.displayName="DropdownButton",Un.propTypes=Rn;const Fn=Un,Wn=r.forwardRef(((e,t)=>{let{bsPrefix:n,fluid:r,as:i="div",className:o,...a}=e;const s=cn(n,"container"),u="string"===typeof r?`-${r}`:"-fluid";return(0,mt.jsx)(i,{ref:t,...a,className:l()(o,r?`${s}${u}`:s)})}));Wn.displayName="Container",Wn.defaultProps={fluid:!1};const Cn=Wn,qn=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:r,as:i="div",...o}=e;const a=cn(n,"row"),s=fn(),u=`${a}-cols`,c=[];return s.forEach((e=>{const t=o[e];let n;delete o[e],null!=t&&"object"===typeof t?({cols:n}=t):n=t;const r="xs"!==e?`-${e}`:"";null!=n&&c.push(`${u}${r}-${n}`)})),(0,mt.jsx)(i,{ref:t,...o,className:l()(r,a,...c)})}));qn.displayName="Row";const In=qn;const Bn=r.forwardRef(((e,t)=>{const[{className:n,...r},{as:i="div",bsPrefix:o,spans:a}]=function(e){let{as:t,bsPrefix:n,className:r,...i}=e;n=cn(n,"col");const o=fn(),a=[],s=[];return o.forEach((e=>{const t=i[e];let r,o,l;delete i[e],"object"===typeof t&&null!=t?({span:r,offset:o,order:l}=t):r=t;const u="xs"!==e?`-${e}`:"";r&&a.push(!0===r?`${n}${u}`:`${n}${u}-${r}`),null!=l&&s.push(`order${u}-${l}`),null!=o&&s.push(`offset${u}-${o}`)})),[{...i,className:l()(r,...a,...s)},{as:t,bsPrefix:n,spans:a}]}(e);return(0,mt.jsx)(i,{...r,ref:t,className:l()(n,!a.length&&o)})}));Bn.displayName="Col";const Yn=Bn,Vn={type:a().string,tooltip:a().bool,as:a().elementType},Gn=r.forwardRef(((e,t)=>{let{as:n="div",className:r,type:i="valid",tooltip:o=!1,...a}=e;return(0,mt.jsx)(n,{...a,ref:t,className:l()(r,`${i}-${o?"tooltip":"feedback"}`)})}));Gn.displayName="Feedback",Gn.propTypes=Vn;const Kn=Gn,Jn=r.createContext({}),Qn=r.forwardRef(((e,t)=>{let{id:n,bsPrefix:i,className:o,type:a="checkbox",isValid:s=!1,isInvalid:u=!1,as:c="input",...f}=e;const{controlId:d}=(0,r.useContext)(Jn);return i=cn(i,"form-check-input"),(0,mt.jsx)(c,{...f,ref:t,type:a,id:n||d,className:l()(o,i,s&&"is-valid",u&&"is-invalid")})}));Qn.displayName="FormCheckInput";const _n=Qn,$n=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:i,htmlFor:o,...a}=e;const{controlId:s}=(0,r.useContext)(Jn);return n=cn(n,"form-check-label"),(0,mt.jsx)("label",{...a,ref:t,htmlFor:o||s,className:l()(i,n)})}));$n.displayName="FormCheckLabel";const er=$n;const tr=r.forwardRef(((e,t)=>{let{id:n,bsPrefix:i,bsSwitchPrefix:o,inline:a=!1,disabled:s=!1,isValid:u=!1,isInvalid:c=!1,feedbackTooltip:f=!1,feedback:d,feedbackType:h,className:p,style:m,title:y="",type:v="checkbox",label:b,children:g,as:w="input",...x}=e;i=cn(i,"form-check"),o=cn(o,"form-switch");const{controlId:P}=(0,r.useContext)(Jn),k=(0,r.useMemo)((()=>({controlId:n||P})),[P,n]),z=!g&&null!=b&&!1!==b||function(e,t){return r.Children.toArray(e).some((e=>r.isValidElement(e)&&e.type===t))}(g,er),M=(0,mt.jsx)(_n,{...x,type:"switch"===v?"checkbox":v,ref:t,isValid:u,isInvalid:c,disabled:s,as:w});return(0,mt.jsx)(Jn.Provider,{value:k,children:(0,mt.jsx)("div",{style:m,className:l()(p,z&&i,a&&`${i}-inline`,"switch"===v&&o),children:g||(0,mt.jsxs)(mt.Fragment,{children:[M,z&&(0,mt.jsx)(er,{title:y,children:b}),d&&(0,mt.jsx)(Kn,{type:h,tooltip:f,children:d})]})})})}));tr.displayName="FormCheck";const nr=Object.assign(tr,{Input:_n,Label:er}),rr=r.forwardRef(((e,t)=>{let{bsPrefix:n,type:i,size:o,htmlSize:a,id:s,className:u,isValid:c=!1,isInvalid:f=!1,plaintext:d,readOnly:h,as:p="input",...m}=e;const{controlId:y}=(0,r.useContext)(Jn);let v;return n=cn(n,"form-control"),v=d?{[`${n}-plaintext`]:!0}:{[n]:!0,[`${n}-${o}`]:o},(0,mt.jsx)(p,{...m,type:i,size:a,ref:t,readOnly:h,id:s||y,className:l()(u,v,c&&"is-valid",f&&"is-invalid","color"===i&&`${n}-color`)})}));rr.displayName="FormControl";const ir=Object.assign(rr,{Feedback:Kn}),or=Ln("form-floating"),ar=r.forwardRef(((e,t)=>{let{controlId:n,as:i="div",...o}=e;const a=(0,r.useMemo)((()=>({controlId:n})),[n]);return(0,mt.jsx)(Jn.Provider,{value:a,children:(0,mt.jsx)(i,{...o,ref:t})})}));ar.displayName="FormGroup";const sr=ar,lr=r.forwardRef(((e,t)=>{let{as:n="label",bsPrefix:i,column:o,visuallyHidden:a,className:s,htmlFor:u,...c}=e;const{controlId:f}=(0,r.useContext)(Jn);i=cn(i,"form-label");let d="col-form-label";"string"===typeof o&&(d=`${d} ${d}-${o}`);const h=l()(s,i,a&&"visually-hidden",o&&d);return u=u||f,o?(0,mt.jsx)(Yn,{ref:t,as:"label",className:h,htmlFor:u,...c}):(0,mt.jsx)(n,{ref:t,className:h,htmlFor:u,...c})}));lr.displayName="FormLabel",lr.defaultProps={column:!1,visuallyHidden:!1};const ur=lr,cr=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:i,id:o,...a}=e;const{controlId:s}=(0,r.useContext)(Jn);return n=cn(n,"form-range"),(0,mt.jsx)("input",{...a,type:"range",ref:t,className:l()(i,n),id:o||s})}));cr.displayName="FormRange";const fr=cr,dr=r.forwardRef(((e,t)=>{let{bsPrefix:n,size:i,htmlSize:o,className:a,isValid:s=!1,isInvalid:u=!1,id:c,...f}=e;const{controlId:d}=(0,r.useContext)(Jn);return n=cn(n,"form-select"),(0,mt.jsx)("select",{...f,size:o,ref:t,className:l()(a,n,i&&`${n}-${i}`,s&&"is-valid",u&&"is-invalid"),id:c||d})}));dr.displayName="FormSelect";const hr=dr,pr=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:r,as:i="small",muted:o,...a}=e;return n=cn(n,"form-text"),(0,mt.jsx)(i,{...a,ref:t,className:l()(r,n,o&&"text-muted")})}));pr.displayName="FormText";const mr=pr,yr=r.forwardRef(((e,t)=>(0,mt.jsx)(nr,{...e,ref:t,type:"switch"})));yr.displayName="Switch";const vr=Object.assign(yr,{Input:nr.Input,Label:nr.Label}),br=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:r,children:i,controlId:o,label:a,...s}=e;return n=cn(n,"form-floating"),(0,mt.jsxs)(sr,{ref:t,className:l()(r,n),controlId:o,...s,children:[i,(0,mt.jsx)("label",{htmlFor:o,children:a})]})}));br.displayName="FloatingLabel";const gr=br,wr={_ref:a().any,validated:a().bool,as:a().elementType},xr=r.forwardRef(((e,t)=>{let{className:n,validated:r,as:i="form",...o}=e;return(0,mt.jsx)(i,{...o,ref:t,className:l()(n,r&&"was-validated")})}));xr.displayName="Form",xr.propTypes=wr;const Pr=Object.assign(xr,{Group:sr,Control:ir,Floating:or,Check:nr,Switch:vr,Label:ur,Text:mr,Range:fr,Select:hr,FloatingLabel:gr}),kr="function"===typeof atob,zr="function"===typeof btoa,Mr="function"===typeof Buffer,Nr="function"===typeof TextDecoder?new TextDecoder:void 0,Or="function"===typeof TextEncoder?new TextEncoder:void 0,Tr=Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="),jr=(e=>{let t={};return e.forEach(((e,n)=>t[e]=n)),t})(Tr),Lr=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,Er=String.fromCharCode.bind(String),Hr="function"===typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>e;return new Uint8Array(Array.prototype.slice.call(e,0).map(t))},Xr=e=>e.replace(/=/g,"").replace(/[+\/]/g,(e=>"+"==e?"-":"_")),Ar=e=>e.replace(/[^A-Za-z0-9\+\/]/g,""),Sr=e=>{let t,n,r,i,o="";const a=e.length%3;for(let s=0;s<e.length;){if((n=e.charCodeAt(s++))>255||(r=e.charCodeAt(s++))>255||(i=e.charCodeAt(s++))>255)throw new TypeError("invalid character found");t=n<<16|r<<8|i,o+=Tr[t>>18&63]+Tr[t>>12&63]+Tr[t>>6&63]+Tr[63&t]}return a?o.slice(0,a-3)+"===".substring(a):o},Zr=zr?e=>btoa(e):Mr?e=>Buffer.from(e,"binary").toString("base64"):Sr,Dr=Mr?e=>Buffer.from(e).toString("base64"):e=>{let t=[];for(let n=0,r=e.length;n<r;n+=4096)t.push(Er.apply(null,e.subarray(n,n+4096)));return Zr(t.join(""))},Rr=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t?Xr(Dr(e)):Dr(e)},Ur=e=>{if(e.length<2)return(t=e.charCodeAt(0))<128?e:t<2048?Er(192|t>>>6)+Er(128|63&t):Er(224|t>>>12&15)+Er(128|t>>>6&63)+Er(128|63&t);var t=65536+1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320);return Er(240|t>>>18&7)+Er(128|t>>>12&63)+Er(128|t>>>6&63)+Er(128|63&t)},Fr=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,Wr=e=>e.replace(Fr,Ur),Cr=Mr?e=>Buffer.from(e,"utf8").toString("base64"):Or?e=>Dr(Or.encode(e)):e=>Zr(Wr(e)),qr=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t?Xr(Cr(e)):Cr(e)},Ir=e=>qr(e,!0),Br=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,Yr=e=>{switch(e.length){case 4:var t=((7&e.charCodeAt(0))<<18|(63&e.charCodeAt(1))<<12|(63&e.charCodeAt(2))<<6|63&e.charCodeAt(3))-65536;return Er(55296+(t>>>10))+Er(56320+(1023&t));case 3:return Er((15&e.charCodeAt(0))<<12|(63&e.charCodeAt(1))<<6|63&e.charCodeAt(2));default:return Er((31&e.charCodeAt(0))<<6|63&e.charCodeAt(1))}},Vr=e=>e.replace(Br,Yr),Gr=e=>{if(e=e.replace(/\s+/g,""),!Lr.test(e))throw new TypeError("malformed base64.");e+="==".slice(2-(3&e.length));let t,n,r,i="";for(let o=0;o<e.length;)t=jr[e.charAt(o++)]<<18|jr[e.charAt(o++)]<<12|(n=jr[e.charAt(o++)])<<6|(r=jr[e.charAt(o++)]),i+=64===n?Er(t>>16&255):64===r?Er(t>>16&255,t>>8&255):Er(t>>16&255,t>>8&255,255&t);return i},Kr=kr?e=>atob(Ar(e)):Mr?e=>Buffer.from(e,"base64").toString("binary"):Gr,Jr=Mr?e=>Hr(Buffer.from(e,"base64")):e=>Hr(Kr(e),(e=>e.charCodeAt(0))),Qr=e=>Jr($r(e)),_r=Mr?e=>Buffer.from(e,"base64").toString("utf8"):Nr?e=>Nr.decode(Jr(e)):e=>Vr(Kr(e)),$r=e=>Ar(e.replace(/[-_]/g,(e=>"-"==e?"+":"/"))),ei=e=>_r($r(e)),ti=Ir,ni=ei,ri=e=>{if("string"!==typeof e)return!1;const t=e.replace(/\s+/g,"").replace(/={0,2}$/,"");return!/[^\s0-9a-zA-Z\+/]/.test(t)||!/[^\s0-9a-zA-Z\-_]/.test(t)},ii=Rr,oi=Qr,ai={if:Error}.if,si=TypeError,li=Object.assign,ui=Object,ci=Array.isArray,fi=1/0,di=Symbol.species,hi=void 0,pi=String.fromCharCode,mi=Array,yi=Object.prototype.hasOwnProperty,vi=Object.prototype.propertyIsEnumerable,bi=Object.seal?Object.preventExtensions(Object.create(null)):null;var gi={length:0},wi=vi.call.bind(vi),xi=ui.hasOwn||function(){return yi.bind?yi.call.bind(yi):function(e,t){return yi.call(e,t)}}(),Pi=ui.create;function ki(e){var t=Pi(bi);return xi(e,"value")&&(t.value=e.value),xi(e,"writable")&&(t.writable=e.writable),xi(e,"get")&&(t.get=e.get),xi(e,"set")&&(t.set=e.set),xi(e,"enumerable")&&(t.enumerable=e.enumerable),xi(e,"configurable")&&(t.configurable=e.configurable),t}const zi=Function.prototype.bind,Mi=RegExp.prototype.test,Ni=RegExp.prototype.exec,Oi=SyntaxError,Ti=RegExp,ji=Object.freeze,Li=Reflect.apply,Ei=Proxy,Hi=Object.create,Xi="undefined"===typeof Symbol?hi:Symbol.toStringTag,Ai=Object.defineProperty,Si=function(e,t){if(t||(t=e,e=Hi(bi)),li)li(e,t);else for(var n in t)xi(t,n)&&(e[n]=t[n]);if(e.default=e,Xi){var r=Hi(bi);r.value="Module",Ai(e,Xi,r)}return"function"===typeof e&&e.prototype&&ji(e.prototype),ji(e)};var Zi=zi?zi.bind(Mi):function(e){return function(t){return Mi.call(e,t)}},Di=zi?zi.bind(Ni):function(e){return function(t){return Ni.call(e,t)}};function Ri(e){var t=e.test=Zi(e),n=e.exec=Di(e),r=t.source=n.source=e.source;return t.unicode=n.unicode=e.unicode,t.ignoreCase=n.ignoreCase=e.ignoreCase,t.multiline=n.multiline=r.indexOf("^")<0&&r.indexOf("$")<0?null:e.multiline,t.dotAll=n.dotAll=r.indexOf(".")<0?null:e.dotAll,e}function Ui(e){return Ri(e)}var Fi=/[\n\t]+/g,Wi=/\\./g;function Ci(e){return"\\`"===e?"`":e}var qi="".includes?function(e,t){return e.includes(t)}:function(e,t){return e.indexOf(t)>-1};function Ii(e){for(var t=this.U,n=this.I,r=this.M,i=this.S,o=e.raw,a=o[0].replace(Fi,""),s=1,l=arguments.length;s!==l;){var u=arguments[s];if("string"===typeof u)a+=u;else{var c=u.source;if("string"!==typeof c)throw si("source");if(u.unicode===t)throw Oi("unicode");if(u.ignoreCase===n)throw Oi("ignoreCase");if(u.multiline===r&&(qi(c,"^")||qi(c,"$")))throw Oi("multiline");if(u.dotAll===i&&qi(c,"."))throw Oi("dotAll");a+=c}a+=o[s++].replace(Fi,"")}var f=Ti(t?a=a.replace(Wi,Ci):a,this.flags),d=f.test=Zi(f),h=f.exec=Di(f);return d.source=h.source=a,d.unicode=h.unicode=!t,d.ignoreCase=h.ignoreCase=!n,d.multiline=h.multiline=qi(a,"^")||qi(a,"$")?!r:null,d.dotAll=h.dotAll=qi(a,".")?!i:null,f}var Bi=zi&&zi.bind(Ii);function Yi(e){return{U:!qi(e,"u"),I:!qi(e,"i"),M:!qi(e,"m"),S:!qi(e,"s"),flags:e}}var Vi=Yi(""),Gi=Ei?new Ei(Ii,{apply:function(e,t,n){return Li(e,Vi,n)},get:function(e,t){return Bi(Yi(t))},defineProperty:function(){return!1},preventExtensions:function(){return!1}}):function(){Ii.apply=Ii.apply;for(var e=function(){return Ii.apply(Vi,arguments)},t=63;t--;)!function(t){e[t.flags]=function(){return Ii.apply(t,arguments)}}(Yi((1&t?"":"d")+(2&t?"":"g")+(4&t?"":"i")+(8&t?"":"m")+(8&t?"":"s")+(16&t?"":"u")+(32&t?"":"y")));return ji?ji(e):e}(),Ki="$_"in Ti?function(){var e=/^/;return e.test=e.test,function(t){return e.test(""),t}}():function(e){return e};const Ji=[];let Qi="",_i=Ji,$i=-1,eo=-1;const to=e=>{throw e},no=/\r?\n/,ro=(e,t)=>{if("string"!==typeof t)throw si("TOML.parse(,,,,sourcePath)");Qi=t,_i=e.split(no),$i=_i.length-1,eo=-1};class io{lineIndex=eo;type;restColumn;constructor(e,t){return this.type=e,this.restColumn=t,this}must(){return eo===$i&&to(Oi(`${this.type} is not close until the end of the file`+oo(", which started from ",this.lineIndex,_i[this.lineIndex].length-this.restColumn+1))),_i[++eo]}nowrap(){throw to(ai("TOML.parse(,,multilineStringJoiner) must be passed, while the source including multi-line string"+oo(", which started from ",this.lineIndex,_i[this.lineIndex].length-this.restColumn+1)))}}const oo=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:eo,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return _i===Ji?"":Qi?`\n    at (${Qi}:${t+1}:${n})`:`${e}line ${t+1}: ${_i[t]}`},ao=()=>{Qi="",_i=Ji},so=RangeError,lo=BigInt,uo=WeakMap,co=WeakMap.prototype.get,fo=WeakMap.prototype.set,ho=Number.isSafeInteger,po=Object.getOwnPropertyNames,mo=WeakSet,yo=WeakSet.prototype.has,vo=WeakSet.prototype.add,bo=WeakSet.prototype.delete,go=Object.keys,wo=Object.getOwnPropertySymbols,xo=function(){var e=Object.assign||function(e,t){var n,r,i;for(n=go(t),r=0;r<n.length;++r)e[i=n[r]]=t[i];if(wo)for(n=wo(t),r=0;r<n.length;++r)i=n[r],wi(t,i)&&(e[i]=t[i]);return e};function t(e){return delete e.prototype.constructor,ji(e.prototype),e}function n(n){return n===hi?this:"function"===typeof n?t(n):e(Pi(bi),n)}return delete n.name,n.prototype=null,ji(n),n}(),Po=Object.is,ko=Object.defineProperties,zo=Object.fromEntries,Mo=Reflect.construct,No=Reflect.defineProperty,Oo=Reflect.deleteProperty,To=Reflect.ownKeys,jo=()=>{const e=new uo;return e.has=e.has,e.get=e.get,e.set=e.set,e},Lo=jo(),Eo=jo(),Ho=jo(),Xo=li(Hi(bi),{defineProperty:(e,t,n)=>{if(xi(e,t))return No(e,t,li(Hi(bi),n));if(No(e,t,li(Hi(bi),n))){const n=Lo.get(e);return n[n.length]=t,!0}return!1},deleteProperty:(e,t)=>{if(Oo(e,t)){const n=Lo.get(e),r=n.indexOf(t);return r<0||--n.copyWithin(r,r+1).length,!0}return!1},ownKeys:e=>Lo.get(e),construct:(e,t,n)=>So(Mo(e,t,n)),apply:(e,t,n)=>So(Li(e,t,n))}),Ao=(e,t)=>{Lo.set(e,t);const n=new Ei(e,Xo);return Eo.set(n,e),n},So=e=>{if(Eo.has(e))return e;let t=Ho.get(e);return t||(t=Ao(e,li([],To(e))),Ho.set(e,t),t)},Zo=function(){function e(){throw si("Super constructor Null cannot be invoked with 'new'")}function t(){throw si("Super constructor Null cannot be invoked without 'new'")}const n=e=>(delete e.prototype.constructor,ji(e.prototype),e);function r(i){return new.target?new.target===r?e():Ao(this,[]):"function"===typeof i?n(i):t()}return r.prototype=null,Ai(r,"name",li(Hi(bi),{value:"",configurable:!1})),ji(r),r}(),Do=WeakMap.prototype.has,Ro=WeakMap.prototype.delete,Uo=new uo,Fo=new mo,Wo=Ro.bind(Uo),Co=bo.bind(Fo),qo=Do.bind(Uo),Io=co.bind(Uo),Bo=fo.bind(Uo),Yo=e=>(Wo(e),e),Vo=yo.bind(Fo),Go=vo.bind(Fo),Ko=new mo,Jo=vo.bind(Ko),Qo=yo.bind(Ko),_o=new mo,$o=vo.bind(_o),ea=bo.bind(_o),ta=!0,na=!1,ra=new mo,ia=vo.bind(ra),oa=yo.bind(ra),aa=xo(class extends xo{constructor(e,t){return super(),Jo(this),e?t?Bo(this,!0):Go(this):(t?ia:$o)(this),this}}),sa=xo(class extends Zo{constructor(e,t){return super(),Jo(this),e?t?Bo(this,!0):Go(this):(t?ia:$o)(this),this}}),la=/[ \t]/,ua=Gi`
	^${la}+`.valueOf(),{exec:ca}=Gi.s`
	^
	(
		(?:\d\d\d\d-\d\d-\d\d \d)?
		[\w\-+.:]+
	)
	${la}*
	(.*)
	$`.valueOf(),{exec:fa}=Gi.s`
	^
	'([^']*)'
	${la}*
	(.*)`.valueOf(),{exec:da}=Gi.s`
	^
	(.*?)
	'''('{0,2})
	${la}*
	(.*)`.valueOf(),{exec:ha}=Gi.s`
	^
	(.*?)
	'''()
	${la}*
	(.*)`.valueOf();let pa=ha;const ma=Gi.s`
	^
	.
	${la}*`.valueOf(),ya=/[^\x00-\x1F"#'()<>[\\\]`{}\x7F]+/,{exec:va}=Gi.s`
	^
	${la}*
	=
	${la}*
	(?:
		<(${ya})>
		${la}*
	)?
	(.*)
	$`.valueOf(),{exec:ba}=Gi.s`
	^
	<(${ya})>
	${la}*
	(.*)
	$`.valueOf(),{exec:ga}=Gi.s`
	^
	<(${ya})>
	${la}*
	(.*)
	$`.valueOf(),wa=Ui(/[^\\"]+|\\.?|"(?!"")"?/ys),xa=e=>{let t=0;for(;wa.test(e);)t=wa.lastIndex;return t},Pa=/[^\\\x00-\x08\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g,ka=/[^\\\x00-\x09\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g,za=/[^\\\x00-\x09\x0B-\x1F]+|\\(?:[btnfr"\\]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g,Ma=/[^\\\x00-\x09\x0B-\x1F]+|\\(?:[btnfr"\\/]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g;let Na=Pa;const Oa=e=>!e.replace(Na,""),Ta=Ui(/[^\\"\x00-\x08\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y),ja=Ui(/[^\\"\x00-\x08\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y),La=Ui(/[^\\"\x00-\x08\x0B-\x1F]+|\\(?:[btnfr"\\]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y),Ea=Ui(/[^\\"\x00-\x08\x0B-\x1F]+|\\(?:[btnfr"\\/]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y);let Ha=Ea;const Xa=e=>{let t=Ha.lastIndex=1;for(;Ha.test(e);)t=Ha.lastIndex;return t!==e.length&&'"'===e[t]||to(Oi("Bad basic string"+oo(" at "))),t},{test:Aa}=Ui(/^[ \t]*\./),Sa=/^[ \t]*\.[ \t]*/,{exec:Za}=Ui(/^[\w-]+/),{exec:Da}=Ui(/^[^ \t#=[\]'".]+(?:[ \t]+[^ \t#=[\]'".]+)*/);let Ra=Da;const{exec:Ua}=Ui(/^'[^'\x00-\x08\x0B-\x1F\x7F]*'/),{exec:Fa}=Ui(/^'[^'\x00-\x08\x0B-\x1F]*'/);let Wa=Fa,Ca=!0;const qa=(e,t)=>{const n="["===e[1];n?(Ca||to(Oi("Array of Tables is not allowed before TOML v0.2"+oo(", which at "))),e=e.slice(2)):e=e.slice(1),e=e.replace(ua,"");const{leadingKeys:r,finalKey:i}=({lineRest:e}=t(e));let o;return(e=e.replace(ua,""))&&"]"===e[0]||to(Oi("Table header is not closed"+oo(", which is found at "))),(e.length>1?"]"===e[1]===n:!n)||to(Oi("Square brackets of Table definition statement not match"+oo(" at "))),(e=e.slice(n?2:1).replace(ua,""))&&"<"===e[0]?({1:o,2:e}=ga(e)??to(Oi("Bad tag"+oo(" at ")))):o="",{leadingKeys:r,finalKey:i,asArrayItem:n,tag:o,lineRest:e}},{test:Ia}=Ui(/[\x00-\x08\x0B-\x1F\x7F]/),{test:Ba}=Ui(/[\x00-\x08\x0B-\x1F]/);let Ya=Ia;const Va=Gi`
	(?:
		0
		(?:
			b[01][_01]*
		|
			o[0-7][_0-7]*
		|
			x[\dA-Fa-f][_\dA-Fa-f]*
		|
			(?:\.\d[_\d]*)?(?:[Ee]-?\d[_\d]*)?
		)
	|
		[1-9][_\d]*
		(?:\.\d[_\d]*)?(?:[Ee]-?\d[_\d]*)?
	|
		inf
	|
		nan
	)
`.valueOf(),{test:Ga}=Gi`
	^(?:
		-?${Va}
		(?:-${Va})*
	|
		true
	|
		false
	)$
`.valueOf(),{test:Ka}=Gi`_(?![\dA-Fa-f])`.valueOf(),Ja=e=>Ga(e)&&!Ka(e);let Qa,_a,$a,es,ts,ns,rs,is,os,as,ss,ls,us,cs=!0,fs=null,ds=!0,hs=0n,ps=0n;const ms=new uo,ys=co.bind(ms),vs=fo.bind(ms),bs=()=>{const e=t=>{const n=ys(t);return n?n===e||to(si("Types in Array must be same"+oo(". Check "))):vs(t,e),t};return e},gs={asNulls:bs(),asStrings:bs(),asTables:bs(),asArrays:bs(),asBooleans:bs(),asFloats:bs(),asIntegers:bs(),asOffsetDateTimes:bs(),asLocalDateTimes:bs(),asLocalDates:bs(),asLocalTimes:bs()},ws=e=>e;let xs,Ps,ks,zs,Ms,Ns,Os,Ts,js,Ls,Es,Hs=null,Xs=[],As=0;const Ss=(e,t,n,r)=>{const i=Hi(bi);i.tag=e,n&&(i.table=n,i.key=r),t&&(i.array=t,i.index=t.length),Xs[As++]=i},Zs=()=>{throw to(Oi("xOptions.tag is not enabled, but found tag syntax"+oo(" at ")))};let Ds=Zs;const Rs=(e,t,n,r)=>{let i;switch(e){case 1:cs=i=es=rs=$a=!0,_a=ts=!1;break;case.5:cs=es=rs=$a=!0,i=_a=ts=!1;break;case.4:cs=ts=$a=!0,i=_a=es=rs=!1;break;case.3:cs=ts=!0,i=_a=es=rs=$a=!1;break;case.2:case.1:_a=ts=!0,cs=i=es=rs=$a=!1;break;default:throw so("TOML.parse(,specificationVersion)")}if((e=>{switch(e){case 1:pa=da,Wa=Ua,Ya=Ia,Na=Pa,Ha=Ta,Ra=Za,Ca=!0;break;case.5:pa=ha,Wa=Ua,Ya=Ia,Na=ka,Ha=ja,Ra=Za,Ca=!0;break;case.4:pa=ha,Wa=Fa,Ya=Ba,Na=za,Ha=La,Ra=Za,Ca=!0;break;default:pa=ha,Wa=Fa,Ya=Ba,Na=Ma,Ha=Ea,Ra=Da,Ca=!1}})(e),"string"===typeof t)fs=t;else{if(t!==hi)throw si("TOML.parse(,,multilineStringJoiner)");fs=null}if(n===hi||!0===n)ds=!0;else if(!1===n)ds=!1;else{if("number"!==typeof n)throw si("TOML.parse(,,,useBigInt)");if(!ho(n))throw so("TOML.parse(,,,useBigInt)");ds=null,n>=0?hs=-(ps=lo(n)):ps=-(hs=lo(n))-1n}if(null==r)is=aa,ns=os=as=ss=!1,Ds=Zs;else{if("object"!==typeof r)throw si("TOML.parse(,,,"+typeof r);{const{order:e,longer:t,exact:n,null:o,multi:a,comment:s,string:l,literal:u,tag:c,...f}=r,d=po(f);if(d.length)throw si(`TOML.parse(,,,,{ ${d.join(", ")} })`);if(is=e?sa:aa,os=!t,ns=!!n,as=!!o,ss=!!a,ls=!!s,us=!!l,Qa=!!u,c){if("function"!==typeof c)throw si("TOML.parse(,,,,xOptions.tag)");if(!i)throw si("TOML.parse(,,,,xOptions) xOptions.tag needs at least TOML 1.0 to support mixed type array");Hs=c,Ds=Ss}else Ds=Zs}}i?xs=Ps=ks=zs=Ms=Ns=Os=Ts=js=Ls=Es=ws:({asNulls:xs,asStrings:Ps,asTables:ks,asArrays:zs,asBooleans:Ms,asFloats:Ns,asIntegers:Os,asOffsetDateTimes:Ts,asLocalDateTimes:js,asLocalDates:Ls,asLocalTimes:Es}=gs)},Us=Symbol,Fs=Us("previous"),Ws=e=>{let t=e,n=t.next();if(!n.done)for(n.value[Fs]=t,n=(t=n.value).next();;)if(n.done){if(t===e)break;t=t[Fs],n=t.next(n.value)}else n.value[Fs]=t,n=(t=n.value).next();return n.value},Cs=Us("_literal"),qs=(e,t)=>{const n=ui(t);return n[Cs]=e,n},Is=new mo,Bs=vo.bind(Is),Ys=yo.bind(Is),Vs=new mo,Gs=vo.bind(Vs),Ks=yo.bind(Vs),Js=e=>{const t=[];return Bs(t),e&&Gs(t),t},Qs=Date,_s=Date.parse,$s=Object.preventExtensions,el=Object.getOwnPropertyDescriptors,tl=function(e,t){for(var n=Hi(bi),r=go(t),i=r.length,o=0;o<i;++o){var a=r[o];n[a]=ki(t[a])}if(wo){var s=wo(t);for(i=s.length,o=0;o<i;++o){var l=s[o];wi(t,l)&&(n[l]=ki(t[l]))}}return ko(e,n)},nl=e=>(ji(ji(e).prototype),e),rl=/(?:0[1-9]|[12]\d|30)/,il=/(?:0[1-9]|[12]\d|3[01])/,ol=/(?:[01]\d|2[0-3])/,al=/[0-5]\d/,sl=Gi`
	\d\d\d\d-
	(?:
		0
		(?:
			[13578]-${il}
			|
			[469]-${rl}
			|
			2-${/(?:0[1-9]|1\d|2\d)/}
		)
		|
		1
		(?:
			[02]-${il}
			|
			1-${rl}
		)
	)
`.valueOf(),ll=Gi`
	${ol}:${al}:${al}
`.valueOf(),{exec:ul}=Ui(/(([+-])\d\d):(\d\d)$/),{exec:cl}=Gi`
	^
	${sl}
	[Tt ]
	${ll}
	(?:\.\d{1,3}(\d*?)0*)?
	(?:[Zz]|[+-]${ol}:${al})
	$`.valueOf(),{exec:fl}=Gi`
	^
	${sl}
	[Tt ]
	${ll}
	()
	[Zz]
	$`.valueOf(),{test:dl}=Gi`
	^
	${sl}
	[Tt ]
	${ll}
	(?:\.\d+)?
	$`.valueOf(),{test:hl}=Gi`
	^
	${sl}
	$`.valueOf(),{test:pl}=Gi`
	^
	${ll}
	(?:\.\d+)?
	$`.valueOf(),ml=/[ t]/,yl=/[-T:.]/g,vl=/\.?0+$/,bl=/\.(\d*?)0+$/,gl=(e,t)=>t,wl=(()=>{const e=function(){return this},t=xo(null);{const e=xo(null);for(const n of To(Qs.prototype))"constructor"===n||"toJSON"===n||(t[n]=e)}return e.prototype=$s(Hi(Qs.prototype,t)),ji(e)})(),xl=e=>e.replace(bl,gl).replace(yl,""),Pl=e=>"02-29"!==e.slice(5,10)||+e.slice(0,4)%4===0&&"00"!==e.slice(2,4),kl=tl(new Qs(0),el(Qs.prototype)),zl=Us("OffsetDateTime_ISOString"),Ml=Us("OffsetDateTime_value"),Nl=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return kl.setTime(+e[Ml]+t),kl},Ol=nl(class extends wl{[zl];[Ml];valueOf(){return this[Ml]}toISOString(){return this[zl]}constructor(e){const{1:t}=Pl(e)&&(_a?fl:cl)(e)||to(Oi(`Invalid Offset Date-Time ${e}`+oo(" at ")));return super(),this[zl]=e.replace(ml,"T").replace("z","Z"),this[Ml]=(""+_s(this[zl])).padStart(15,"0")+(t?"."+t:""),this}getUTCFullYear(){return Nl(this).getUTCFullYear()}getUTCMonth(){return Nl(this).getUTCMonth()}getUTCDate(){return Nl(this).getUTCDate()}getUTCHours(){return Nl(this).getUTCHours()}getUTCMinutes(){return Nl(this).getUTCMinutes()}getUTCSeconds(){return Nl(this).getUTCSeconds()}getUTCMilliseconds(){return Nl(this).getUTCMilliseconds()}getUTCDay(){return Nl(this).getUTCDay()}getTimezoneOffset(){const e=ul(this[zl]);return e?60*+e[1]+ +(e[2]+e[3]):0}getTime(){return+this[Ml].slice(0,15)}}),Tl=Us("LocalDateTime_ISOString"),jl=Us("LocalDateTime_value"),Ll=(e,t,n)=>+e[Tl].slice(t,n),El=(e,t,n,r)=>{const i=""+r,o=n-t;if(i.length>o)throw so();e[jl]=xl(e[Tl]=e[Tl].slice(0,t)+i.padStart(o,"0")+e[Tl].slice(n))},Hl=nl(class extends wl{[Tl];[jl];valueOf(){return this[jl]}toISOString(){return this[Tl]}constructor(e){return dl(e)&&Pl(e)||to(Oi(`Invalid Local Date-Time ${e}`+oo(" at "))),super(),this[jl]=xl(this[Tl]=e.replace(ml,"T")),this}getFullYear(){return Ll(this,0,4)}setFullYear(e){El(this,0,4,e)}getMonth(){return Ll(this,5,7)-1}setMonth(e){El(this,5,7,e+1)}getDate(){return Ll(this,8,10)}setDate(e){El(this,8,10,e)}getHours(){return Ll(this,11,13)}setHours(e){El(this,11,13,e)}getMinutes(){return Ll(this,14,16)}setMinutes(e){El(this,14,16,e)}getSeconds(){return Ll(this,17,19)}setSeconds(e){El(this,17,19,e)}getMilliseconds(){return+this[jl].slice(14,17).padEnd(3,"0")}setMilliseconds(e){this[jl]=xl(this[Tl]=this[Tl].slice(0,19)+(e?("."+(""+e).padStart(3,"0")).replace(vl,""):""))}}),Xl=Us("LocalDate_ISOString"),Al=Us("LocalDate_value"),Sl=(e,t,n)=>+e[Xl].slice(t,n),Zl=(e,t,n,r)=>{const i=""+r,o=n-t;if(i.length>o)throw so();e[Al]=xl(e[Xl]=e[Xl].slice(0,t)+i.padStart(o,"0")+e[Xl].slice(n))},Dl=nl(class extends wl{[Xl];[Al];valueOf(){return this[Al]}toISOString(){return this[Xl]}constructor(e){return hl(e)&&Pl(e)||to(Oi(`Invalid Local Date ${e}`+oo(" at "))),super(),this[Al]=xl(this[Xl]=e),this}getFullYear(){return Sl(this,0,4)}setFullYear(e){Zl(this,0,4,e)}getMonth(){return Sl(this,5,7)-1}setMonth(e){Zl(this,5,7,e+1)}getDate(){return Sl(this,8,10)}setDate(e){Zl(this,8,10,e)}}),Rl=Us("LocalTime_ISOString"),Ul=Us("LocalTime_value"),Fl=(e,t,n)=>+e[Rl].slice(t,n),Wl=(e,t,n,r)=>{const i=""+r,o=n-t;if(i.length>o)throw so();e[Ul]=xl(e[Rl]=e[Rl].slice(0,t)+i.padStart(2,"0")+e[Rl].slice(n))},Cl=nl(class extends wl{[Rl];[Ul];valueOf(){return this[Ul]}toISOString(){return this[Rl]}constructor(e){return pl(e)||to(Oi(`Invalid Local Time ${e}`+oo(" at "))),super(),this[Ul]=xl(this[Rl]=e),this}getHours(){return Fl(this,0,2)}setHours(e){Wl(this,0,2,e)}getMinutes(){return Fl(this,3,5)}setMinutes(e){Wl(this,3,5,e)}getSeconds(){return Fl(this,6,8)}setSeconds(e){Wl(this,6,8,e)}getMilliseconds(){return+this[Ul].slice(6,9).padEnd(3,"0")}setMilliseconds(e){this[Ul]=xl(this[Rl]=this[Rl].slice(0,8)+(e?("."+(""+e).padStart(3,"0")).replace(vl,""):""))}}),ql=parseInt,Il=String.fromCodePoint,Bl=/[^\\]+|\\(?:[\\"btnfr/]|u.{4}|U.{8})/gs,Yl=/[^\n\\]+|\n|\\(?:[\t ]*\n[\t\n ]*|[\\"btnfr/]|u.{4}|U.{8})/gs,Vl=e=>{if(!e)return"";const t=e.match(Bl),{length:n}=t;let r=0;do{const e=t[r];if("\\"===e[0])switch(e[1]){case"\\":t[r]="\\";break;case'"':t[r]='"';break;case"b":t[r]="\b";break;case"t":t[r]="\t";break;case"n":t[r]="\n";break;case"f":t[r]="\f";break;case"r":t[r]="\r";break;case"u":const n=ql(e.slice(2),16);cs&&55295<n&&n<57344&&to(so(`Invalid Unicode Scalar ${e}`+oo(" at "))),t[r]=pi(n);break;case"U":const i=ql(e.slice(2),16);(cs&&55295<i&&i<57344||1114111<i)&&to(so(`Invalid Unicode Scalar ${e}`+oo(" at "))),t[r]=Il(i);break;case"/":t[r]="/"}}while(++r!==n);return t.join("")},Gl=(e,t,n)=>{if(!e)return"";const r=e.match(Yl),{length:i}=r;let o=0;do{const e=r[o];if("\n"===e)++n,r[o]=t;else if("\\"===e[0])switch(e[1]){case"\n":case" ":case"\t":for(let r=0;r=e.indexOf("\n",r)+1;)++n;r[o]="";break;case"\\":r[o]="\\";break;case'"':r[o]='"';break;case"b":r[o]="\b";break;case"t":r[o]="\t";break;case"n":r[o]="\n";break;case"f":r[o]="\f";break;case"r":r[o]="\r";break;case"u":const t=ql(e.slice(2),16);cs&&55295<t&&t<57344&&to(so(`Invalid Unicode Scalar ${e}`+oo(" at ",eo+n))),r[o]=pi(t);break;case"U":const i=ql(e.slice(2),16);(cs&&55295<i&&i<57344||1114111<i)&&to(so(`Invalid Unicode Scalar ${e}`+oo(" at ",eo+n))),r[o]=Il(i);break;case"/":r[o]="/"}}while(++o!==i);return r.join("")},Kl=Number,Jl=/[-+]?(?:0|[1-9][_\d]*)/,{test:Ql}=Gi`_(?!\d)`.valueOf(),{test:_l}=Gi`^${Jl}$`.valueOf(),{test:$l}=Ui(/^0(?:x[\dA-Fa-f][_\dA-Fa-f]*|o[0-7][_0-7]*|b[01][_01]*)$/),{test:eu}=Gi`_(?![\dA-Fa-f])`.valueOf(),tu=/_|^[-+]/g,nu=e=>(_l(e)||$l(e))&&!eu(e),ru=e=>{nu(e)||to(Oi(`Invalid Integer ${e}`+oo(" at ")));const t="-"===e[0]?-lo(e.replace(tu,"")):lo(e.replace(tu,""));return os||-9223372036854775808n<=t&&t<=9223372036854775807n||to(so(`Integer expect 64 bit range (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807), not includes ${e}`+oo(" meet at "))),t},iu=e=>{if(!0===ds)return ru(e);if(!1===ds)return(e=>{nu(e)||to(Oi(`Invalid Integer ${e}`+oo(" at ")));const t="-"===e[0]?-e.replace(tu,""):+e.replace(tu,"");return ho(t)||to(so(`Integer did not use BitInt must fit Number.isSafeInteger, not includes ${e}`+oo(" meet at "))),t})(e);const t=ru(e);return hs<=t&&t<=ps?Kl(t):t},ou=isFinite,{test:au}=Gi`
	^
	${Jl}
	(?:
		\.\d[_\d]*
		(?:[eE][-+]?\d[_\d]*)?
	|
		[eE][-+]?\d[_\d]*
	)
	$`.valueOf(),su=/_/g,{test:lu}=Ui(/^[-+]?0(?:\.0+)?(?:[eE][-+]?0+)?$/),{exec:uu}=Ui(/^[-0]?(\d*)(?:\.(\d+))?(?:e\+?(-?\d+))?$/),{exec:cu}=Ui(/^[-+]?0?(\d*)(?:\.(\d*?)0*)?(?:[eE]\+?(-?\d+))?$/),fu=e=>{if(!au(e)||Ql(e)){if(rs){if("inf"===e||"+inf"===e)return fi;if("-inf"===e)return-(1/0);if("nan"===e||"+nan"===e||"-nan"===e)return NaN}throw to(Oi(`Invalid Float ${e}`+oo(" at ")))}const t=e.replace(su,""),n=+t;if(ns){ou(n)||to(so(`Float ${e} has been as big as inf`+oo(" at "))),n||lu(t)||to(so(`Float ${e} has been as little as ${"-"===e[0]?"-":""}0`+oo(" at ")));const{1:r,2:i="",3:o=""}=uu(n),{1:a,2:s="",3:l=""}=cu(t);a+s===r+i&&l-s.length===o-i.length||to(so(`Float ${e} has lost its exact and been ${n}`+oo(" at ")))}return n},du=(e,t)=>{const{length:n}=t;let r=0;for(;r<n;){const i=t[r++];if(!(i in e)){for(e=e[i]=new is(na);r<n;)e=e[t[r++]]=new is(na);return e}if(e=e[i],Qo(e))qo(e)&&to(ai("Trying to define Table under Inline Table"+oo(" at ")));else{if(!Ys(e))throw to(ai("Trying to define Table under non-Table value"+oo(" at ")));Ks(e)&&to(ai("Trying to append value to Static Array"+oo(" at "))),e=e[e.length-1]}}return e},hu=(e,t,n,r)=>{let i;if(n){let n;t in e?Ys(n=e[t])&&!Ks(n)||to(ai("Trying to push Table to non-ArrayOfTables value"+oo(" at "))):n=e[t]=Js(false),r&&Ds(r,n,e,t),n[n.length]=i=new is(ta)}else t in e?(i=e[t],oa(i)&&to(ai("A table defined implicitly via key/value pair can not be accessed to via []"+oo(", which at "))),(e=>!!ea(e)&&(Go(e),!0))(i)||to(ai("Duplicate Table definition"+oo(" at ")))):e[t]=i=new is(ta),r&&Ds(r,null,e,t);return i},pu=(e,t)=>{const{length:n}=t;let r=0;for(;r<n;){const i=t[r++];if(!(i in e)){for(e=e[i]=new is(na,true);r<n;)e=e[t[r++]]=new is(na,true);return e}e=e[i],Qo(e)||to(ai("Trying to assign property through non-Table value"+oo(" at "))),qo(e)&&to(ai("Trying to assign property through static Inline Table"+oo(" at "))),oa(e)||to(ai("A table defined implicitly via [] can not be accessed to via key/value pair"+oo(", which at ")))}return e},mu=e=>(Ya(e)&&to(Oi("Control characters other than Tab are not permitted in a Literal String"+oo(", which was found at "))),e),yu=(e,t,n)=>{if(!n.startsWith("'''")){const r=fa(n)??to(Oi("Bad literal string"+oo(" at "))),i=mu(r[1]);return e[t]=Qa?qs(n.slice(0,i.length+2),i):i,r[2]}const r=pa(n.slice(3));if(r){const i=mu(r[1])+r[2];return e[t]=Qa?qs(n.slice(0,i.length+6),i):i,r[3]}const i=new io("Multi-line Literal String",n.length),o=!(n=n.slice(3));if(o){n=i.must();const r=pa(n);if(r){const i=mu(r[1])+r[2];return e[t]=Qa?qs(["'''",n.slice(0,i.length+3)],i):i,r[3]}}fs??i.nowrap();for(const a=[mu(n)];;){const r=i.must(),s=pa(r);if(s){a[a.length]=mu(s[1])+s[2];const r=a.join(fs);return Qa?(a[a.length-1]+="'''",o?a.unshift("'''"):a[0]=`'''${n}`,e[t]=qs(a,r)):e[t]=r,s[3]}a[a.length]=mu(r)}},vu=(e,t,n)=>{if(!n.startsWith('"""')){const r=Xa(n),i=Vl(n.slice(1,r));return e[t]=Qa?qs(n.slice(0,r+1),i):i,n.slice(r+1).replace(ua,"")}let r=3+xa(n.slice(3));if(n.length!==r){const i=n.slice(3,r);Oa(i)||to(Oi("Bad multi-line basic string"+oo(" at ")));const o=Vl(i)+(n.startsWith('"',r+=3)?n.startsWith('"',++r)?(++r,'""'):'"':"");return e[t]=Qa?qs(n.slice(0,r),o):o,n.slice(r).replace(ua,"")}const i=new io("Multi-line Basic String",r),o=(n=n.slice(3))?0:1;if(o){n=i.must();let r=xa(n);if(n.length!==r){const i=n.slice(0,r);Oa(i)||to(Oi("Bad multi-line basic string"+oo(" at ")));const a=Gl(i,fs,o)+(n.startsWith('"',r+=3)?n.startsWith('"',++r)?(++r,'""'):'"':"");return e[t]=Qa?qs(['"""',n.slice(0,r)],a):a,n.slice(r).replace(ua,"")}}fs??i.nowrap(),Oa(n+"\n")||to(Oi("Bad multi-line basic string"+oo(" at ")));for(const a=[n];;){const r=i.must();let s=xa(r);if(r.length!==s){const i=r.slice(0,s);Oa(i)||to(Oi("Bad multi-line basic string"+oo(" at ")));const l=Gl(a.join("\n")+"\n"+i,fs,o)+(r.startsWith('"',s+=3)?r.startsWith('"',++s)?(++s,'""'):'"':"");return Qa?(o?a.unshift('"""'):a[0]=`"""${n}`,a[a.length]=`${i}"""`,e[t]=qs(a,l)):e[t]=l,r.slice(s).replace(ua,"")}Oa(r+"\n")||to(Oi("Bad multi-line basic string"+oo(" at "))),a[a.length]=r}},bu=xo(null),gu=e=>bu[e]??(bu[e]=Us(e)),wu=Us("this"),{test:xu}=Ui(/\r?\n/g),Pu=(e,t)=>{if(t in e){const n=e[t];if("string"!==typeof n)throw si(`the value of comment must be a string, while "${null===n?"null":typeof n}" type is found`);if(xu(n))throw Oi("the value of comment must be a string and can not include newline");return` #${n}`}return""},ku=(e,t)=>t in bu?Pu(e,bu[t]):"",{test:zu}=Ui(/(?:[Zz]|[+-]\d\d:\d\d)$/),{test:Mu}=Ui(/^\[[\t ]*]/),Nu=e=>{let t=e;const n=[];let r=-1;for(;;){if(t||to(Oi("Empty bare key"+oo(" at "))),'"'===t[0]){const e=Xa(t);n[++r]=Vl(t.slice(1,e)),t=t.slice(e+1)}else{const e="'"===t[0],i=((e?Wa:Ra)(t)??to(Oi(`Bad ${e?"literal string":"bare"} key`+oo(" at "))))[0];t=t.slice(i.length),n[++r]=e?i.slice(1,-1):i}if(!Aa(t))break;t=t.replace(Sa,"")}if(us){const n=e.slice(0,-t.length);(Ja(n)||as&&"null"===n)&&to(Oi("Bad bare key disabled by xOptions.string"+oo(" at ")))}if(ts){let e=r;do{n[e]||to(Oi("Empty key is not allowed before TOML v0.5"+oo(", which at ")))}while(e--)}const i=n[r];return n.length=r,{leadingKeys:n,finalKey:i,lineRest:t}},Ou=(e,t)=>{if("<"===t[0]){const{1:n}=({2:t}=ba(t)??to(Oi("Bad tag "+oo(" at "))));switch(Ds(n,e,null),t&&t[0]){case",":case"]":case"":case"#":return e[e.length]=hi,t}}switch(t[0]){case"'":return yu(Ps(e),e.length,t);case'"':return vu(Ps(e),e.length,t);case"{":return $a||to(Oi("Inline Table is not allowed before TOML v0.4"+oo(", which at "))),ju(ks(e),e.length,t);case"[":return Tu(zs(e),e.length,t)}const{1:n}=({2:t}=ca(t)??to(Oi("Bad atom value"+oo(" at "))));return"true"===n?Ms(e)[e.length]=!0:"false"===n?Ms(e)[e.length]=!1:as&&"null"===n?xs(e)[e.length]=null:n.includes(":")?n.includes("-")?zu(n)?Ts(e)[e.length]=new Ol(n):(es||to(Oi("Local Date-Time is not allowed before TOML v0.5"+oo(", which at "))),js(e)[e.length]=new Hl(n)):(es||to(Oi("Local Time is not allowed before TOML v0.5"+oo(", which at "))),Es(e)[e.length]=new Cl(n)):n.indexOf("-")!==n.lastIndexOf("-")&&"-"!==n[0]?(es||to(Oi("Local Date is not allowed before TOML v0.5"+oo(", which at "))),Ls(e)[e.length]=new Dl(n)):n.includes(".")||n.includes("n")||(n.includes("e")||n.includes("E"))&&!n.startsWith("0x")?Ns(e)[e.length]=Qa?qs(n,fu(n)):fu(n):Os(e)[e.length]=Qa?qs(n,iu(n)):iu(n),t},Tu=function*(e,t,n){const r=e[t]=Js(true);if(Mu(n))return Bo(r,"]"===n[1]?0:3),n.slice(n.indexOf("]")).replace(ma,"");const i=new io("Static Array",n.length);let o=n.startsWith("[ ")||n.startsWith("[\t")?3:0;for(n=n.replace(ma,"");!n||"#"===n[0];)o=null,n=i.must().replace(ua,"");if("]"===n[0])return null===o||Bo(r,o),n.replace(ma,"");for(;;){const e=Ou(r,n);for(n="string"===typeof e?e:yield e;!n||"#"===n[0];)o=null,n=i.must().replace(ua,"");if(","!==n[0]){if("]"===n[0])break;throw to(Oi("Unexpect character in static array item value"+oo(", which is found at ")))}for(n=n.replace(ma,"");!n||"#"===n[0];)o=null,n=i.must().replace(ua,"");if("]"===n[0])break}return null===o||Bo(r,o),n.replace(ma,"")},ju=function*(e,t,n){const r=e[t]=new is(ta,true);if(ss){const e=new io("Inline Table",n.length);n=n.replace(ma,"");let t=!0;for(;;){for(;!n||"#"===n[0];)t=!1,n=e.must().replace(ua,"");if("}"===n[0])break;const i=Lu(r,n),o=Eu(i);if(n="string"===typeof o?o:yield o,n){if("#"===n[0]){ls&&(i.table[gu(i.finalKey)]=n.slice(1)),t=!1;do{n=e.must().replace(ua,"")}while(!n||"#"===n[0])}}else{t=!1;do{n=e.must().replace(ua,"")}while(!n||"#"===n[0])}","===n[0]&&(n=n.replace(ma,""))}t||Bo(r,!1)}else if("}"!==(n=n.replace(ma,"")||to(Oi("Inline Table is intended to appear on a single line"+oo(", which broken at "))))[0])for(;;){"#"===n[0]&&to(Oi("Inline Table is intended to appear on a single line"+oo(", which broken at ")));const e=Eu(Lu(r,n));if(n=("string"===typeof e?e:yield e)||to(Oi("Inline Table is intended to appear on a single line"+oo(", which broken at "))),"}"===n[0])break;","===n[0]&&"}"===(n=n.replace(ma,"")||to(Oi("Inline Table is intended to appear on a single line"+oo(", which broken at "))))[0]&&to(Oi("The last property of an Inline Table can not have a trailing comma"+oo(", which was found at ")))}return n.replace(ma,"")},Lu=(e,t)=>{const{leadingKeys:n,finalKey:r,tag:i}=({lineRest:t}=(e=>{let{leadingKeys:t,finalKey:n,lineRest:r}=e;const{1:i=""}=({2:r}=va(r)??to(Oi("Keys must equal something"+oo(", but missing at "))));return i||r&&"#"!==r[0]||to(Oi("Value can not be missing after euqal sign"+oo(", which is found at "))),{leadingKeys:t,finalKey:n,tag:i,lineRest:r}})(Nu(t)));return{table:pu(e,n),finalKey:r,tag:i,lineRest:t}},Eu=e=>{let{finalKey:t,tag:n,lineRest:r,table:i}=e;if(t in i&&to(ai("Duplicate property definition"+oo(" at "))),n)switch(Ds(n,null,i,t),r&&r[0]){case",":case"}":case"":case"#":return i[t]=hi,r}switch(r&&r[0]){case"'":return yu(i,t,r);case'"':return vu(i,t,r);case"{":return $a||to(Oi("Inline Table is not allowed before TOML v0.4"+oo(", which at "))),ju(i,t,r);case"[":return Tu(i,t,r)}const{1:o}=({2:r}=ca(r)??to(Oi("Bad atom value"+oo(" at "))));return"true"===o?i[t]=!0:"false"===o?i[t]=!1:as&&"null"===o?i[t]=null:o.includes(":")?o.includes("-")?zu(o)?i[t]=new Ol(o):(es||to(Oi("Local Date-Time is not allowed before TOML v0.5"+oo(", which at "))),i[t]=new Hl(o)):(es||to(Oi("Local Time is not allowed before TOML v0.5"+oo(", which at "))),i[t]=new Cl(o)):o.indexOf("-")!==o.lastIndexOf("-")&&"-"!==o[0]?(es||to(Oi("Local Date is not allowed before TOML v0.5"+oo(", which at "))),i[t]=new Dl(o)):i[t]=o.includes(".")||o.includes("n")||(o.includes("e")||o.includes("E"))&&!o.startsWith("0x")?Qa?qs(o,fu(o)):fu(o):Qa?qs(o,iu(o)):iu(o),r},Hu=Uint8Array,Xu="undefined"===typeof Buffer?hi:Buffer,Au=e=>"byteLength"in e,Su="A TOML doc must be a (ful-scalar) valid UTF-8 file, without any unknown code point.",Zu=Xu?(e=>{let{isBuffer:t,[di]:n,byteLength:r,allocUnsafe:i,from:o}=e;if("function"===typeof Xu.prototype.utf8Write){const e=Xu.alloc(7);if(e.utf8Write("\ud842\udfb7\u5229",0,7),e.equals(o("\ud842\udfb7\u5229")))return e=>{if(!e.byteLength)return"";const o=t(e)?e:"length"in e?new n(e.buffer,e.byteOffset,e.byteLength):new n(e),a=o.toString();if(a.includes("\ufffd")){const e=r(a);if(e!==o.length)throw ai(Su);const t=i(e);if(t.utf8Write(a,0,e),!t.equals(o))throw ai(Su)}return"\ufeff"===a[0]?a.slice(1):a}}return e=>{if(!e.byteLength)return"";const r=t(e)?e:"length"in e?new n(e.buffer,e.byteOffset,e.byteLength):new n(e),i=r.toString();if(i.includes("\ufffd")&&!o(i).equals(r))throw ai(Su);return"\ufeff"===i[0]?i.slice(1):i}})(Xu):e=>{if(!e.byteLength)return"";const t="length"in e?e:new Hu(e),{length:n}=t,r=n-1,i=r-1,o=i-1,a=[];let s=0,l=0;do{let e=t[l];if(e<192){if(e<128){a[s++]=pi(e),l+=1;continue}}else if(e<224){if(l<r){const n=t[l+1];if(128===(192&n)&&(e=(31&e)<<6|63&n,127<e)){a[s++]=pi(e),l+=2;continue}}}else if(e<240){if(l<i){const n=t[l+1],r=t[l+2];if(128===(192&n)&&128===(192&r)&&(e=(15&e)<<12|(63&n)<<6|63&r,(e<55296?2047:57343)<e)){a[s++]=pi(e),l+=3;continue}}}else if(l<o){const n=t[l+1],r=t[l+2],i=t[l+3];if(128===(192&n)&&128===(192&r)&&128===(192&i)&&(e=(15&e)<<18|(63&n)<<12|(63&r)<<6|63&i,65535<e&&e<1114112)){a[s++]=Il(e),l+=4;continue}}throw ai(Su)}while(l!==n);const u=a.join("");return"\ufeff"===u[0]?u.slice(1):u},{test:Du}=Ui(/[\uD800-\uDFFF]/u);let Ru=!1;const Uu=(e,t,n,r,i)=>{if(Ru)throw ai("parse during parsing.");let o,a;Ru=!0;try{let s="";if("object"===typeof e&&e)if(Au(e))e=Zu(e);else{if(s=e.path,"string"!==typeof s)throw si("TOML.parse(source.path)");const{data:t,require:n=("function"===typeof require?require:hi)}=e;if(n){const r=n.resolve?.paths?.("")?.[0]?.replace(/node_modules$/,"");if(r&&(s=n("path").resolve(r,s),"string"!==typeof s))throw si("TOML.parse(source.require('path').resolve)");if(t===hi){const t=n("fs").readFileSync(s);if("object"!==typeof t||!t||!Au(t))throw si("TOML.parse(source.require('fs').readFileSync)");e=Zu(t)}else if("string"===typeof t)e=t;else{if("object"!==typeof t||!t||!Au(t))throw si("TOML.parse(source.data)");e=Zu(t)}}else{if(t===hi)throw si("TOML.parse(source.data|source.require)");if("string"===typeof t)e=t;else{if("object"!==typeof t||!t||!Au(t))throw si("TOML.parse(source.data)");e=Zu(t)}}}else if("string"!==typeof e)throw si("TOML.parse(source)");try{if(Du(e))throw ai("A TOML doc must be a (ful-scalar) valid UTF-8 file, without any uncoupled UCS-4 character code.");if("object"===typeof n&&n){if(r!==hi||i!==hi)throw si("options mode ? args mode");let e;xi(n,"joiner")&&(e=n.joiner),xi(n,"bigint")&&(r=n.bigint),xi(n,"x")&&(i=n.x),n=e}try{Rs(t,n,r,i),ro(e,s);try{e&&"\ufeff"===e[0]&&to(si("TOML content (string) should not start with BOM (U+FEFF)"+oo(" at "))),o=(()=>{const e=new is;let t=e;for(;eo!==$i;){const n=_i[++eo].replace(ua,"");if(n)if("["===n[0]){const{leadingKeys:r,finalKey:i,asArrayItem:o,tag:a,lineRest:s}=qa(n,Nu),l=du(e,r);s&&("#"===s[0]||to(Oi("Unexpect charachtor after table header"+oo(" at ")))),t=hu(l,i,o,a),ls&&s&&(t[wu]=o?s.slice(1):l[gu(i)]=s.slice(1))}else if("#"===n[0])Ya(n)&&to(Oi("Control characters other than Tab are not permitted in comments"+oo(", which was found at ")));else{const e=Lu(t,n);let r=Eu(e);"string"===typeof r||(r=Ws(r)),r&&("#"===r[0]||to(Oi("Unexpect charachtor after key/value pair"+oo(" at "))),ls&&(e.table[gu(e.finalKey)]=r.slice(1)))}}return e})(),a=(()=>{if(As){let e=As;const t=Hs,n=Xs;return Xs=[],()=>{do{t(n[--e]),n.length=e}while(e)}}return null})()}finally{ao()}}finally{Hs=null,Xs.length=As=0,_a=!1,fs=null}}finally{Ki()}}finally{Ru=!1}return a?.(),o},Fu=li(((e,t,n,r,i)=>"number"===typeof t?Uu(e,t,n,r,i):Uu(e,1,t,n,r)),{"1.0":(e,t,n,r)=>Uu(e,.1,t,n,r),1:(e,t,n,r)=>Uu(e,1,t,n,r),.5:(e,t,n,r)=>Uu(e,.5,t,n,r),.4:(e,t,n,r)=>Uu(e,.4,t,n,r),.3:(e,t,n,r)=>Uu(e,.3,t,n,r),.2:(e,t,n,r)=>Uu(e,.2,t,n,r),.1:(e,t,n,r)=>Uu(e,.1,t,n,r)}),Wu=Number.MAX_SAFE_INTEGER,Cu=Date.prototype,qu=Object.prototype.isPrototypeOf,Iu=String.prototype.valueOf,Bu=Number.prototype.valueOf,Yu="undefined"===typeof BigInt?hi:BigInt.prototype.valueOf,Vu=Yu?function(e){try{Li(Yu,e,gi)}catch(t){return!1}return!0}:function(){return!1},Gu=Boolean.prototype.valueOf,Ku=xo({...zo([...mi(32)].map(((e,t)=>[pi(t),"\\u"+t.toString(16).toUpperCase().padStart(4,"0")]))),"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"','"""':'""\\"',"\\":"\\\\","\x7f":"\\u007F"}),{test:Ju}=Ui(/[\x00-\x08\x0A-\x1F'\x7F]/),Qu=/[^\x00-\x08\x0A-\x1F"\\\x7F]+|./gs,{test:_u}=Ui(/^[\x00-\x08\x0A-\x1F"\\\x7F]/),$u=e=>{if(Ju(e)){const t=e.match(Qu);let n=t.length;do{_u(t[--n])&&(t[n]=Ku[t[n]])}while(n);return`"${t.join("")}"`}return`'${e}'`},{test:ec}=Ui(/[\x00-\x08\x0A-\x1F\x7F]|'''/),{test:tc}=Ui(/[\x00-\x08\x0B-\x1F\x7F]|'''/),{test:nc}=Ui(/[\x00-\x08\x0A-\x1F\\\x7F]|"""/),rc=/[^\x00-\x08\x0A-\x1F"\\\x7F]+|"""|./gs,{test:ic}=Ui(/^(?:[\x00-\x08\x0A-\x1F\\\x7F]|""")/),oc=(e,t)=>{const n=e[t];if(nc(n)){const r=n.match(rc);let i=r.length;do{ic(r[--i])&&(r[i]=Ku[r[i]])}while(i);e[t]=r.join("")}},ac=e=>1===(e=["",...e]).length?["",""]:e,sc=e=>{let t=e.length-1;for(oc(e,t),e[t]+=e[0]='"""';--t;)oc(e,t);return e},lc=e=>(e[e.length-1]+=e[0]="'''",e),{test:uc}=Ui(/^-?\d+$/),cc=e=>e?e===fi?"inf":e===-(1/0)?"-inf":(e=>uc(e)?e+".0":e)(""+e):e===e?Po(e,0)?"0.0":"-0.0":"nan",fc=qu.bind(Cu),{test:dc}=Ui(/^[\w-]+$/),hc=e=>dc(e)?e:$u(e),pc=/[^.]+/,mc=e=>`'${e}'`,yc=e=>Ja(e)?e.replace(pc,mc):"null"===e?"'null'":e;class vc extends mi{document;constructor(e){return super(),this.document=e,this}[Us.toPrimitive](){return this.join(this.document.newline)}appendNewline(){this[this.length]=""}set appendLine(e){this[this.length]=e}set appendInline(e){this[this.length-1]+=e}set appendInlineIf(e){e&&(this[this.length-1]+=e)}*assignBlock(e,t,n,r){const{document:i}=this,{newlineUnderHeader:o,newlineUnderSectionButPair:a}=i,s=!!t&&i.newlineUnderPairButDotted,l=t?i.newlineUnderDotted:i.newlineUnderPair;for(const u of r){const r=n[u],c=hc(u),f=e+c;if(ci(r)){const{length:e}=r;if(e){let t=r[0];if(Vo(t)){const n=`[[${f}]]`,s=f+".";let l=0,u=t;for(;;){const t=i.appendSection();if(t[0]=n+Pu(u,wu),o?(t[1]="",yield t.assignBlock(s,"",u,po(u)),a&&2!==t.length&&t.appendNewline()):(yield t.assignBlock(s,"",u,po(u)),a&&t.appendNewline()),++l===e)break;if(u=r[l],!Vo(u))throw si("the first table item marked by Section() means the parent array is an array of tables, which can not include other types or table not marked by Section() any more in the rest items")}continue}{let t=1;for(;t!==e;)if(Vo(r[t++]))throw si("if an array is not array of tables, it can not include any table that marked by Section()")}}}else if(Vo(r)){const e=i.appendSection();e[0]=`[${f}]${i.preferCommentForThis?Pu(r,wu)||ku(n,u):ku(n,u)||Pu(r,wu)}`,o?(e[1]="",yield e.assignBlock(f+".","",r,po(r)),a&&2!==e.length&&e.appendNewline()):(yield e.assignBlock(f+".","",r,po(r)),a&&e.appendNewline());continue}const d=t+c;this.appendLine=yc(d)+" = ";const h=this.value("",r,!0);h?(--this.length,yield this.assignBlock(f+".",d+".",r,h),s&&this.appendNewline()):(this.appendInlineIf=ku(n,u),l&&this.appendNewline())}}value(e,t,n){switch(typeof t){case"object":if(null===t){if(this.document.nullDisabled)throw si('toml can not stringify "null" type value without truthy options.xNull');this.appendInline="null";break}const r=Io(t);if(ci(t)){r===hi?this.staticArray(e,t):this.singlelineArray(e,t,this.document.$singlelineArray??r);break}if(r!==hi){r||this.document.multilineTableDisabled?this.inlineTable(e,t):this.multilineTable(e,t,this.document.multilineTableComma);break}if(fc(t)){this.appendInline=t.toISOString().replace("T",this.document.T).replace("Z",this.document.Z);break}if(Cs in t){const e=t[Cs];if("string"===typeof e)this.appendInline=e;else{if(!ci(e))throw si("literal value is broken");{const{length:t}=e;if(!t)throw si("literal value is broken");{this.appendInline=e[0];let n=1;for(;n!==t;)this.appendLine=e[n++]}}}break}if(function(e){try{Li(Iu,e,gi)}catch(t){return!1}return!0}(t))throw si("TOML.stringify refuse to handle [object String]");if(function(e){try{Li(Bu,e,gi)}catch(t){return!1}return!0}(t))throw si("TOML.stringify refuse to handle [object Number]");if(Vu(t))throw si("TOML.stringify refuse to handle [object BigInt]");if(function(e){try{Li(Gu,e,gi)}catch(t){return!1}return!0}(t))throw si("TOML.stringify refuse to handle [object Boolean]");if(n){const e=po(t);if(e.length)return e;this.appendInline="{ }"}else this.inlineTable(e,t);break;case"bigint":this.appendInline=""+t;break;case"number":this.appendInline=this.document.asInteger(t)?Po(t,-0)?"-0":""+t:cc(t);break;case"string":this.appendInline=$u(t);break;case"boolean":this.appendInline=t?"true":"false";break;default:throw si(`toml can not stringify "${typeof t}" type value`)}return null}singlelineArray(e,t,n){const{length:r}=t;if(r){this.appendInline=2&n?"[ ":"[",this.value(e,t[0],!1);let i=1;for(;i!==r;)this.appendInline=", ",this.value(e,t[i++],!1);this.appendInline=2&n?" ]":"]"}else this.appendInline=1&n?"[ ]":"[]"}staticArray(e,t){this.appendInline="[";const n=e+this.document.indent,{length:r}=t;let i=0;for(;i!==r;)this.appendLine=n,this.value(n,t[i++],!1),this.appendInline=",";this.appendLine=e+"]"}inlineTable(e,t){const n=po(t);n.length?(this.appendInline="{ ",this.assignInline(e,t,"",n),this[this.length-1]=this[this.length-1].slice(0,-2)+" }"):this.appendInline="{ }"}multilineTable(e,t,n){this.appendInline="{",this.assignMultiline(e,t,"",po(t),n),this.appendLine=e+"}"}assignInline(e,t,n,r){for(const i of r){const r=t[i],o=n+hc(i),a=this.appendInline=yc(o)+" = ",s=this.value(e,r,!0);s?(this[this.length-1]=this[this.length-1].slice(0,-a.length),this.assignInline(e,r,o+".",s)):this.appendInline=", "}}assignMultiline(e,t,n,r,i){const o=e+this.document.indent;for(const a of r){const r=t[a],s=n+hc(a);this.appendLine=o+yc(s)+" = ";const l=this.value(o,r,!0);l?(--this.length,this.assignMultiline(e,r,s+".",l,i)):i?this.appendInline=","+ku(t,a):this.appendInlineIf=ku(t,a)}}}const bc=xo({document:0,section:1,header:2,pairs:3,pair:4}),{test:gc}=Ui(/^[\t ]*$/),wc=()=>!1;class xc extends mi{get["constructor"](){return mi}0=new vc(this);asInteger=wc;newline="";newlineUnderSection;newlineUnderSectionButPair;newlineUnderHeader;newlineUnderPair;newlineUnderPairButDotted;newlineUnderDotted;indent="\t";T="T";Z="Z";nullDisabled=!0;multilineTableDisabled=!0;multilineTableComma;preferCommentForThis=!1;$singlelineArray;constructor(e){super();const t=e?.integer;if(void 0===t);else if(t===Wu)this.asInteger=ho;else{if("number"!==typeof t)throw si("TOML.stringify(,{integer}) can only be number");{if(!ho(t))throw so("TOML.stringify(,{integer}) can only be a safe integer");const e=t>=0?t:-t-1,n=t>=0?-t:t;this.asInteger=t=>ho(t)&&n<=t&&t<=e}}const n=e?.newline;if(void 0===n);else{if("\n"!==n&&"\r\n"!==n)throw"string"===typeof n?Oi("TOML.stringify(,{newline}) can only be valid TOML newline"):si("TOML.stringify(,{newline}) can only be string");this.newline=n}const r=e?.preferCommentFor;if(void 0===r);else{if("this"!==r&&"key"!==r)throw si("TOML.stringify(,{preferCommentFor) can only be 'key' or 'this'");this.preferCommentForThis="this"===r}const i=bc[e?.newlineAround??"header"]??bc.header;this.newlineUnderSection=i>0,this.newlineUnderSectionButPair=1===i||2===i,this.newlineUnderHeader=i>1,this.newlineUnderPair=i>2,this.newlineUnderPairButDotted=3===i,this.newlineUnderDotted=i>3;const o=e?.indent;if(void 0===o);else if("string"===typeof o){if(!gc(o))throw Oi("TOML.stringify(,{indent}) can only include Tab or Space");this.indent=o}else{if("number"!==typeof o)throw si(`TOML.stringify(,{indent}) can not be "${typeof o}" type`);if(!ho(o))throw so(`TOML.stringify(,{indent:${o}}) is out of range`);this.indent=" ".repeat(o)}const a=e?.T;if(void 0===a);else{if(" "!==a&&"t"!==a&&"T"!==a)throw si('TOML.stringify(,{T}) can only be "T" or " " or "t"');this.T=a}const s=e?.Z;if(void 0===s);else{if("z"!==s&&"Z"!==s)throw si('TOML.stringify(,{Z}) can only be "Z" or "z"');this.Z=s}e?.xNull&&(this.nullDisabled=!1);const l=e?.xBeforeNewlineInMultilineTable;if(void 0===l);else{if(""!==l&&","!==l)throw si('TOML.stringify(,{xBeforeNewlineInMultilineTable}) can only be "" or ","');this.multilineTableDisabled=!1,this.multilineTableComma=!!l}const u=e?.forceInlineArraySpacing;switch(u){case void 0:break;case 0:case 1:case 2:case 3:this.$singlelineArray=u;break;default:throw"number"===typeof u?so(`array inline mode must be 0 | 1 | 2 | 3, not including ${u}`):si('array inline mode must be "number" type, not including '+(null===u?'"null"':typeof u))}return this}appendSection(){return this[this.length]=new vc(this)}}const Pc=Si({version:"1.30.0",parse:Fu,stringify:(e,t)=>{const n=new xc(t),r=n[0];return r[0]="",Ws(r.assignBlock("","",e,po(e))),n.newlineUnderSectionButPair&&1!==r.length&&r.appendNewline(),n.newlineUnderSection||n[n.length-1].appendNewline(),n.newline?n.join(n.newline):n.flat()},Section:e=>{if(ci(e))throw si("array can not be section, maybe you want to use it on the tables in it");return Go(e),Wo(e),e},inline:(e,t,n)=>{if(ci(e)){if(n)t=3;else if(t===hi)t=3;else if(0!==t&&1!==t&&2!==t&&3!==t)throw"number"===typeof t?so(`array inline mode must be 0 | 1 | 2 | 3, not including ${t}`):si('array inline mode must be "number" type, not including '+(null===t?'"null"':typeof t));Bo(e,t)}else Bo(e,!0),Co(e);return e},multiline:(()=>{const e=(e,t)=>"string"===typeof e?qs((tc(e)?sc:lc)(("\n"+e).split("\n")),e):ci(e)?qs((e=>{const t=e.length-1;let n=t;do{if(ec(e[n]))break}while(--n);if(n)for(n=t,oc(e,n),e[n]+=e[0]='"""';--n;)oc(e,n);else e[t]+=e[0]="'''";return e})(ac(e)),"string"===typeof t?t:xo(null)):(e=>(Bo(e,!1),Co(e),e))(e);return e.basic=(e,t)=>"string"===typeof e?qs(sc(("\n"+e).split("\n")),e):qs(sc(ac(e)),"string"===typeof t?t:xo(null)),e.array=Yo,ji(e),e})(),basic:e=>qs((e=>{if(e){const t=e.match(Qu);let n=t.length;do{_u(t[--n])&&(t[n]=Ku[t[n]])}while(n);return`"${t.join("")}"`}return'""'})(e),e),literal:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if("string"===typeof e){if(1===n.length)return qs(e.includes("\n")?e.split("\n"):e,n[0])}else{let t=n.length;if(t){const{raw:r}=e;for(e=r[t];t;)n[--t]+=r[t];e=n.join("")+e}else e=e.raw[0]}return qs(e.includes("\n")?e.split("\n"):e,xo(null))},commentFor:gu,commentForThis:wu,OffsetDateTime:Ol,LocalDateTime:Hl,LocalDate:Dl,LocalTime:Cl,isInline:qo,isSection:Vo});class kc{static parse(e){return Pc.parse(e)}static stringify(e){return Pc.stringify(e,{newline:"\n"})}}const zc=e=>Pc.Section(e);var Mc=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n};class Nc{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";this.claimInfo=e,this.sigSpec=t,this.statement=n}static fromBase64Url(e){let[t,n]=e.split("."),r=ni(t),i=kc.parse(ni(n)),{information:o,specification:a}=i;Mc(i,["information","specification"]);return new Nc(o,a,r)}stringify(){if(!this.claimInfo)throw new Error("information section can not be empty.");if(!this.sigSpec)throw new Error("specification section can not be empty.");let e=kc.stringify({information:zc(this.claimInfo),specification:zc(this.sigSpec)});return`${this.statement}\n\n${e}`}toBase64Url(){if(!this.claimInfo)throw new Error("information section can not be empty.");if(!this.sigSpec)throw new Error("specification section can not be empty.");let e=kc.stringify({information:zc(this.claimInfo),specification:zc(this.sigSpec)});return`${ti(this.statement)}.${ti(e)}`}setNotBefore(e){return this.claimInfo=Object.assign(Object.assign({},this.claimInfo),{not_before:e}),this}setExpiration(e){return this.claimInfo=Object.assign(Object.assign({},this.claimInfo),{expires_at:e}),this}setAudience(e){return this.claimInfo=Object.assign(Object.assign({},this.claimInfo),{audience:e}),this}setAddress(e){return this.claimInfo=Object.assign(Object.assign({},this.claimInfo),{address:e}),this}}var Oc=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{l(r.next(e))}catch(Dz){o(Dz)}}function s(e){try{l(r.throw(e))}catch(Dz){o(Dz)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((r=r.apply(e,t||[])).next())}))};class Tc{constructor(e,t){this._signer=e,this._content=t}getSignature(){return Oc(this,void 0,void 0,(function*(){if(!this._signer)throw new Error("no signer is set for signing the token");if(!this._content)throw new Error("no content is set to be signed.");let e=this._content.stringify(),t=this._content.toBase64Url(),n=yield this._signer.sign(e);return{base64Content:t,base64Sig:ii(n,!0)}}))}}var jc=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{l(r.next(e))}catch(Dz){o(Dz)}}function s(e){try{l(r.throw(e))}catch(Dz){o(Dz)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((r=r.apply(e,t||[])).next())}))};class Lc{constructor(e){this._sigVerifier=e}verify(e){return jc(this,void 0,void 0,(function*(){let[t,n,r,...i]=(null===e||void 0===e?void 0:e.split("."))||[];if(0!==i.length)throw new Error("invalid token. malformed");if(!n||!r||t&&!ri(t)||!ri(n)||!ri(r))throw new Error("invalid token.  content or signature is missing or is invalid");let o=t&&ni(t),{information:a,specification:s}=kc.parse(ni(n)),l=oi(r),{algorithm:u}=s||{},{address:c,not_before:f,audience:d,expires_at:h}=a||{};if(!h)throw new Error("invalid token.  expiration claim is missing");let p=Math.floor(Date.now()/1e3);if(p>Math.floor((null===h||void 0===h?void 0:h.getTime())/1e3)+300)throw new Error("invalid token.  token is expired");if(f){if(p<Math.floor((null===f||void 0===f?void 0:f.getTime())/1e3)-300)throw new Error("invalid token.  token is not valid before nbf time")}if(!c)throw new Error("invalid token.  address claim is missing");let m=Nc.fromBase64Url(`${t}.${n}`).stringify();if(!(yield this._sigVerifier.verify(u,m,l,c)))throw new Error("invalid token, signiture is not valid");return{statement:o,specification:s,information:a}}))}}const Ec=new Array(256),Hc=new Array(65536),Xc={},Ac={};for(let n=0;n<256;n++){const e=n.toString(16).padStart(2,"0");Ec[n]=e,Xc[e]=n}for(let n=0;n<256;n++)for(let e=0;e<256;e++){const t=Ec[n]+Ec[e],r=n<<8|e;Hc[r]=t,Ac[t]=r}const Sc=/^0x[\da-fA-F]+$/,Zc=/^[\da-fA-F]+$/;function Dc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2?arguments[2]:void 0;return"string"===typeof e&&("0x"===e||Sc.test(e))&&(-1===t?n||e.length%2===0:e.length===2+Math.ceil(t/4))}function Rc(e){if(!e||"0x"===e)return"";if(Sc.test(e))return e.substr(2);if(Zc.test(e))return e;throw new Error(`Expected hex value to convert, found '${e}'`)}function Uc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;if(!e)return new Uint8Array;const n=Rc(e).toLowerCase(),r=n.length/2,i=Math.ceil(-1===t?r:t/8),o=new Uint8Array(i),a=i>r?i-r:0,s=new DataView(o.buffer,a),l=(i-a)%2,u=i-a-l;for(let c=0;c<u;c+=2)s.setUint16(c,Ac[n.substr(2*c,4)]);return l&&s.setUint8(u,Xc[n.substr(n.length-2,2)]),o}var Fc=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{l(r.next(e))}catch(Dz){o(Dz)}}function s(e){try{l(r.throw(e))}catch(Dz){o(Dz)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((r=r.apply(e,t||[])).next())}))};class Wc{constructor(e){this._signingAccount=e}sign(e){var t;return Fc(this,void 0,void 0,(function*(){let n;if(!this._signingAccount||!(null===(t=this._signingAccount)||void 0===t?void 0:t.account))throw new Error("no signing account was provided to sign the data with keyring");{let{account:t,signer:r}=this._signingAccount;if(r&&r.signRaw){let{signature:i}=yield r.signRaw({address:t.address,data:e,type:"bytes"});n=Uc(i)}else n=t.sign(e)}if(!n)throw new Error("empty signiture is not valid.");return n}))}}function Cc(e){return"function"===typeof e}function qc(e,t){if(!e)throw new Error(Cc(t)?t():t)}const Ic="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof global?global:"undefined"!==typeof self?self:"undefined"!==typeof window?window:Function("return this");function Bc(e,t){return"undefined"===typeof Ic[e]?t:Ic[e]}const Yc=new(Bc("TextDecoder",class{constructor(e){}decode(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t}}))("utf-8");function Vc(e){return null!==e&&void 0!==e&&e.length?Yc.decode(e):""}const Gc=new(Bc("TextEncoder",class{encode(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}}));function Kc(e){return e?Gc.encode(e.toString()):new Uint8Array}const Jc={cachegetInt32:null,cachegetUint8:null,type:"wasm",wasm:null,wasmPromise:null,wasmPromiseFn:null};function Qc(e){return function(){qc(Jc.wasm,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e(Jc.wasm,...n)}}function _c(){return null!==Jc.cachegetInt32&&Jc.cachegetInt32.buffer===Jc.wasm.memory.buffer||(Jc.cachegetInt32=new Int32Array(Jc.wasm.memory.buffer)),Jc.cachegetInt32}function $c(){return null!==Jc.cachegetUint8&&Jc.cachegetUint8.buffer===Jc.wasm.memory.buffer||(Jc.cachegetUint8=new Uint8Array(Jc.wasm.memory.buffer)),Jc.cachegetUint8}function ef(e,t){return $c().subarray(e/1,e/1+t)}function tf(e,t){return Vc(ef(e,t))}function nf(e){const t=Jc.wasm.__wbindgen_malloc(1*e.length);return $c().set(e,t/1),[t,e.length]}function rf(e){return nf(Kc(e))}function of(){const e=_c()[2],t=_c()[3],n=ef(e,t).slice();return Jc.wasm.__wbindgen_free(e,1*t),n}var af=n(616);const sf=Uint8Array,lf=Uint16Array,uf=Uint32Array,cf=new sf([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ff=new sf([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),df=new sf([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),hf=(e,t)=>{const n=new lf(31);for(let i=0;i<31;++i)n[i]=t+=1<<e[i-1];const r=new uf(n[30]);for(let i=1;i<30;++i)for(let e=n[i];e<n[i+1];++e)r[e]=e-n[i]<<5|i;return[n,r]},[pf,mf]=hf(ff,2);pf[28]=258,mf[258]=28;const[yf]=hf(df,0),vf=new lf(32768);for(let n=0;n<32768;++n){let e=(43690&n)>>>1|(21845&n)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,vf[n]=((65280&e)>>>8|(255&e)<<8)>>>1}const bf=(e,t,n)=>{const r=e.length;let i=0;const o=new lf(t);for(;i<r;++i)++o[e[i]-1];const a=new lf(t);for(i=0;i<t;++i)a[i]=a[i-1]+o[i-1]<<1;let s;if(n){s=new lf(1<<t);const n=15-t;for(i=0;i<r;++i)if(e[i]){const r=i<<4|e[i],o=t-e[i];let l=a[e[i]-1]++<<o;for(const e=l|(1<<o)-1;l<=e;++l)s[vf[l]>>>n]=r}}else for(s=new lf(r),i=0;i<r;++i)s[i]=vf[a[e[i]-1]++]>>>15-e[i];return s},gf=new sf(288);for(let n=0;n<144;++n)gf[n]=8;for(let n=144;n<256;++n)gf[n]=9;for(let n=256;n<280;++n)gf[n]=7;for(let n=280;n<288;++n)gf[n]=8;const wf=new sf(32);for(let n=0;n<32;++n)wf[n]=5;const xf=bf(gf,9,1),Pf=bf(wf,5,1),kf=(e,t,n)=>{const r=t>>>3;return(e[r]|e[r+1]<<8)>>>(7&t)&n},zf=(e,t)=>{const n=t>>>3;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>>(7&t)},Mf=e=>{let t=e[0];for(let n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t},Nf=(e,t,n)=>{const r=!n||n.i;n||(n={});const i=e.length,o=!t||!r;t||(t=new sf(3*i));const a=e=>{let n=t.length;if(e>n){const r=new sf(Math.max(n<<1,e));r.set(t),t=r}};let s=n.f||0,l=n.p||0,u=n.b||0,c=n.l,f=n.d,d=n.m,h=n.n;if(s&&!c)return t;const p=i<<3;do{if(!c){n.f=s=kf(e,l,1);const y=kf(e,l+1,3);if(l+=3,!y){const s=((m=l)>>>3)+(7&m&&1)+4,c=e[s-4]|e[s-3]<<8,f=s+c;if(f>i){if(r)throw"unexpected EOF";break}o&&a(u+c),t.set(e.subarray(s,f),u),n.b=u+=c,n.p=l=f<<3;continue}if(1==y)c=xf,f=Pf,d=9,h=5;else{if(2!=y)throw"invalid block type";{const t=kf(e,l,31)+257,n=kf(e,l+10,15)+4,i=t+kf(e,l+5,31)+1;l+=14;const o=new sf(i),a=new sf(19);for(let r=0;r<n;++r)a[cf[r]]=kf(e,l+3*r,7);l+=3*n;const s=Mf(a),u=(1<<s)-1;if(!r&&l+i*(s+7)>p)break;const m=bf(a,s,1);for(let r=0;r<i;){const t=m[kf(e,l,u)];l+=15&t;const n=t>>>4;if(n<16)o[r++]=n;else{let t=0,i=0;for(16==n?(i=3+kf(e,l,3),l+=2,t=o[r-1]):17==n?(i=3+kf(e,l,7),l+=3):18==n&&(i=11+kf(e,l,127),l+=7);i--;)o[r++]=t}}const y=o.subarray(0,t),v=o.subarray(t);d=Mf(y),h=Mf(v),c=bf(y,d,1),f=bf(v,h,1)}}if(l>p)throw"unexpected EOF"}o&&a(u+131072);const y=(1<<d)-1,v=(1<<h)-1,b=d+h+18;for(;r||l+b<p;){const n=c[zf(e,l)&y],r=n>>>4;if(l+=15&n,l>p)throw"unexpected EOF";if(!n)throw"invalid length/literal";if(r<256)t[u++]=r;else{if(256==r){c=void 0;break}{let n=r-254;if(r>264){const t=r-257,i=ff[t];n=kf(e,l,(1<<i)-1)+pf[t],l+=i}const i=f[zf(e,l)&v],s=i>>>4;if(!i)throw"invalid distance";l+=15&i;let c=yf[s];if(s>3){const t=df[s];c+=zf(e,l)&(1<<t)-1,l+=t}if(l>p)throw"unexpected EOF";o&&a(u+131072);const d=u+n;for(;u<d;u+=4)t[u]=t[u-c],t[u+1]=t[u+1-c],t[u+2]=t[u+2-c],t[u+3]=t[u+3-c];u=d}}}n.l=c,n.p=l,n.b=u,c&&(s=1,n.m=d,n.d=f,n.n=h)}while(!s);var m;return u==t.length?t:((e,t,n)=>{(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);const r=new(e instanceof lf?lf:e instanceof uf?uf:sf)(n-t);return r.set(e.subarray(t,n)),r})(t,0,u)};const Of=(Tf=function(e){const t=[];let n=0,r=0;for(let i=0;i<e.length&&"="!==e[i];i++)n=n<<6|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[i]),(r+=6)>=8&&t.push(n>>>(r-=8)&255);return Uint8Array.from(t)}(af.bytes),jf=new Uint8Array(af.sizeUncompressed),Nf(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(Tf),Tf.subarray(2,-4)),jf));var Tf,jf;const Lf={getRandomValues:function(e){return Ic.crypto.getRandomValues(e)}},Ef={crypto:Lf},Hf=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let Xf=Hf.length;function Af(e){return Hf[e]}function Sf(e){const t=Af(e);return function(e){e<36||(Hf[e]=Xf,Xf=e)}(e),t}function Zf(e){Xf===Hf.length&&Hf.push(Hf.length+1);const t=Xf;return Xf=Hf[t],Hf[t]=e,t}function Df(e){return void 0===Af(e)}function Rf(e,t){throw new Error(tf(e,t))}function Uf(){return Zf(Ef)}function Ff(e,t){throw new Error(`Unable to require ${tf(e,t)}`)}function Wf(e){return Zf(Lf)}function Cf(e){return Zf(Lf.getRandomValues)}function qf(e,t,n){Lf.getRandomValues(ef(t,n))}function If(e,t,n){throw new Error("randomFillsync is not available")}function Bf(e){Sf(e)}function Yf(){throw new Error("abort")}function Vf(t,n){return Jc.wasmPromise=async function(t,n){try{qc("object"===typeof WebAssembly&&"function"===typeof WebAssembly.instantiate&&t&&t.length,"WebAssembly is not available in your environment");const n=await WebAssembly.instantiate(t,{wbg:e});Jc.wasm=n.instance.exports}catch(r){n?(Jc.type="asm",Jc.wasm=n(e)):(console.error(`FATAL: Unable to initialize @polkadot/wasm-crypto:: ${r.message}`),Jc.wasm=null)}}(t,n),Jc.wasmPromise}function Gf(){return Vf(Of,null)}Qc(((e,t)=>(e.ext_bip39_generate(8,t),Vc(of())))),Qc(((e,t)=>(e.ext_bip39_to_entropy(8,...rf(t)),of()))),Qc(((e,t,n)=>(e.ext_bip39_to_mini_secret(8,...rf(t),...rf(n)),of()))),Qc(((e,t,n)=>(e.ext_bip39_to_seed(8,...rf(t),...rf(n)),of()))),Qc(((e,t)=>0!==e.ext_bip39_validate(...rf(t)))),Qc(((e,t)=>(e.ext_ed_from_seed(8,...nf(t)),of()))),Qc(((e,t,n,r)=>(e.ext_ed_sign(8,...nf(t),...nf(n),...nf(r)),of())));const Kf=Qc(((e,t,n,r)=>0!==e.ext_ed_verify(...nf(t),...nf(n),...nf(r)))),Jf=(Qc(((e,t)=>(e.ext_secp_from_seed(8,...nf(t)),of()))),Qc(((e,t)=>(e.ext_secp_pub_compress(8,...nf(t)),of())))),Qf=Qc(((e,t)=>(e.ext_secp_pub_expand(8,...nf(t)),of()))),_f=Qc(((e,t,n,r)=>(e.ext_secp_recover(8,...nf(t),...nf(n),r),of()))),$f=(Qc(((e,t,n)=>(e.ext_secp_sign(8,...nf(t),...nf(n)),of()))),Qc(((e,t,n)=>(e.ext_sr_derive_keypair_hard(8,...nf(t),...nf(n)),of()))),Qc(((e,t,n)=>(e.ext_sr_derive_keypair_soft(8,...nf(t),...nf(n)),of()))),Qc(((e,t,n)=>(e.ext_sr_derive_public_soft(8,...nf(t),...nf(n)),of()))),Qc(((e,t)=>(e.ext_sr_from_seed(8,...nf(t)),of()))),Qc(((e,t,n,r)=>(e.ext_sr_sign(8,...nf(t),...nf(n),...nf(r)),of()))),Qc(((e,t,n,r)=>0!==e.ext_sr_verify(...nf(t),...nf(n),...nf(r))))),ed=(Qc(((e,t,n)=>(e.ext_sr_agree(8,...nf(t),...nf(n)),of()))),Qc(((e,t,n,r,i)=>(e.ext_vrf_sign(8,...nf(t),...nf(n),...nf(r),...nf(i)),of()))),Qc(((e,t,n,r,i,o)=>0!==e.ext_vrf_verify(...nf(t),...nf(n),...nf(r),...nf(i),...nf(o)))),Qc(((e,t,n,r)=>(e.ext_blake2b(8,...nf(t),...nf(n),r),of())))),td=(Qc(((e,t,n)=>(e.ext_hmac_sha256(8,...nf(t),...nf(n)),of()))),Qc(((e,t,n)=>(e.ext_hmac_sha512(8,...nf(t),...nf(n)),of()))),Qc(((e,t)=>(e.ext_keccak256(8,...nf(t)),of())))),nd=Qc(((e,t)=>(e.ext_keccak512(8,...nf(t)),of())));Qc(((e,t,n,r)=>(e.ext_pbkdf2(8,...nf(t),...nf(n),r),of()))),Qc(((e,t,n,r,i,o)=>(e.ext_scrypt(8,...nf(t),...nf(n),r,i,o),of()))),Qc(((e,t)=>(e.ext_sha256(8,...nf(t)),of()))),Qc(((e,t)=>(e.ext_sha512(8,...nf(t)),of()))),Qc(((e,t,n)=>(e.ext_twox(8,...nf(t),n),of())));function rd(){return!!Jc.wasm}function id(){return async function(){try{return Jc.wasmPromise||(Jc.wasmPromiseFn||(Jc.wasmPromiseFn=Gf),Jc.wasmPromise=Jc.wasmPromiseFn()),await Jc.wasmPromise,rd()}catch{return!1}}().then((()=>(qc(rd(),"Unable to initialize @polkadot/util-crypto"),!0))).catch((()=>!1))}function od(e){return e instanceof Uint8Array}const ad="function"===typeof Ic.BigInt&&"function"===typeof Ic.BigInt.asIntN?Ic.BigInt:()=>Number.NaN,sd="function"===typeof ad&&"function"===typeof ad.asIntN,ld="undefined"!==typeof Buffer;function ud(e){return e?Array.isArray(e)||function(e){return ld&&Buffer.isBuffer(e)}(e)?new Uint8Array(e):od(e)?e:Dc(e)?Uc(e):Kc(e):new Uint8Array}const cd={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:n(648).Jq,ipfs:"z",type:"base58"},fd=function(e){let{chars:t,ipfs:n,type:r}=e;return(e,i)=>{qc(e&&"string"===typeof e,(()=>`Expected non-null, non-empty ${r} string input`)),n&&i&&qc(e[0]===n,(()=>`Expected ipfs-compatible ${r} to start with '${n}'`));for(let n=i?1:0;n<e.length;n++)qc(t.includes(e[n])||"="===e[n]&&(n===e.length-1||!t.includes(e[n+1])),(()=>`Invalid ${r} character "${e[n]}" (0x${e.charCodeAt(n).toString(16)}) at index ${n}`));return!0}}(cd),dd=function(e,t){let{coder:n,ipfs:r}=e;return(e,i)=>(t(e,i),n.decode(r&&i?e.substr(1):e))}(cd,fd);(function(e){let{coder:t,ipfs:n}=e})(cd),hd=fd;var hd;function pd(){let e=0,t=0;const n=new Array(arguments.length);for(let i=0;i<arguments.length;i++)n[i]=ud(i<0||arguments.length<=i?void 0:arguments[i]),e+=n[i].length;const r=new Uint8Array(e);for(let i=0;i<n.length;i++)r.set(n[i],t),t+=n[i].length;return r}"object"===typeof self&&"crypto"in self&&self.crypto;const md=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4));if(!(68===new Uint8Array(new Uint32Array([287454020]).buffer)[0]))throw new Error("Non little-endian hardware is not supported");Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));(()=>{const e="undefined"!==typeof module&&"function"===typeof module.require&&module.require.bind(module);try{if(e){const{setImmediate:t}=e("timers");return()=>new Promise((e=>t(e)))}}catch(Dz){}})();function yd(e){if("string"===typeof e&&(e=function(e){if("string"!==typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}function vd(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}class bd{clone(){return this._cloneInto()}}function gd(e){const t=(t,n)=>e(n).update(yd(t)).digest(),n=e({});return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.create=t=>e(t),t}const wd=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class xd extends bd{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0,i=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,vd(e),vd(t),vd(r),t<0||t>r)throw new Error("Blake2: outputLen bigger than keyLen");if(void 0!==n.key&&(n.key.length<1||n.key.length>r))throw new Error(`Key should be up 1..${r} byte long or undefined`);if(void 0!==n.salt&&n.salt.length!==i)throw new Error(`Salt should be ${i} byte long or undefined`);if(void 0!==n.personalization&&n.personalization.length!==o)throw new Error(`Personalization should be ${o} byte long or undefined`);this.buffer32=md(this.buffer=new Uint8Array(e))}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{finished:t,blockLen:n,buffer:r,buffer32:i}=this;if(t)throw new Error("digest() was already called");const o=(e=yd(e)).length;for(let a=0;a<o;){this.pos===n&&(this.compress(i,0,!1),this.pos=0);const t=Math.min(n-this.pos,o-a),s=e.byteOffset+a;if(t!==n||s%4||!(a+t<o))r.set(e.subarray(a,a+t),this.pos),this.pos+=t,this.length+=t,a+=t;else{const t=new Uint32Array(e.buffer,s,Math.floor((o-a)/4));for(let e=0;a+n<o;e+=i.length,a+=n)this.length+=n,this.compress(t,e,!1)}}return this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Blake2: Invalid output buffer");const{finished:t,pos:n,buffer32:r}=this;if(t)throw new Error("digest() was already called");this.finished=!0,this.buffer.subarray(n).fill(0),this.compress(r,0,!0);const i=md(e);this.get().forEach(((e,t)=>i[t]=e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){const{buffer:t,length:n,finished:r,destroyed:i,outputLen:o,pos:a}=this;return e||(e=new this.constructor({dkLen:o})),e.set(...this.get()),e.length=n,e.finished=r,e.destroyed=i,e.outputLen=o,e.buffer.set(t),e.pos=a,e}}const Pd=BigInt(2**32-1),kd=BigInt(32);function zd(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t?{h:Number(e&Pd),l:Number(e>>kd&Pd)}:{h:0|Number(e>>kd&Pd),l:0|Number(e&Pd)}}const Md=(e,t,n)=>e>>>n|t<<32-n,Nd=(e,t,n)=>e<<32-n|t>>>n,Od=(e,t,n)=>e>>>n-32|t<<64-n;function Td(e,t,n,r){const i=(t>>>0)+(r>>>0);return{h:e+n+(i/2**32|0)|0,l:0|i}}const jd=(e,t,n)=>(e>>>0)+(t>>>0)+(n>>>0),Ld=(e,t,n,r)=>t+n+r+(e/2**32|0)|0,Ed=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),Hd=new Uint32Array(32);function Xd(e,t,n,r,i,o){const a=i[o],s=i[o+1];let l=Hd[2*e],u=Hd[2*e+1],c=Hd[2*t],f=Hd[2*t+1],d=Hd[2*n],h=Hd[2*n+1],p=Hd[2*r],m=Hd[2*r+1],y=jd(l,c,a);var v,b;u=Ld(y,u,f,s),l=0|y,({Dh:m,Dl:p}={Dh:m^u,Dl:p^l}),({Dh:m,Dl:p}={Dh:(b=p,b),Dl:(v=m,v)}),({h:h,l:d}=Td(h,d,m,p)),({Bh:f,Bl:c}={Bh:f^h,Bl:c^d}),({Bh:f,Bl:c}={Bh:Md(f,c,24),Bl:Nd(f,c,24)}),Hd[2*e]=l,Hd[2*e+1]=u,Hd[2*t]=c,Hd[2*t+1]=f,Hd[2*n]=d,Hd[2*n+1]=h,Hd[2*r]=p,Hd[2*r+1]=m}function Ad(e,t,n,r,i,o){const a=i[o],s=i[o+1];let l=Hd[2*e],u=Hd[2*e+1],c=Hd[2*t],f=Hd[2*t+1],d=Hd[2*n],h=Hd[2*n+1],p=Hd[2*r],m=Hd[2*r+1],y=jd(l,c,a);var v,b,g;u=Ld(y,u,f,s),l=0|y,({Dh:m,Dl:p}={Dh:m^u,Dl:p^l}),({Dh:m,Dl:p}={Dh:Md(m,p,16),Dl:Nd(m,p,16)}),({h:h,l:d}=Td(h,d,m,p)),({Bh:f,Bl:c}={Bh:f^h,Bl:c^d}),({Bh:f,Bl:c}={Bh:(v=f,b=c,g=63,v<<64-g|b>>>g-32),Bl:Od(f,c,63)}),Hd[2*e]=l,Hd[2*e+1]=u,Hd[2*t]=c,Hd[2*t+1]=f,Hd[2*n]=d,Hd[2*n+1]=h,Hd[2*r]=p,Hd[2*r+1]=m}class Sd extends xd{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|Ed[0],this.v0h=0|Ed[1],this.v1l=0|Ed[2],this.v1h=0|Ed[3],this.v2l=0|Ed[4],this.v2h=0|Ed[5],this.v3l=0|Ed[6],this.v3h=0|Ed[7],this.v4l=0|Ed[8],this.v4h=0|Ed[9],this.v5l=0|Ed[10],this.v5h=0|Ed[11],this.v6l=0|Ed[12],this.v6h=0|Ed[13],this.v7l=0|Ed[14],this.v7h=0|Ed[15];const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|65536|1<<24,e.salt){const t=md(yd(e.salt));this.v4l^=t[0],this.v4h^=t[1],this.v5l^=t[2],this.v5h^=t[3]}if(e.personalization){const t=md(yd(e.personalization));this.v6l^=t[0],this.v6h^=t[1],this.v7l^=t[2],this.v7h^=t[3]}if(e.key){const t=new Uint8Array(this.blockLen);t.set(yd(e.key)),this.update(t)}}get(){let{v0l:e,v0h:t,v1l:n,v1h:r,v2l:i,v2h:o,v3l:a,v3h:s,v4l:l,v4h:u,v5l:c,v5h:f,v6l:d,v6h:h,v7l:p,v7h:m}=this;return[e,t,n,r,i,o,a,s,l,u,c,f,d,h,p,m]}set(e,t,n,r,i,o,a,s,l,u,c,f,d,h,p,m){this.v0l=0|e,this.v0h=0|t,this.v1l=0|n,this.v1h=0|r,this.v2l=0|i,this.v2h=0|o,this.v3l=0|a,this.v3h=0|s,this.v4l=0|l,this.v4h=0|u,this.v5l=0|c,this.v5h=0|f,this.v6l=0|d,this.v6h=0|h,this.v7l=0|p,this.v7h=0|m}compress(e,t,n){this.get().forEach(((e,t)=>Hd[t]=e)),Hd.set(Ed,16);let{h:r,l:i}=zd(BigInt(this.length));Hd[24]=Ed[8]^i,Hd[25]=Ed[9]^r,n&&(Hd[28]=~Hd[28],Hd[29]=~Hd[29]);let o=0;const a=wd;for(let s=0;s<12;s++)Xd(0,4,8,12,e,t+2*a[o++]),Ad(0,4,8,12,e,t+2*a[o++]),Xd(1,5,9,13,e,t+2*a[o++]),Ad(1,5,9,13,e,t+2*a[o++]),Xd(2,6,10,14,e,t+2*a[o++]),Ad(2,6,10,14,e,t+2*a[o++]),Xd(3,7,11,15,e,t+2*a[o++]),Ad(3,7,11,15,e,t+2*a[o++]),Xd(0,5,10,15,e,t+2*a[o++]),Ad(0,5,10,15,e,t+2*a[o++]),Xd(1,6,11,12,e,t+2*a[o++]),Ad(1,6,11,12,e,t+2*a[o++]),Xd(2,7,8,13,e,t+2*a[o++]),Ad(2,7,8,13,e,t+2*a[o++]),Xd(3,4,9,14,e,t+2*a[o++]),Ad(3,4,9,14,e,t+2*a[o++]);this.v0l^=Hd[0]^Hd[16],this.v0h^=Hd[1]^Hd[17],this.v1l^=Hd[2]^Hd[18],this.v1h^=Hd[3]^Hd[19],this.v2l^=Hd[4]^Hd[20],this.v2h^=Hd[5]^Hd[21],this.v3l^=Hd[6]^Hd[22],this.v3h^=Hd[7]^Hd[23],this.v4l^=Hd[8]^Hd[24],this.v4h^=Hd[9]^Hd[25],this.v5l^=Hd[10]^Hd[26],this.v5h^=Hd[11]^Hd[27],this.v6l^=Hd[12]^Hd[28],this.v6h^=Hd[13]^Hd[29],this.v7l^=Hd[14]^Hd[30],this.v7h^=Hd[15]^Hd[31],Hd.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const Zd=gd((e=>new Sd(e)));function Dd(e){const t=e.length%2,n=e.length-t,r=new DataView(e.buffer,e.byteOffset);let i="";for(let o=0;o<n;o+=2)i+=Hc[r.getUint16(o)];return t&&(i+=Ec[r.getUint8(n)]),i}function Rd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Math.ceil(t/8);return`${n?"0x":""}${e&&e.length?r>0&&e.length>r?`${Dd(e.subarray(0,r/2))}\u2026${Dd(e.subarray(e.length-r/2))}`:Dd(e):""}`}function Ud(e){return function(){return Rd(e(...arguments))}}function Fd(e,t){return(n,r)=>t(n,e,r)}function Wd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const i=Math.ceil(t/8),o=ud(e);return!sd||!r&&rd()?ed(o,ud(n),i):Zd(o,{dkLen:i,key:n||void 0})}Ud(Wd);const Cd=Kc("SS58PRE");function qd(e){const t=64&e[0]?2:1,n=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,r=[34+t,35+t].includes(e.length),i=e.length-(r?2:1),o=(a=e.subarray(0,i),Wd(pd(Cd,a),512));var a;return[0===(128&e[0])&&![46,47].includes(e[0])&&(r?e[e.length-2]===o[0]&&e[e.length-1]===o[1]:e[e.length-1]===o[0]),i,t,n]}const Id={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},Bd={bifrost:788,centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,sora:617,statemine:434},Yd={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},Vd={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],picasso:["0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},Gd=[0,2,42],Kd=["testnet"];const Jd=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:19,network:"geek",displayName:"GeekCash",symbols:["GEEK"],decimals:[12],standardAccount:"*25519",website:"https://geekcash.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"dock-testnet",displayName:"Dock Testnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:22,network:"dock-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[18],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Chain",symbols:["KILT"],decimals:[18],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK"],decimals:[10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["TRAC"],decimals:[18],standardAccount:"secp256k1",website:"https://origintrail.io"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[15],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"Sr25519",website:"https://efinity.io/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1337,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"Sr25519",website:"https://ajuna.io"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"}].map((function(e){const t=e.network||"",n=t.replace(/_/g,"-").split("-"),r=e;return r.slip44=Bd[t],r.hasLedgerSupport=!!r.slip44,r.genesisHash=Vd[t]||[],r.icon=Id[t]||"substrate",r.isTestnet=!!Yd[t]||Kd.includes(n[n.length-1]),r.isIgnored=r.isTestnet||!(e.standardAccount&&e.decimals&&e.decimals.length&&e.symbols&&e.symbols.length)&&42!==e.prefix,r})).filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,t){const n=Gd.includes(e.prefix);return n===Gd.includes(t.prefix)?n?0:e.displayName.localeCompare(t.displayName):n?-1:1}));Jd.filter((function(e){let{genesisHash:t,prefix:n}=e;return!!t.length||42===n}));const Qd={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:Jd.map((function(e){let{prefix:t}=e;return t})),prefix:42};function _d(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(qc(e,"Invalid empty address passed"),od(e)||Dc(e))return ud(e);try{const r=dd(e);qc(Qd.allowedEncodedLengths.includes(r.length),"Invalid decoded address length");const[i,o,a,s]=qd(r);return qc(t||i,"Invalid decoded address checksum"),qc([-1,s].includes(n),(()=>`Expected ss58Format ${n}, received ${s}`)),r.slice(a,o)}catch(r){throw new Error(`Decoding ${e}: ${r.message}`)}}function $d(e,t){const n=ud(e),r=ud(t);if(n.length===r.length){const e=new DataView(n.buffer,n.byteOffset),t=new DataView(r.buffer,r.byteOffset),i=n.length%4,o=n.length-i;for(let n=0;n<o;n+=4)if(e.getUint32(n)!==t.getUint32(n))return!1;for(let a=o;a<n.length;a++)if(n[a]!==r[a])return!1;return!0}return!1}const eh=ud("\x19Ethereum Signed Message:\n"),th=ud("<Bytes>"),nh=ud("</Bytes>"),rh=th.length+nh.length;function ih(e,t){return e.length>=rh&&$d(e.subarray(0,th.length),th)&&$d(e.slice(-nh.length),nh)||t&&e.length>=eh.length&&$d(e.subarray(0,eh.length),eh)}var oh=n(820);function ah(e,t,n,r){const i=ud(e),o=ud(n),a=ud(t);return qc(32===o.length,(()=>`Invalid publicKey, received ${o.length}, expected 32`)),qc(64===a.length,(()=>`Invalid signature, received ${a.length} bytes, expected 64`)),!r&&rd()?Kf(a,i,o):oh.sign.detached.verify(i,a,o)}const[sh,lh,uh]=[[],[],[]],ch=BigInt(0),fh=BigInt(1),dh=BigInt(2),hh=BigInt(7),ph=BigInt(256),mh=BigInt(113);for(let n=0,Rz=fh,Uz=1,Fz=0;n<24;n++){[Uz,Fz]=[Fz,(2*Uz+3*Fz)%5],sh.push(2*(5*Fz+Uz)),lh.push((n+1)*(n+2)/2%64);let e=ch;for(let t=0;t<7;t++)Rz=(Rz<<fh^(Rz>>hh)*mh)%ph,Rz&dh&&(e^=fh<<(fh<<BigInt(t))-fh);uh.push(e)}const[yh,vh]=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new Uint32Array(e.length),r=new Uint32Array(e.length);for(let i=0;i<e.length;i++){const{h:o,l:a}=zd(e[i],t);[n[i],r[i]]=[o,a]}return[n,r]}(uh,!0),bh=(e,t,n)=>n>32?((e,t,n)=>t<<n-32|e>>>64-n)(e,t,n):((e,t,n)=>e<<n|t>>>32-n)(e,t,n),gh=(e,t,n)=>n>32?((e,t,n)=>e<<n-32|t>>>64-n)(e,t,n):((e,t,n)=>t<<n|e>>>32-n)(e,t,n);class wh extends bd{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:24;if(super(),this.blockLen=e,this.suffix=t,this.outputLen=n,this.enableXOF=r,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,vd(n),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=md(this.state)}keccak(){!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:24;const n=new Uint32Array(10);for(let r=24-t;r<24;r++){for(let r=0;r<10;r++)n[r]=e[r]^e[r+10]^e[r+20]^e[r+30]^e[r+40];for(let r=0;r<10;r+=2){const t=(r+8)%10,i=(r+2)%10,o=n[i],a=n[i+1],s=bh(o,a,1)^n[t],l=gh(o,a,1)^n[t+1];for(let n=0;n<50;n+=10)e[r+n]^=s,e[r+n+1]^=l}let t=e[2],i=e[3];for(let n=0;n<24;n++){const r=lh[n],o=bh(t,i,r),a=gh(t,i,r),s=sh[n];t=e[s],i=e[s+1],e[s]=o,e[s+1]=a}for(let r=0;r<50;r+=10){for(let t=0;t<10;t++)n[t]=e[r+t];for(let t=0;t<10;t++)e[r+t]^=~n[(t+2)%10]&n[(t+4)%10]}e[0]^=yh[r],e[1]^=vh[r]}n.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){if(this.destroyed)throw new Error("instance is destroyed");if(this.finished)throw new Error("digest() was already called");const{blockLen:t,state:n}=this,r=(e=yd(e)).length;for(let i=0;i<r;){const o=Math.min(t-this.pos,r-i);for(let t=0;t<o;t++)n[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:n,blockLen:r}=this;e[n]^=t,0!==(128&t)&&n===r-1&&this.keccak(),e[r-1]^=128,this.keccak()}writeInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array))throw new Error("Keccak: invalid output buffer");this.finish();for(let t=0,n=e.length;t<n;){this.posOut>=this.blockLen&&this.keccak();const r=Math.min(this.blockLen-this.posOut,n-t);e.set(this.state.subarray(this.posOut,this.posOut+r),t),this.posOut+=r,t+=r}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return vd(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(e.length<this.outputLen)throw new Error("Keccak: invalid output buffer");if(this.finished)throw new Error("digest() was already called");return this.finish(),this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:n,outputLen:r,rounds:i,enableXOF:o}=this;return e||(e=new wh(t,n,r,o,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=n,e.outputLen=r,e.enableXOF=o,e.destroyed=this.destroyed,e}}const xh=(e,t,n)=>function(e){const t=t=>e().update(yd(t)).digest(),n=e();return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.create=()=>e(),t}((()=>new wh(t,e,n))),Ph=(xh(6,144,28),xh(6,136,32),xh(6,104,48),xh(6,72,64),xh(1,144,28),xh(1,136,32)),kh=(xh(1,104,48),xh(1,72,64)),zh=(e,t,n)=>gd((function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new wh(t,e,void 0!==r.dkLen?r.dkLen:n,!0)})),Mh=(zh(31,168,16),zh(31,136,32),Nh={256:td,512:nd},Oh={256:Ph,512:kh},function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,n=arguments.length>2?arguments[2]:void 0;const r=ud(e);return!sd||!n&&rd()?Nh[t](r):Oh[t](r)});var Nh,Oh;Fd(256,Mh),Fd(512,Mh),Ud(Mh);function Th(e,t,n){return"keccak"===e?Mh(t,void 0,n):Wd(t,void 0,void 0,n)}var jh=n(817);const Lh=BigInt(0),Eh=BigInt(1),Hh=BigInt(2),Xh=BigInt(3),Ah=BigInt(8),Sh=Hh**BigInt(256),Zh={a:Lh,b:BigInt(7),P:Sh-Hh**BigInt(32)-BigInt(977),n:Sh-BigInt("432420386565659656852420866394968145599"),h:Eh,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};function Dh(e){const{a:t,b:n}=Zh,r=tp(e*e),i=tp(r*e);return tp(i+t*e+n)}const Rh=Zh.a===Lh;class Uh{constructor(e,t,n){this.x=e,this.y=t,this.z=n}static fromAffine(e){if(!(e instanceof Wh))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new Uh(e.x,e.y,Eh)}static toAffineBatch(e){const t=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Zh.P;const n=e.length,r=new Array(n);let i=Eh;for(let o=0;o<n;o++)e[o]!==Lh&&(r[o]=i,i=tp(i*e[o],t));i=rp(i,t);for(let o=n-1;o>=0;o--){if(e[o]===Lh)continue;const n=tp(i*e[o],t);e[o]=tp(i*r[o],t),i=n}return e}(e.map((e=>e.z)));return e.map(((e,n)=>e.toAffine(t[n])))}static normalizeZ(e){return Uh.toAffineBatch(e).map(Uh.fromAffine)}equals(e){const t=this,n=e,r=tp(t.z*t.z),i=tp(t.z*r),o=tp(n.z*n.z),a=tp(n.z*o);return tp(t.x*o)===tp(r*n.x)&&tp(t.y*a)===tp(i*n.y)}negate(){return new Uh(this.x,tp(-this.y),this.z)}double(){const e=this.x,t=this.y,n=this.z,r=tp(e**Hh),i=tp(t**Hh),o=tp(i**Hh),a=tp(Hh*(tp(tp((e+i)**Hh))-r-o)),s=tp(Xh*r),l=tp(s**Hh),u=tp(l-Hh*a),c=tp(s*(a-u)-Ah*o),f=tp(Hh*t*n);return new Uh(u,c,f)}add(e){if(!(e instanceof Uh))throw new TypeError("JacobianPoint#add: expected JacobianPoint");const t=this.x,n=this.y,r=this.z,i=e.x,o=e.y,a=e.z;if(i===Lh||o===Lh)return this;if(t===Lh||n===Lh)return e;const s=tp(r**Hh),l=tp(a**Hh),u=tp(t*l),c=tp(i*s),f=tp(n*a*l),d=tp(tp(o*r)*s),h=tp(c-u),p=tp(d-f);if(h===Lh)return p===Lh?this.double():Uh.ZERO;const m=tp(h**Hh),y=tp(h*m),v=tp(u*m),b=tp(p**Hh-y-Hh*v),g=tp(p*(v-b)-f*y),w=tp(r*a*h);return new Uh(b,g,w)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let t=ep(e);if(!Rh){let e=Uh.ZERO,n=this;for(;t>Lh;)t&Eh&&(e=e.add(n)),n=n.double(),t>>=Eh;return e}let{k1neg:n,k1:r,k2neg:i,k2:o}=ap(t),a=Uh.ZERO,s=Uh.ZERO,l=this;for(;r>Lh||o>Lh;)r&Eh&&(a=a.add(l)),o&Eh&&(s=s.add(l)),l=l.double(),r>>=Eh,o>>=Eh;return n&&(a=a.negate()),i&&(s=s.negate()),s=new Uh(tp(s.x*Zh.beta),s.y,s.z),a.add(s)}precomputeWindow(e){const t=Rh?128/e+1:256/e+1,n=[];let r=this,i=r;for(let o=0;o<t;o++){i=r,n.push(i);for(let t=1;t<2**(e-1);t++)i=i.add(r),n.push(i);r=i.double()}return n}wNAF(e,t){!t&&this.equals(Uh.BASE)&&(t=Wh.BASE);const n=t&&t._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let r=t&&Fh.get(t);r||(r=this.precomputeWindow(n),t&&1!==n&&(r=Uh.normalizeZ(r),Fh.set(t,r)));let i=Uh.ZERO,o=Uh.ZERO;const a=Rh?128/n+1:256/n+1,s=2**(n-1),l=BigInt(2**n-1),u=2**n,c=BigInt(n);for(let f=0;f<a;f++){const t=f*s;let n=Number(e&l);if(e>>=c,n>s&&(n-=u,e+=Eh),0===n){let e=r[t];f%2&&(e=e.negate()),o=o.add(e)}else{let e=r[t+Math.abs(n)-1];n<0&&(e=e.negate()),i=i.add(e)}}return{p:i,f:o}}multiply(e,t){let n,r,i=ep(e);if(Rh){let{k1neg:e,k1:o,k2neg:a,k2:s}=ap(i),{p:l,f:u}=this.wNAF(o,t),{p:c,f:f}=this.wNAF(s,t);e&&(l=l.negate()),a&&(c=c.negate()),c=new Uh(tp(c.x*Zh.beta),c.y,c.z),n=l.add(c),r=u.add(f)}else{let{p:e,f:o}=this.wNAF(i,t);n=e,r=o}return Uh.normalizeZ([n,r])[0]}toAffine(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:rp(this.z);const t=e**Hh,n=tp(this.x*t),r=tp(this.y*t*e);return new Wh(n,r)}}Uh.BASE=new Uh(Zh.Gx,Zh.Gy,Eh),Uh.ZERO=new Uh(Lh,Eh,Lh);const Fh=new WeakMap;class Wh{constructor(e,t){this.x=e,this.y=t}_setWindowSize(e){this._WINDOW_SIZE=e,Fh.delete(this)}static fromCompressedHex(e){const t=32===e.length,n=_h(t?e:e.slice(1));if(!up(n))throw new Error("Point is not on curve");let r=function(e){const{P:t}=Zh,n=BigInt(6),r=BigInt(11),i=BigInt(22),o=BigInt(23),a=BigInt(44),s=BigInt(88),l=e*e*e%t,u=l*l*e%t,c=np(u,Xh)*u%t,f=np(c,Xh)*u%t,d=np(f,Hh)*l%t,h=np(d,r)*d%t,p=np(h,i)*h%t,m=np(p,a)*p%t,y=np(m,s)*m%t,v=np(y,a)*p%t,b=np(v,Xh)*u%t,g=np(b,o)*h%t,w=np(g,n)*l%t;return np(w,Hh)}(Dh(n));const i=(r&Eh)===Eh;if(t)i&&(r=tp(-r));else{1===(1&e[0])!==i&&(r=tp(-r))}const o=new Wh(n,r);return o.assertValidity(),o}static fromUncompressedHex(e){const t=_h(e.slice(1,33)),n=_h(e.slice(33)),r=new Wh(t,n);return r.assertValidity(),r}static fromHex(e){const t=$h(e),n=t[0];if(32===t.length||33===t.length&&(2===n||3===n))return this.fromCompressedHex(t);if(65===t.length&&4===n)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${t.length}`)}static fromPrivateKey(e){return Wh.BASE.multiply(cp(e))}static fromSignature(e,t,n){const r=sp(e=$h(e)),{r:i,s:o}=fp(t);if(0!==n&&1!==n)throw new Error("Cannot recover signature: invalid recovery bit");if(r===Lh)throw new Error("Cannot recover signature: msgHash cannot be 0");const a=2+(1&n),s=Wh.fromHex(`0${a}${Gh(i)}`),l=Uh.fromAffine(s).multiplyUnsafe(o),u=Uh.BASE.multiply(r),c=rp(i,Zh.n),f=l.subtract(u).multiplyUnsafe(c).toAffine();return f.assertValidity(),f}toRawBytes(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Qh(this.toHex(e))}toHex(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const t=Gh(this.x);return e?`${this.y&Eh?"03":"02"}${t}`:`04${t}${Gh(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:t,y:n}=this;if(!up(t)||!up(n))throw new Error(e);const r=tp(n*n);if(tp(r-Dh(t))!==Lh)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new Wh(this.x,tp(-this.y))}double(){return Uh.fromAffine(this).double().toAffine()}add(e){return Uh.fromAffine(this).add(Uh.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return Uh.fromAffine(this).multiply(e,this).toAffine()}}function Ch(e){return Number.parseInt(e[0],16)>=8?"00"+e:e}function qh(e){if(e.length<2||2!==e[0])throw new Error(`Invalid signature integer tag: ${Vh(e)}`);const t=e[1],n=e.subarray(2,t+2);if(!t||n.length!==t)throw new Error("Invalid signature integer: wrong length");if(0===n[0]&&n[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:_h(n),left:e.subarray(t+2)}}Wh.BASE=new Wh(Zh.Gx,Zh.Gy),Wh.ZERO=new Wh(Lh,Lh);class Ih{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromCompact(e){const t=Bh(e),n="Signature.fromCompact";if("string"!==typeof e&&!t)throw new TypeError(`${n}: Expected string or Uint8Array`);const r=t?Vh(e):e;if(128!==r.length)throw new Error(`${n}: Expected 64-byte hex`);return new Ih(Jh(r.slice(0,64)),Jh(r.slice(64,128)))}static fromDER(e){const t=Bh(e);if("string"!==typeof e&&!t)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:n,s:r}=function(e){if(e.length<2||48!=e[0])throw new Error(`Invalid signature tag: ${Vh(e)}`);if(e[1]!==e.length-2)throw new Error("Invalid signature: incorrect length");const{data:t,left:n}=qh(e.subarray(2)),{data:r,left:i}=qh(n);if(i.length)throw new Error(`Invalid signature: left bytes after parsing: ${Vh(i)}`);return{r:t,s:r}}(t?e:Qh(e));return new Ih(n,r)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:t}=this;if(!lp(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!lp(t))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=Zh.n>>Eh;return this.s>e}normalizeS(){return this.hasHighS()?new Ih(this.r,Zh.n-this.s):this}toDERRawBytes(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Qh(this.toDERHex(e))}toDERHex(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const t=Ch(Kh(this.s));if(e)return t;const n=Ch(Kh(this.r)),r=Kh(n.length/2),i=Kh(t.length/2);return`30${Kh(n.length/2+t.length/2+4)}02${r}${n}02${i}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return Qh(this.toCompactHex())}toCompactHex(){return Gh(this.r)+Gh(this.s)}}function Bh(e){return e instanceof Uint8Array}const Yh=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function Vh(e){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");let t="";for(let n=0;n<e.length;n++)t+=Yh[e[n]];return t}function Gh(e){if(e>Sh)throw new Error("Expected number < 2^256");return e.toString(16).padStart(64,"0")}function Kh(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function Jh(e){if("string"!==typeof e)throw new TypeError("hexToNumber: expected string, got "+typeof e);return BigInt(`0x${e}`)}function Qh(e){if("string"!==typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+e.length);const t=new Uint8Array(e.length/2);for(let n=0;n<t.length;n++){const r=2*n,i=e.slice(r,r+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");t[n]=o}return t}function _h(e){return Jh(Vh(e))}function $h(e){return e instanceof Uint8Array?Uint8Array.from(e):Qh(e)}function ep(e){if("number"===typeof e&&Number.isSafeInteger(e)&&e>0)return BigInt(e);if("bigint"===typeof e&&lp(e))return e;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function tp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Zh.P;const n=e%t;return n>=0?n:t+n}function np(e,t){const{P:n}=Zh;let r=e;for(;t-- >Lh;)r*=r,r%=n;return r}function rp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Zh.P;if(e===Lh||t<=Lh)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let n=tp(e,t),r=t,i=Lh,o=Eh,a=Eh,s=Lh;for(;n!==Lh;){const e=r/n,t=r%n,l=i-a*e,u=o-s*e;r=n,n=t,i=a,o=s,a=l,s=u}const l=r;if(l!==Eh)throw new Error("invert: does not exist");return tp(i,t)}const ip=(e,t)=>(e+t/Hh)/t,op=Hh**BigInt(128);function ap(e){const{n:t}=Zh,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-Eh*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=n,a=ip(o*e,t),s=ip(-r*e,t);let l=tp(e-a*n-s*i,t),u=tp(-a*r-s*o,t);const c=l>op,f=u>op;if(c&&(l=t-l),f&&(u=t-u),l>op||u>op)throw new Error("splitScalarEndo: Endomorphism failed");return{k1neg:c,k1:l,k2neg:f,k2:u}}function sp(e){const{n:t}=Zh,n=8*e.length-256;let r=_h(e);return n>0&&(r>>=BigInt(n)),r>=t&&(r-=t),r}function lp(e){return Lh<e&&e<Zh.n}function up(e){return Lh<e&&e<Zh.P}function cp(e){let t;if("bigint"===typeof e)t=e;else if("number"===typeof e&&Number.isSafeInteger(e)&&e>0)t=BigInt(e);else if("string"===typeof e){if(64!==e.length)throw new Error("Expected 32 bytes of private key");t=Jh(e)}else{if(!Bh(e))throw new TypeError("Expected valid private key");if(32!==e.length)throw new Error("Expected 32 bytes of private key");t=_h(e)}if(!lp(t))throw new Error("Expected private key: 0 < key < n");return t}function fp(e){if(e instanceof Ih)return e.assertValidity(),e;try{return Ih.fromDER(e)}catch(t){return Ih.fromCompact(e)}}function dp(e,t,n){return Wh.fromSignature(e,t,n).toRawBytes()}Wh.BASE._setWindowSize(8);"object"===typeof self&&"crypto"in self&&self.crypto;function hp(e,t){return 33===e.length?e:(qc(65===e.length,"Invalid publicKey provided"),!sd||!t&&rd()?Jf(e):Wh.fromHex(e).toRawBytes(!0))}function pp(e){return"number"===typeof e}function mp(e){return Object.keys(e)}function yp(e){for(let t=0;t<(arguments.length<=1?0:arguments.length-1);t++){const n=t+1<1||arguments.length<=t+1?void 0:arguments[t+1];if(n){const t=mp(n);for(let r=0;r<t.length;r++){const i=t[r];e[i]=n[i]}}}return e}var vp=n(86);function bp(e){return"boolean"===typeof e}const gp={isLe:!1,isNegative:!1};function wp(e){return!!e&&"object"===typeof e}function xp(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return e=>(wp(e)||Cc(e))&&t.every((t=>Cc(e[t])))}const Pp=xp("toBigInt"),kp=xp("toBn");function zp(e){return vp.isBN(e)?e:e?Dc(e)?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:gp;if(!e||"0x"===e)return new vp(0);const{isLe:n,isNegative:r}=yp({isLe:!1,isNegative:!1},bp(t)?{isLe:t}:t),i=Rc(e),o=new vp(i,16,n?"le":"be");return r?o.fromTwos(4*i.length):o}(e.toString()):function(e){return"bigint"===typeof e}(e)?new vp(e.toString()):kp(e)?e.toBn():Pp(e)?new vp(e.toBigInt().toString()):new vp(e):new vp(0)}const Mp={bitLength:-1,isLe:!0,isNegative:!1};function Np(e,t){return-1===t.bitLength?new Uint8Array:new Uint8Array(e)}function Op(e,t,n){let{isLe:r,isNegative:i}=n;const o=new Uint8Array(t),a=i?e.toTwos(8*t):e;return o.set(a.toArray(r?"le":"be",t),0),o}function Tp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Mp,n=arguments.length>2?arguments[2]:void 0;const r=yp({bitLength:-1,isLe:!0,isNegative:!1},pp(t)?{bitLength:t,isLe:n}:t),i=zp(e),o=-1===r.bitLength?Math.ceil(i.bitLength()/8):Math.ceil((r.bitLength||0)/8);return e?Op(i,o,r):Np(o,r)}const jp={bitLength:256,isLe:!1};function Lp(e,t){if(65===e.length)return e.subarray(1);if(qc(33===e.length,"Invalid publicKey provided"),!sd||!t&&rd())return Qf(e).subarray(1);const{x:n,y:r}=Wh.fromHex(e);return pd(Tp(n,jp),Tp(r,jp))}function Ep(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"blake2",i=arguments.length>4?arguments[4]:void 0;const o=ud(t).subarray(0,64),a=ud(e),s=!sd||!i&&rd()?_f(a,o,n):dp(a,Ih.fromCompact(o).toRawBytes(),n);return qc(s,"Unable to recover publicKey from signature"),"keccak"===r?Lp(s,i):hp(s,i)}function Hp(e,t,n){const r=ud(n),i=ud(t);return qc(32===r.length,(()=>`Invalid publicKey, received ${r.length} bytes, expected 32`)),qc(64===i.length,(()=>`Invalid signature, received ${i.length} bytes, expected 64`)),$f(i,ud(e),r)}const Xp=e=>(t,n,r)=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"blake2",i=arguments.length>4?arguments[4]:void 0;const o=ud(t);qc(65===o.length,`Expected signature with 65 bytes, ${o.length} found instead`);const a=Ep(Th(r,e),o,o[64],r,i),s=Th(r,a,i),l=ud(n);return $d(a,l)||("keccak"===r?$d(s.slice(-20),l.slice(-20)):$d(s,l))}(t,n,r,e),Ap=[["ecdsa",Xp("blake2")],["ethereum",Xp("keccak")]],Sp=[["ed25519",ah],["sr25519",Hp],...Ap],Zp=["ed25519","sr25519","ecdsa"];function Dp(e,t){let{message:n,publicKey:r,signature:i}=t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Sp;return e.isValid=o.some((t=>{let[o,a]=t;try{if(a(n,i,r))return e.crypto=o,!0}catch(s){}return!1})),e}function Rp(e,t){let{message:n,publicKey:r,signature:i}=t;qc([0,1,2].includes(i[0]),(()=>`Unknown crypto type, expected signature prefix [0..2], found ${i[0]}`));const o=Zp[i[0]]||"none";e.crypto=o;try{e.isValid={ecdsa:()=>Dp(e,{message:n,publicKey:r,signature:i.subarray(1)},Ap).isValid,ed25519:()=>ah(n,i.subarray(1),r),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>Hp(n,i.subarray(1),r)}[o]()}catch(a){}return e}function Up(e,t,n){const r=ud(t);qc([64,65,66].includes(r.length),(()=>`Invalid signature length, expected [64..66] bytes, found ${r.length}`));const i=_d(n),o={message:ud(e),publicKey:i,signature:r},a={crypto:"none",isValid:!1,isWrapped:ih(o.message,!0),publicKey:i},s=ih(o.message,!1),l=function(e){return[0,1,2].includes(e[0])&&[65,66].includes(e.length)?Rp:Dp}(r);return l(a,o),"none"!==a.crypto||a.isWrapped&&!s?a:(o.message=s?function(e){const t=ud(e);return ih(t,!1)?t.subarray(th.length,t.length-nh.length):t}(o.message):function(e){const t=ud(e);return ih(t,!0)?t:pd(th,t,nh)}(o.message),l(a,o))}var Fp=function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{l(r.next(e))}catch(Dz){o(Dz)}}function s(e){try{l(r.throw(e))}catch(Dz){o(Dz)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((r=r.apply(e,t||[])).next())}))};class Wp{verify(e,t,n,r){return Fp(this,void 0,void 0,(function*(){yield id();let i=_d(r),{isValid:o,crypto:a}=Up(t,n,i);if(!o)return!1;if(a!=e)throw new Error(`signing algorithm does not match. expected alg:${e} != signed alg:${a}`);return!0}))}}function Cp(e){return"function"===typeof e}function qp(e){return null===e}function Ip(e){return"undefined"===typeof e}function Bp(e,t){if(!e)throw new Error(Cp(t)?t():t)}var Yp=n(355);const Vp=Yp.bytes,Gp=Yp.sizeUncompressed,Kp=Uint8Array,Jp=Uint16Array,Qp=Uint32Array,_p=new Kp([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),$p=new Kp([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),em=new Kp([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),tm=(e,t)=>{const n=new Jp(31);for(let i=0;i<31;++i)n[i]=t+=1<<e[i-1];const r=new Qp(n[30]);for(let i=1;i<30;++i)for(let e=n[i];e<n[i+1];++e)r[e]=e-n[i]<<5|i;return[n,r]},[nm,rm]=tm($p,2);nm[28]=258,rm[258]=28;const[im]=tm(em,0),om=new Jp(32768);for(let n=0;n<32768;++n){let e=(43690&n)>>>1|(21845&n)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,om[n]=((65280&e)>>>8|(255&e)<<8)>>>1}const am=(e,t,n)=>{const r=e.length;let i=0;const o=new Jp(t);for(;i<r;++i)++o[e[i]-1];const a=new Jp(t);for(i=0;i<t;++i)a[i]=a[i-1]+o[i-1]<<1;let s;if(n){s=new Jp(1<<t);const n=15-t;for(i=0;i<r;++i)if(e[i]){const r=i<<4|e[i],o=t-e[i];let l=a[e[i]-1]++<<o;for(const e=l|(1<<o)-1;l<=e;++l)s[om[l]>>>n]=r}}else for(s=new Jp(r),i=0;i<r;++i)s[i]=om[a[e[i]-1]++]>>>15-e[i];return s},sm=new Kp(288);for(let n=0;n<144;++n)sm[n]=8;for(let n=144;n<256;++n)sm[n]=9;for(let n=256;n<280;++n)sm[n]=7;for(let n=280;n<288;++n)sm[n]=8;const lm=new Kp(32);for(let n=0;n<32;++n)lm[n]=5;const um=am(sm,9,1),cm=am(lm,5,1),fm=(e,t,n)=>{const r=t>>>3;return(e[r]|e[r+1]<<8)>>>(7&t)&n},dm=(e,t)=>{const n=t>>>3;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>>(7&t)},hm=e=>{let t=e[0];for(let n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t},pm=(e,t,n)=>{const r=!n||n.i;n||(n={});const i=e.length,o=!t||!r;t||(t=new Kp(3*i));const a=e=>{let n=t.length;if(e>n){const r=new Kp(Math.max(n<<1,e));r.set(t),t=r}};let s=n.f||0,l=n.p||0,u=n.b||0,c=n.l,f=n.d,d=n.m,h=n.n;if(s&&!c)return t;const p=i<<3;do{if(!c){n.f=s=fm(e,l,1);const y=fm(e,l+1,3);if(l+=3,!y){const s=((m=l)>>>3)+(7&m&&1)+4,c=e[s-4]|e[s-3]<<8,f=s+c;if(f>i){if(r)throw"unexpected EOF";break}o&&a(u+c),t.set(e.subarray(s,f),u),n.b=u+=c,n.p=l=f<<3;continue}if(1==y)c=um,f=cm,d=9,h=5;else{if(2!=y)throw"invalid block type";{const t=fm(e,l,31)+257,n=fm(e,l+10,15)+4,i=t+fm(e,l+5,31)+1;l+=14;const o=new Kp(i),a=new Kp(19);for(let r=0;r<n;++r)a[_p[r]]=fm(e,l+3*r,7);l+=3*n;const s=hm(a),u=(1<<s)-1;if(!r&&l+i*(s+7)>p)break;const m=am(a,s,1);for(let r=0;r<i;){const t=m[fm(e,l,u)];l+=15&t;const n=t>>>4;if(n<16)o[r++]=n;else{let t=0,i=0;for(16==n?(i=3+fm(e,l,3),l+=2,t=o[r-1]):17==n?(i=3+fm(e,l,7),l+=3):18==n&&(i=11+fm(e,l,127),l+=7);i--;)o[r++]=t}}const y=o.subarray(0,t),v=o.subarray(t);d=hm(y),h=hm(v),c=am(y,d,1),f=am(v,h,1)}}if(l>p)throw"unexpected EOF"}o&&a(u+131072);const y=(1<<d)-1,v=(1<<h)-1,b=d+h+18;for(;r||l+b<p;){const n=c[dm(e,l)&y],r=n>>>4;if(l+=15&n,l>p)throw"unexpected EOF";if(!n)throw"invalid length/literal";if(r<256)t[u++]=r;else{if(256==r){c=void 0;break}{let n=r-254;if(r>264){const t=r-257,i=$p[t];n=fm(e,l,(1<<i)-1)+nm[t],l+=i}const i=f[dm(e,l)&v],s=i>>>4;if(!i)throw"invalid distance";l+=15&i;let c=im[s];if(s>3){const t=em[s];c+=dm(e,l)&(1<<t)-1,l+=t}if(l>p)throw"unexpected EOF";o&&a(u+131072);const d=u+n;for(;u<d;u+=4)t[u]=t[u-c],t[u+1]=t[u+1-c],t[u+2]=t[u+2-c],t[u+3]=t[u+3-c];u=d}}}n.l=c,n.p=l,n.b=u,c&&(s=1,n.m=d,n.d=f,n.n=h)}while(!s);var m;return u==t.length?t:((e,t,n)=>{(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);const r=new(e instanceof Jp?Jp:e instanceof Qp?Qp:Kp)(n-t);return r.set(e.subarray(t,n)),r})(t,0,u)};const mm=function(e,t){return pm(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(e),e.subarray(2,-4)),t)}(function(e){const t=[];let n=0,r=0;for(let i=0;i<e.length&&"="!==e[i];i++)n=n<<6|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[i]),(r+=6)>=8&&t.push(n>>>(r-=8)&255);return Uint8Array.from(t)}(Vp),new Uint8Array(Gp));const ym="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof global?global:"undefined"!==typeof self?self:"undefined"!==typeof window?window:function(e){return e("return this")}(Function);function vm(e,t){return"undefined"===typeof ym[e]?t:ym[e]}const bm=new(vm("TextDecoder",class{constructor(e){}decode(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t}}))("utf-8");function gm(e){return null!==e&&void 0!==e&&e.length?bm.decode(e):""}const wm=new(vm("TextEncoder",class{encode(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}}));function xm(e){return e?wm.encode(e.toString()):new Uint8Array}let Pm=null,km=null,zm=null;function Mm(e){return function(){Bp(Pm,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e(Pm,...n)}}function Nm(){return null!==km&&km.buffer===Pm.memory.buffer||(km=new Int32Array(Pm.memory.buffer)),km}function Om(){return null!==zm&&zm.buffer===Pm.memory.buffer||(zm=new Uint8Array(Pm.memory.buffer)),zm}function Tm(e,t){return Om().subarray(e/1,e/1+t)}function jm(e,t){return gm(Tm(e,t))}function Lm(e){const t=Pm.__wbindgen_malloc(1*e.length);return Om().set(e,t/1),[t,e.length]}function Em(e){return Lm(xm(e))}function Hm(){const e=Nm()[2],t=Nm()[3],n=Tm(e,t).slice();return Pm.__wbindgen_free(e,1*t),n}function Xm(e){return ym.crypto.getRandomValues(e)}const Am={getRandomValues:Xm},Sm={crypto:Am},Zm=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let Dm=Zm.length;function Rm(e){return Zm[e]}function Um(e){const t=Rm(e);return function(e){e<36||(Zm[e]=Dm,Dm=e)}(e),t}function Fm(e){Dm===Zm.length&&Zm.push(Zm.length+1);const t=Dm;return Dm=Zm[t],Zm[t]=e,t}function Wm(e){return void 0===Rm(e)}function Cm(e,t){throw new Error(jm(e,t))}function qm(){return Fm(Sm)}function Im(e,t){throw new Error(`Unable to require ${jm(e,t)}`)}function Bm(e){return Fm(Am)}function Ym(e){return Fm(Am.getRandomValues)}function Vm(e,t,n){Am.getRandomValues(Tm(t,n))}function Gm(e,t,n){throw new Error("randomFillsync is not available")}function Km(e){Um(e)}function Jm(){throw new Error("abort")}const Qm=async function(e,t,n){try{Bp("undefined"!==typeof WebAssembly&&e&&e.length,"WebAssembly is not available in your environment");const t=await WebAssembly.instantiate(e,{wbg:n});Pm=t.instance.exports}catch(r){t?Pm=t(n):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(r),Pm=null)}}(mm,null,t).catch((()=>null)),_m=(Mm(((e,t)=>(e.ext_bip39_generate(8,t),gm(Hm())))),Mm(((e,t)=>(e.ext_bip39_to_entropy(8,...Em(t)),Hm())))),$m=Mm(((e,t,n)=>(e.ext_bip39_to_mini_secret(8,...Em(t),...Em(n)),Hm()))),ey=Mm(((e,t,n)=>(e.ext_bip39_to_seed(8,...Em(t),...Em(n)),Hm()))),ty=Mm(((e,t)=>0!==e.ext_bip39_validate(...Em(t)))),ny=Mm(((e,t)=>(e.ext_ed_from_seed(8,...Lm(t)),Hm()))),ry=Mm(((e,t,n,r)=>(e.ext_ed_sign(8,...Lm(t),...Lm(n),...Lm(r)),Hm()))),iy=Mm(((e,t,n,r)=>0!==e.ext_ed_verify(...Lm(t),...Lm(n),...Lm(r)))),oy=Mm(((e,t)=>(e.ext_secp_from_seed(8,...Lm(t)),Hm()))),ay=Mm(((e,t)=>(e.ext_secp_pub_compress(8,...Lm(t)),Hm()))),sy=Mm(((e,t)=>(e.ext_secp_pub_expand(8,...Lm(t)),Hm()))),ly=Mm(((e,t,n,r)=>(e.ext_secp_recover(8,...Lm(t),...Lm(n),r),Hm()))),uy=Mm(((e,t,n)=>(e.ext_secp_sign(8,...Lm(t),...Lm(n)),Hm()))),cy=Mm(((e,t,n)=>(e.ext_sr_derive_keypair_hard(8,...Lm(t),...Lm(n)),Hm()))),fy=Mm(((e,t,n)=>(e.ext_sr_derive_keypair_soft(8,...Lm(t),...Lm(n)),Hm()))),dy=(Mm(((e,t,n)=>(e.ext_sr_derive_public_soft(8,...Lm(t),...Lm(n)),Hm()))),Mm(((e,t)=>(e.ext_sr_from_seed(8,...Lm(t)),Hm())))),hy=Mm(((e,t,n,r)=>(e.ext_sr_sign(8,...Lm(t),...Lm(n),...Lm(r)),Hm()))),py=Mm(((e,t,n,r)=>0!==e.ext_sr_verify(...Lm(t),...Lm(n),...Lm(r)))),my=(Mm(((e,t,n)=>(e.ext_sr_agree(8,...Lm(t),...Lm(n)),Hm()))),Mm(((e,t,n,r,i)=>(e.ext_vrf_sign(8,...Lm(t),...Lm(n),...Lm(r),...Lm(i)),Hm())))),yy=Mm(((e,t,n,r,i,o)=>0!==e.ext_vrf_verify(...Lm(t),...Lm(n),...Lm(r),...Lm(i),...Lm(o)))),vy=Mm(((e,t,n,r)=>(e.ext_blake2b(8,...Lm(t),...Lm(n),r),Hm()))),by=Mm(((e,t,n)=>(e.ext_hmac_sha256(8,...Lm(t),...Lm(n)),Hm()))),gy=Mm(((e,t,n)=>(e.ext_hmac_sha512(8,...Lm(t),...Lm(n)),Hm()))),wy=Mm(((e,t)=>(e.ext_keccak256(8,...Lm(t)),Hm()))),xy=Mm(((e,t)=>(e.ext_keccak512(8,...Lm(t)),Hm()))),Py=Mm(((e,t,n,r)=>(e.ext_pbkdf2(8,...Lm(t),...Lm(n),r),Hm()))),ky=Mm(((e,t,n,r,i,o)=>(e.ext_scrypt(8,...Lm(t),...Lm(n),r,i,o),Hm()))),zy=Mm(((e,t)=>(e.ext_sha256(8,...Lm(t)),Hm()))),My=Mm(((e,t)=>(e.ext_sha512(8,...Lm(t)),Hm())));Mm(((e,t,n)=>(e.ext_twox(8,...Lm(t),n),Hm())));function Ny(){return!!Pm}function Oy(){return Qm.then((()=>Ny())).then((()=>(Bp(Ny(),"Unable to initialize @polkadot/util-crypto"),!0))).catch((()=>!1))}const Ty=new Array(256),jy=new Array(65536),Ly={},Ey={};for(let n=0;n<256;n++){const e=n.toString(16).padStart(2,"0");Ty[n]=e,Ly[e]=n}for(let n=0;n<256;n++)for(let e=0;e<256;e++){const t=Ty[n]+Ty[e],r=n<<8|e;jy[r]=t,Ey[t]=r}const Hy=/^0x[\da-fA-F]+$/,Xy=/^[\da-fA-F]+$/;function Ay(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2?arguments[2]:void 0;return"string"===typeof e&&("0x"===e||Hy.test(e))&&(-1===t?n||e.length%2===0:e.length===2+Math.ceil(t/4))}function Sy(e){if(!e||"0x"===e)return"";if(Hy.test(e))return e.substr(2);if(Xy.test(e))return e;throw new Error(`Expected hex value to convert, found '${e}'`)}function Zy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;if(!e)return new Uint8Array;const n=Sy(e).toLowerCase(),r=n.length/2,i=Math.ceil(-1===t?r:t/8),o=new Uint8Array(i),a=i>r?i-r:0,s=new DataView(o.buffer,a),l=(i-a)%2,u=i-a-l;for(let c=0;c<u;c+=2)s.setUint16(c,Ey[n.substr(2*c,4)]);return l&&s.setUint8(u,Ly[n.substr(n.length-2,2)]),o}const Dy="function"===typeof ym.BigInt&&"function"===typeof ym.BigInt.asIntN?ym.BigInt:()=>Number.NaN,Ry="function"===typeof Dy&&"function"===typeof Dy.asIntN,Uy="undefined"!==typeof Buffer;function Fy(e){return e instanceof Uint8Array}function Wy(e){return e?Array.isArray(e)||function(e){return Uy&&Buffer.isBuffer(e)}(e)?new Uint8Array(e):Fy(e)?e:Ay(e)?Zy(e):xm(e):new Uint8Array}function Cy(e,t){const n=Wy(e),r=Wy(t);if(n.length===r.length){const e=new DataView(n.buffer,n.byteOffset),t=new DataView(r.buffer,r.byteOffset),i=n.length%4,o=n.length-i;for(let n=0;n<o;n+=4)if(e.getUint32(n)!==t.getUint32(n))return!1;for(let a=o;a<n.length;a++)if(n[a]!==r[a])return!1;return!0}return!1}function qy(){let e=0,t=0;const n=new Array(arguments.length);for(let i=0;i<arguments.length;i++)n[i]=Wy(i<0||arguments.length<=i?void 0:arguments[i]),e+=n[i].length;const r=new Uint8Array(e);for(let i=0;i<n.length;i++)r.set(n[i],t),t+=n[i].length;return r}var Iy=n(704);function By(e,t){let{coder:n,ipfs:r}=e;return(e,i)=>(t(e,i),n.decode(r&&i?e.substr(1):e))}function Yy(e){let{coder:t,ipfs:n}=e;return(e,r)=>{const i=t.encode(Wy(e));return n&&r?`${n}${i}`:i}}function Vy(e){return(t,n)=>{try{return e(t,n)}catch(r){return!1}}}function Gy(e){let{chars:t,ipfs:n,type:r}=e;return(e,i)=>{Bp(e&&"string"===typeof e,(()=>`Expected non-null, non-empty ${r} string input`)),n&&i&&Bp(e[0]===n,(()=>`Expected ipfs-compatible ${r} to start with '${n}'`));for(let n=i?1:0;n<e.length;n++)Bp(t.includes(e[n])||"="===e[n]&&(n===e.length-1||!t.includes(e[n+1])),(()=>`Invalid ${r} character "${e[n]}" (0x${e.charCodeAt(n).toString(16)}) at index ${n}`));return!0}}const Ky={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:Iy.Jq,ipfs:"z",type:"base58"},Jy=Gy(Ky),Qy=By(Ky,Jy),_y=Yy(Ky),$y=(Vy(Jy),"object"===typeof self&&"crypto"in self&&self.crypto,e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4))),ev=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),tv=(e,t)=>e<<32-t|e>>>t;if(!(68===new Uint8Array(new Uint32Array([287454020]).buffer)[0]))throw new Error("Non little-endian hardware is not supported");Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));(()=>{const e="undefined"!==typeof module&&"function"===typeof module.require&&module.require.bind(module);try{if(e){const{setImmediate:t}=e("timers");return()=>new Promise((e=>t(e)))}}catch(Dz){}})();function nv(e){if("string"===typeof e&&(e=function(e){if("string"!==typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}function rv(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function iv(e){if("function"!==typeof e||"function"!==typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");rv(e.outputLen),rv(e.blockLen)}class ov{clone(){return this._cloneInto()}}function av(e,t){if(void 0!==t&&("object"!==typeof t||(n=t,"[object Object]"!==Object.prototype.toString.call(n)||n.constructor!==Object)))throw new TypeError("Options should be object or undefined");var n;return Object.assign(e,t)}function sv(e){const t=t=>e().update(nv(t)).digest(),n=e();return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.create=()=>e(),t}function lv(e){const t=(t,n)=>e(n).update(nv(t)).digest(),n=e({});return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.create=t=>e(t),t}const uv=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class cv extends ov{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0,i=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;if(super(),this.blockLen=e,this.outputLen=t,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,rv(e),rv(t),rv(r),t<0||t>r)throw new Error("Blake2: outputLen bigger than keyLen");if(void 0!==n.key&&(n.key.length<1||n.key.length>r))throw new Error(`Key should be up 1..${r} byte long or undefined`);if(void 0!==n.salt&&n.salt.length!==i)throw new Error(`Salt should be ${i} byte long or undefined`);if(void 0!==n.personalization&&n.personalization.length!==o)throw new Error(`Personalization should be ${o} byte long or undefined`);this.buffer32=$y(this.buffer=new Uint8Array(e))}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{finished:t,blockLen:n,buffer:r,buffer32:i}=this;if(t)throw new Error("digest() was already called");const o=(e=nv(e)).length;for(let a=0;a<o;){this.pos===n&&(this.compress(i,0,!1),this.pos=0);const t=Math.min(n-this.pos,o-a),s=e.byteOffset+a;if(t!==n||s%4||!(a+t<o))r.set(e.subarray(a,a+t),this.pos),this.pos+=t,this.length+=t,a+=t;else{const t=new Uint32Array(e.buffer,s,Math.floor((o-a)/4));for(let e=0;a+n<o;e+=i.length,a+=n)this.length+=n,this.compress(t,e,!1)}}return this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Blake2: Invalid output buffer");const{finished:t,pos:n,buffer32:r}=this;if(t)throw new Error("digest() was already called");this.finished=!0,this.buffer.subarray(n).fill(0),this.compress(r,0,!0);const i=$y(e);this.get().forEach(((e,t)=>i[t]=e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){const{buffer:t,length:n,finished:r,destroyed:i,outputLen:o,pos:a}=this;return e||(e=new this.constructor({dkLen:o})),e.set(...this.get()),e.length=n,e.finished=r,e.destroyed=i,e.outputLen=o,e.buffer.set(t),e.pos=a,e}}const fv=BigInt(2**32-1),dv=BigInt(32);function hv(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t?{h:Number(e&fv),l:Number(e>>dv&fv)}:{h:0|Number(e>>dv&fv),l:0|Number(e&fv)}}function pv(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new Uint32Array(e.length),r=new Uint32Array(e.length);for(let i=0;i<e.length;i++){const{h:o,l:a}=hv(e[i],t);[n[i],r[i]]=[o,a]}return[n,r]}const mv=(e,t,n)=>e>>>n,yv=(e,t,n)=>e<<32-n|t>>>n,vv=(e,t,n)=>e>>>n|t<<32-n,bv=(e,t,n)=>e<<32-n|t>>>n,gv=(e,t,n)=>e<<64-n|t>>>n-32,wv=(e,t,n)=>e>>>n-32|t<<64-n;function xv(e,t,n,r){const i=(t>>>0)+(r>>>0);return{h:e+n+(i/2**32|0)|0,l:0|i}}const Pv=(e,t,n)=>(e>>>0)+(t>>>0)+(n>>>0),kv=(e,t,n,r)=>t+n+r+(e/2**32|0)|0,zv=(e,t,n,r)=>(e>>>0)+(t>>>0)+(n>>>0)+(r>>>0),Mv=(e,t,n,r,i)=>t+n+r+i+(e/2**32|0)|0,Nv=(e,t,n,r,i)=>(e>>>0)+(t>>>0)+(n>>>0)+(r>>>0)+(i>>>0),Ov=(e,t,n,r,i,o)=>t+n+r+i+o+(e/2**32|0)|0,Tv=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),jv=new Uint32Array(32);function Lv(e,t,n,r,i,o){const a=i[o],s=i[o+1];let l=jv[2*e],u=jv[2*e+1],c=jv[2*t],f=jv[2*t+1],d=jv[2*n],h=jv[2*n+1],p=jv[2*r],m=jv[2*r+1],y=Pv(l,c,a);var v,b;u=kv(y,u,f,s),l=0|y,({Dh:m,Dl:p}={Dh:m^u,Dl:p^l}),({Dh:m,Dl:p}={Dh:(b=p,b),Dl:(v=m,v)}),({h:h,l:d}=xv(h,d,m,p)),({Bh:f,Bl:c}={Bh:f^h,Bl:c^d}),({Bh:f,Bl:c}={Bh:vv(f,c,24),Bl:bv(f,c,24)}),jv[2*e]=l,jv[2*e+1]=u,jv[2*t]=c,jv[2*t+1]=f,jv[2*n]=d,jv[2*n+1]=h,jv[2*r]=p,jv[2*r+1]=m}function Ev(e,t,n,r,i,o){const a=i[o],s=i[o+1];let l=jv[2*e],u=jv[2*e+1],c=jv[2*t],f=jv[2*t+1],d=jv[2*n],h=jv[2*n+1],p=jv[2*r],m=jv[2*r+1],y=Pv(l,c,a);u=kv(y,u,f,s),l=0|y,({Dh:m,Dl:p}={Dh:m^u,Dl:p^l}),({Dh:m,Dl:p}={Dh:vv(m,p,16),Dl:bv(m,p,16)}),({h:h,l:d}=xv(h,d,m,p)),({Bh:f,Bl:c}={Bh:f^h,Bl:c^d}),({Bh:f,Bl:c}={Bh:gv(f,c,63),Bl:wv(f,c,63)}),jv[2*e]=l,jv[2*e+1]=u,jv[2*t]=c,jv[2*t+1]=f,jv[2*n]=d,jv[2*n+1]=h,jv[2*r]=p,jv[2*r+1]=m}class Hv extends cv{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|Tv[0],this.v0h=0|Tv[1],this.v1l=0|Tv[2],this.v1h=0|Tv[3],this.v2l=0|Tv[4],this.v2h=0|Tv[5],this.v3l=0|Tv[6],this.v3h=0|Tv[7],this.v4l=0|Tv[8],this.v4h=0|Tv[9],this.v5l=0|Tv[10],this.v5h=0|Tv[11],this.v6l=0|Tv[12],this.v6h=0|Tv[13],this.v7l=0|Tv[14],this.v7h=0|Tv[15];const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|65536|1<<24,e.salt){const t=$y(nv(e.salt));this.v4l^=t[0],this.v4h^=t[1],this.v5l^=t[2],this.v5h^=t[3]}if(e.personalization){const t=$y(nv(e.personalization));this.v6l^=t[0],this.v6h^=t[1],this.v7l^=t[2],this.v7h^=t[3]}if(e.key){const t=new Uint8Array(this.blockLen);t.set(nv(e.key)),this.update(t)}}get(){let{v0l:e,v0h:t,v1l:n,v1h:r,v2l:i,v2h:o,v3l:a,v3h:s,v4l:l,v4h:u,v5l:c,v5h:f,v6l:d,v6h:h,v7l:p,v7h:m}=this;return[e,t,n,r,i,o,a,s,l,u,c,f,d,h,p,m]}set(e,t,n,r,i,o,a,s,l,u,c,f,d,h,p,m){this.v0l=0|e,this.v0h=0|t,this.v1l=0|n,this.v1h=0|r,this.v2l=0|i,this.v2h=0|o,this.v3l=0|a,this.v3h=0|s,this.v4l=0|l,this.v4h=0|u,this.v5l=0|c,this.v5h=0|f,this.v6l=0|d,this.v6h=0|h,this.v7l=0|p,this.v7h=0|m}compress(e,t,n){this.get().forEach(((e,t)=>jv[t]=e)),jv.set(Tv,16);let{h:r,l:i}=hv(BigInt(this.length));jv[24]=Tv[8]^i,jv[25]=Tv[9]^r,n&&(jv[28]=~jv[28],jv[29]=~jv[29]);let o=0;const a=uv;for(let s=0;s<12;s++)Lv(0,4,8,12,e,t+2*a[o++]),Ev(0,4,8,12,e,t+2*a[o++]),Lv(1,5,9,13,e,t+2*a[o++]),Ev(1,5,9,13,e,t+2*a[o++]),Lv(2,6,10,14,e,t+2*a[o++]),Ev(2,6,10,14,e,t+2*a[o++]),Lv(3,7,11,15,e,t+2*a[o++]),Ev(3,7,11,15,e,t+2*a[o++]),Lv(0,5,10,15,e,t+2*a[o++]),Ev(0,5,10,15,e,t+2*a[o++]),Lv(1,6,11,12,e,t+2*a[o++]),Ev(1,6,11,12,e,t+2*a[o++]),Lv(2,7,8,13,e,t+2*a[o++]),Ev(2,7,8,13,e,t+2*a[o++]),Lv(3,4,9,14,e,t+2*a[o++]),Ev(3,4,9,14,e,t+2*a[o++]);this.v0l^=jv[0]^jv[16],this.v0h^=jv[1]^jv[17],this.v1l^=jv[2]^jv[18],this.v1h^=jv[3]^jv[19],this.v2l^=jv[4]^jv[20],this.v2h^=jv[5]^jv[21],this.v3l^=jv[6]^jv[22],this.v3h^=jv[7]^jv[23],this.v4l^=jv[8]^jv[24],this.v4h^=jv[9]^jv[25],this.v5l^=jv[10]^jv[26],this.v5h^=jv[11]^jv[27],this.v6l^=jv[12]^jv[28],this.v6h^=jv[13]^jv[29],this.v7l^=jv[14]^jv[30],this.v7h^=jv[15]^jv[31],jv.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const Xv=lv((e=>new Hv(e)));function Av(e){const t=e.length%2,n=e.length-t,r=new DataView(e.buffer,e.byteOffset);let i="";for(let o=0;o<n;o+=2)i+=jy[r.getUint16(o)];return t&&(i+=Ty[r.getUint8(n)]),i}function Sv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Math.ceil(t/8);return`${n?"0x":""}${e&&e.length?r>0&&e.length>r?`${Av(e.subarray(0,r/2))}\u2026${Av(e.subarray(e.length-r/2))}`:Av(e):""}`}function Zv(e){return function(){return Sv(e(...arguments))}}function Dv(e,t){return(n,r)=>t(n,e,r)}function Rv(e,t){return function(n){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,i=arguments.length>2?arguments[2]:void 0;const o=Wy(n);return!Ry||!i&&Ny()?e[r](o):t[r](o)}}function Uv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const i=Math.ceil(t/8),o=Wy(e);return!Ry||!r&&Ny()?vy(o,Wy(n),i):Xv(o,{dkLen:i,key:n||void 0})}Zv(Uv);const Fv=xm("SS58PRE");function Wv(e){return Uv(qy(Fv,e),512)}function Cv(e){const t=64&e[0]?2:1,n=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,r=[34+t,35+t].includes(e.length),i=e.length-(r?2:1),o=Wv(e.subarray(0,i));return[0===(128&e[0])&&![46,47].includes(e[0])&&(r?e[e.length-2]===o[0]&&e[e.length-1]===o[1]:e[e.length-1]===o[0]),i,t,n]}const qv={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},Iv={bifrost:788,centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,sora:617,statemine:434},Bv={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0},Yv={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],picasso:["0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},Vv=[0,2,42],Gv=["testnet"];const Kv=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:19,network:"geek",displayName:"GeekCash",symbols:["GEEK"],decimals:[12],standardAccount:"*25519",website:"https://geekcash.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:21,network:"dock-testnet",displayName:"Dock Testnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:22,network:"dock-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[18],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Chain",symbols:["KILT"],decimals:[18],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK"],decimals:[10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["TRAC"],decimals:[18],standardAccount:"secp256k1",website:"https://origintrail.io"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[15],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"Sr25519",website:"https://efinity.io/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1337,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"Sr25519",website:"https://ajuna.io"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"}].map((function(e){const t=e.network||"",n=t.replace(/_/g,"-").split("-"),r=e;return r.slip44=Iv[t],r.hasLedgerSupport=!!r.slip44,r.genesisHash=Yv[t]||[],r.icon=qv[t]||"substrate",r.isTestnet=!!Bv[t]||Gv.includes(n[n.length-1]),r.isIgnored=r.isTestnet||!(e.standardAccount&&e.decimals&&e.decimals.length&&e.symbols&&e.symbols.length)&&42!==e.prefix,r})).filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,t){const n=Vv.includes(e.prefix);return n===Vv.includes(t.prefix)?n?0:e.displayName.localeCompare(t.displayName):n?-1:1}));Kv.filter((function(e){let{genesisHash:t,prefix:n}=e;return!!t.length||42===n}));const Jv={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:Kv.map((function(e){let{prefix:t}=e;return t})),prefix:42};function Qv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(Bp(e,"Invalid empty address passed"),Fy(e)||Ay(e))return Wy(e);try{const r=Qy(e);Bp(Jv.allowedEncodedLengths.includes(r.length),"Invalid decoded address length");const[i,o,a,s]=Cv(r);return Bp(t||i,"Invalid decoded address checksum"),Bp([-1,s].includes(n),(()=>`Expected ss58Format ${n}, received ${s}`)),r.slice(a,o)}catch(r){throw new Error(`Decoding ${e}: ${r.message}`)}}function _v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Jv.prefix;const n=Qv(e);Bp(t>=0&&t<=16383&&![46,47].includes(t),"Out of range ss58Format specified"),Bp(Jv.allowedDecodedLengths.includes(n.length),(()=>`Expected a valid key to convert, with length ${Jv.allowedDecodedLengths.join(", ")}`));const r=qy(t<64?[t]:[(252&t)>>2|64,t>>8|(3&t)<<6],n);return _y(qy(r,Wv(r).subarray(0,[32,33].includes(n.length)?2:1)))}function $v(e){return new Promise((t=>{"complete"===document.readyState?t(e()):window.addEventListener("load",(()=>t(e())))}))}const eb=window;function tb(){return 0!==Object.keys(eb.injectedWeb3).length}function nb(e){throw new Error(`${e}: web3Enable(originName) needs to be called before ${e}`)}function rb(e,t,n){return t.map((t=>{let{address:r,genesisHash:i,name:o,type:a}=t;return{address:42===r.length?r:_v(Qv(r),n),meta:{genesisHash:i,name:o,source:e},type:a}}))}eb.injectedWeb3=eb.injectedWeb3||{};let ib=tb(),ob=null;function ab(e){return Promise.all(Object.entries(eb.injectedWeb3).map((t=>{let[n,{enable:r,version:i}]=t;return Promise.all([Promise.resolve({name:n,version:i}),r(e).catch((e=>{console.error(`Error initializing ${n}: ${e.message}`)}))])})))}async function sb(){let{accountType:e,ss58Format:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!ob)return nb("web3Accounts");const n=[],r=await ob,i=await Promise.all(r.map((async n=>{let{accounts:r,name:i}=n;try{return rb(i,(await r.get()).filter((t=>{let{type:n}=t;return!n||!e||e.includes(n)})),t)}catch(o){return[]}})));i.forEach((e=>{n.push(...e)}));const o=n.map((e=>{let{address:t}=e;return t}));return console.log(`web3Accounts: Found ${n.length} address${1!==n.length?"es":""}: ${o.join(", ")}`),n}async function lb(e){if(!ob)return nb("web3FromSource");const t=await ob,n=e&&t.find((t=>{let{name:n}=t;return n===e}));if(!n)throw new Error(`web3FromSource: Unable to find an injected ${e}`);return n}async function ub(e){if(!ob)return nb("web3FromAddress");const t=await sb();let n;if(e){const r=Qv(e);n=t.find((e=>Cy(Qv(e.address),r)))}if(!n)throw new Error(`web3FromAddress: Unable to find injected ${e}`);return lb(n.meta.source)}var cb=n(856);const fb=BigInt(0),db=BigInt(1),hb=BigInt(2),pb=BigInt(3),mb=BigInt(8),yb=hb**BigInt(256),vb={a:fb,b:BigInt(7),P:yb-hb**BigInt(32)-BigInt(977),n:yb-BigInt("432420386565659656852420866394968145599"),h:db,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")};function bb(e){const{a:t,b:n}=vb,r=Rb(e*e),i=Rb(r*e);return Rb(i+t*e+n)}const gb=vb.a===fb;class wb{constructor(e,t,n){this.x=e,this.y=t,this.z=n}static fromAffine(e){if(!(e instanceof Pb))throw new TypeError("JacobianPoint#fromAffine: expected Point");return new wb(e.x,e.y,db)}static toAffineBatch(e){const t=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:vb.P;const n=new Array(e.length),r=Fb(e.reduce(((e,r,i)=>r===fb?e:(n[i]=e,Rb(e*r,t))),db),t);return e.reduceRight(((e,r,i)=>r===fb?e:(n[i]=Rb(e*n[i],t),Rb(e*r,t))),r),n}(e.map((e=>e.z)));return e.map(((e,n)=>e.toAffine(t[n])))}static normalizeZ(e){return wb.toAffineBatch(e).map(wb.fromAffine)}equals(e){if(!(e instanceof wb))throw new TypeError("JacobianPoint expected");const{x:t,y:n,z:r}=this,{x:i,y:o,z:a}=e,s=Rb(r**hb),l=Rb(a**hb),u=Rb(t*l),c=Rb(i*s),f=Rb(Rb(n*a)*l),d=Rb(Rb(o*r)*s);return u===c&&f===d}negate(){return new wb(this.x,Rb(-this.y),this.z)}double(){const{x:e,y:t,z:n}=this,r=Rb(e**hb),i=Rb(t**hb),o=Rb(i**hb),a=Rb(hb*(Rb((e+i)**hb)-r-o)),s=Rb(pb*r),l=Rb(s**hb),u=Rb(l-hb*a),c=Rb(s*(a-u)-mb*o),f=Rb(hb*t*n);return new wb(u,c,f)}add(e){if(!(e instanceof wb))throw new TypeError("JacobianPoint expected");const{x:t,y:n,z:r}=this,{x:i,y:o,z:a}=e;if(i===fb||o===fb)return this;if(t===fb||n===fb)return e;const s=Rb(r**hb),l=Rb(a**hb),u=Rb(t*l),c=Rb(i*s),f=Rb(Rb(n*a)*l),d=Rb(Rb(o*r)*s),h=Rb(c-u),p=Rb(d-f);if(h===fb)return p===fb?this.double():wb.ZERO;const m=Rb(h**hb),y=Rb(h*m),v=Rb(u*m),b=Rb(p**hb-y-hb*v),g=Rb(p*(v-b)-f*y),w=Rb(r*a*h);return new wb(b,g,w)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){let t=Db(e);wb.BASE;const n=wb.ZERO;if(t===fb)return n;if(t===db)return this;if(!gb){let e=n,r=this;for(;t>fb;)t&db&&(e=e.add(r)),r=r.double(),t>>=db;return e}let{k1neg:r,k1:i,k2neg:o,k2:a}=qb(t),s=n,l=n,u=this;for(;i>fb||a>fb;)i&db&&(s=s.add(u)),a&db&&(l=l.add(u)),u=u.double(),i>>=db,a>>=db;return r&&(s=s.negate()),o&&(l=l.negate()),l=new wb(Rb(l.x*vb.beta),l.y,l.z),s.add(l)}precomputeWindow(e){const t=gb?128/e+1:256/e+1,n=[];let r=this,i=r;for(let o=0;o<t;o++){i=r,n.push(i);for(let t=1;t<2**(e-1);t++)i=i.add(r),n.push(i);r=i.double()}return n}wNAF(e,t){!t&&this.equals(wb.BASE)&&(t=Pb.BASE);const n=t&&t._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let r=t&&xb.get(t);r||(r=this.precomputeWindow(n),t&&1!==n&&(r=wb.normalizeZ(r),xb.set(t,r)));let i=wb.ZERO,o=wb.ZERO;const a=1+(gb?128/n:256/n),s=2**(n-1),l=BigInt(2**n-1),u=2**n,c=BigInt(n);for(let f=0;f<a;f++){const t=f*s;let n=Number(e&l);if(e>>=c,n>s&&(n-=u,e+=db),0===n){let e=r[t];f%2&&(e=e.negate()),o=o.add(e)}else{let e=r[t+Math.abs(n)-1];n<0&&(e=e.negate()),i=i.add(e)}}return{p:i,f:o}}multiply(e,t){let n,r,i=Db(e);if(gb){const{k1neg:e,k1:o,k2neg:a,k2:s}=qb(i);let{p:l,f:u}=this.wNAF(o,t),{p:c,f:f}=this.wNAF(s,t);e&&(l=l.negate()),a&&(c=c.negate()),c=new wb(Rb(c.x*vb.beta),c.y,c.z),n=l.add(c),r=u.add(f)}else{const{p:e,f:o}=this.wNAF(i,t);n=e,r=o}return wb.normalizeZ([n,r])[0]}toAffine(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Fb(this.z);const{x:t,y:n,z:r}=this,i=e,o=Rb(i*i),a=Rb(o*i),s=Rb(t*o),l=Rb(n*a);if(Rb(r*i)!==db)throw new Error("invZ was invalid");return new Pb(s,l)}}wb.BASE=new wb(vb.Gx,vb.Gy,db),wb.ZERO=new wb(fb,db,fb);const xb=new WeakMap;class Pb{constructor(e,t){this.x=e,this.y=t}_setWindowSize(e){this._WINDOW_SIZE=e,xb.delete(this)}static fromCompressedHex(e){const t=32===e.length,n=Sb(t?e:e.subarray(1));if(!Vb(n))throw new Error("Point is not on curve");let r=function(e){const{P:t}=vb,n=BigInt(6),r=BigInt(11),i=BigInt(22),o=BigInt(23),a=BigInt(44),s=BigInt(88),l=e*e*e%t,u=l*l*e%t,c=Ub(u,pb)*u%t,f=Ub(c,pb)*u%t,d=Ub(f,hb)*l%t,h=Ub(d,r)*d%t,p=Ub(h,i)*h%t,m=Ub(p,a)*p%t,y=Ub(m,s)*m%t,v=Ub(y,a)*p%t,b=Ub(v,pb)*u%t,g=Ub(b,o)*h%t,w=Ub(g,n)*l%t;return Ub(w,hb)}(bb(n));const i=(r&db)===db;if(t)i&&(r=Rb(-r));else{1===(1&e[0])!==i&&(r=Rb(-r))}const o=new Pb(n,r);return o.assertValidity(),o}static fromUncompressedHex(e){const t=Sb(e.subarray(1,33)),n=Sb(e.subarray(33,65)),r=new Pb(t,n);return r.assertValidity(),r}static fromHex(e){const t=Zb(e),n=t.length,r=t[0];if(32===n||33===n&&(2===r||3===r))return this.fromCompressedHex(t);if(65===n&&4===r)return this.fromUncompressedHex(t);throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${n}`)}static fromPrivateKey(e){return Pb.BASE.multiply(Kb(e))}static fromSignature(e,t,n){const r=Ib(e=Zb(e)),{r:i,s:o}=Jb(t);if(0!==n&&1!==n)throw new Error("Cannot recover signature: invalid recovery bit");if(r===fb)throw new Error("Cannot recover signature: msgHash cannot be 0");const a=1&n?"03":"02",s=Pb.fromHex(a+Lb(i)),{n:l}=vb,u=Fb(i,l),c=Rb(-r*u,l),f=Rb(o*u,l),d=Pb.BASE.multiplyAndAddUnsafe(s,c,f);if(!d)throw new Error("Cannot recover signature: point at infinify");return d.assertValidity(),d}toRawBytes(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Ab(this.toHex(e))}toHex(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const t=Lb(this.x);if(e){return`${this.y&db?"03":"02"}${t}`}return`04${t}${Lb(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:t,y:n}=this;if(!Vb(t)||!Vb(n))throw new Error(e);const r=Rb(n*n);if(Rb(r-bb(t))!==fb)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new Pb(this.x,Rb(-this.y))}double(){return wb.fromAffine(this).double().toAffine()}add(e){return wb.fromAffine(this).add(wb.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return wb.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,t,n){const r=wb.fromAffine(this).multiply(t),i=wb.fromAffine(e).multiplyUnsafe(n),o=r.add(i);return o.equals(wb.ZERO)?void 0:o.toAffine()}}function kb(e){return Number.parseInt(e[0],16)>=8?"00"+e:e}function zb(e){if(e.length<2||2!==e[0])throw new Error(`Invalid signature integer tag: ${jb(e)}`);const t=e[1],n=e.subarray(2,t+2);if(!t||n.length!==t)throw new Error("Invalid signature integer: wrong length");if(0===n[0]&&n[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:Sb(n),left:e.subarray(t+2)}}Pb.BASE=new Pb(vb.Gx,vb.Gy),Pb.ZERO=new Pb(fb,fb);class Mb{constructor(e,t){this.r=e,this.s=t,this.assertValidity()}static fromCompact(e){const t=Ob(e),n="Signature.fromCompact";if("string"!==typeof e&&!t)throw new TypeError(`${n}: Expected string or Uint8Array`);const r=t?jb(e):e;if(128!==r.length)throw new Error(`${n}: Expected 64-byte hex`);return new Mb(Xb(r.slice(0,64)),Xb(r.slice(64,128)))}static fromDER(e){const t=Ob(e);if("string"!==typeof e&&!t)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:n,s:r}=function(e){if(e.length<2||48!=e[0])throw new Error(`Invalid signature tag: ${jb(e)}`);if(e[1]!==e.length-2)throw new Error("Invalid signature: incorrect length");const{data:t,left:n}=zb(e.subarray(2)),{data:r,left:i}=zb(n);if(i.length)throw new Error(`Invalid signature: left bytes after parsing: ${jb(i)}`);return{r:t,s:r}}(t?e:Ab(e));return new Mb(n,r)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:t}=this;if(!Yb(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!Yb(t))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=vb.n>>db;return this.s>e}normalizeS(){return this.hasHighS()?new Mb(this.r,vb.n-this.s):this}toDERRawBytes(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Ab(this.toDERHex(e))}toDERHex(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const t=kb(Hb(this.s));if(e)return t;const n=kb(Hb(this.r)),r=Hb(n.length/2),i=Hb(t.length/2);return`30${Hb(n.length/2+t.length/2+4)}02${r}${n}02${i}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return Ab(this.toCompactHex())}toCompactHex(){return Lb(this.r)+Lb(this.s)}}function Nb(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];if(!t.every(Ob))throw new Error("Uint8Array list expected");if(1===t.length)return t[0];const r=t.reduce(((e,t)=>e+t.length),0),i=new Uint8Array(r);for(let o=0,a=0;o<t.length;o++){const e=t[o];i.set(e,a),a+=e.length}return i}function Ob(e){return e instanceof Uint8Array}const Tb=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function jb(e){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");let t="";for(let n=0;n<e.length;n++)t+=Tb[e[n]];return t}function Lb(e){if(e>yb)throw new Error("Expected number < 2^256");return e.toString(16).padStart(64,"0")}function Eb(e){return Ab(Lb(e))}function Hb(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function Xb(e){if("string"!==typeof e)throw new TypeError("hexToNumber: expected string, got "+typeof e);return BigInt(`0x${e}`)}function Ab(e){if("string"!==typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+e.length);const t=new Uint8Array(e.length/2);for(let n=0;n<t.length;n++){const r=2*n,i=e.slice(r,r+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");t[n]=o}return t}function Sb(e){return Xb(jb(e))}function Zb(e){return e instanceof Uint8Array?Uint8Array.from(e):Ab(e)}function Db(e){if("number"===typeof e&&Number.isSafeInteger(e)&&e>0)return BigInt(e);if("bigint"===typeof e&&Yb(e))return e;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function Rb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:vb.P;const n=e%t;return n>=fb?n:t+n}function Ub(e,t){const{P:n}=vb;let r=e;for(;t-- >fb;)r*=r,r%=n;return r}function Fb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:vb.P;if(e===fb||t<=fb)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let n=Rb(e,t),r=t,i=fb,o=db,a=db,s=fb;for(;n!==fb;){const e=r/n,t=r%n,l=i-a*e,u=o-s*e;r=n,n=t,i=a,o=s,a=l,s=u}const l=r;if(l!==db)throw new Error("invert: does not exist");return Rb(i,t)}const Wb=(e,t)=>(e+t/hb)/t,Cb=hb**BigInt(128);function qb(e){const{n:t}=vb,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-db*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=n,a=Wb(o*e,t),s=Wb(-r*e,t);let l=Rb(e-a*n-s*i,t),u=Rb(-a*r-s*o,t);const c=l>Cb,f=u>Cb;if(c&&(l=t-l),f&&(u=t-u),l>Cb||u>Cb)throw new Error("splitScalarEndo: Endomorphism failed, k="+e);return{k1neg:c,k1:l,k2neg:f,k2:u}}function Ib(e){const{n:t}=vb,n=8*e.length-256;let r=Sb(e);return n>0&&(r>>=BigInt(n)),r>=t&&(r-=t),r}class Bb{constructor(){this.v=new Uint8Array(32).fill(1),this.k=new Uint8Array(32).fill(0),this.counter=0}hmac(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return ag.hmacSha256(this.k,...t)}hmacSync(){if("function"!==typeof ag.hmacSha256Sync)throw new Error("utils.hmacSha256Sync is undefined, you need to set it");for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=ag.hmacSha256Sync(this.k,...t);if(r instanceof Promise)throw new Error("To use sync sign(), ensure utils.hmacSha256 is sync");return r}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Uint8Array;this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),0!==e.length&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Uint8Array;this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),0!==e.length&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){return this.incr(),this.v=await this.hmac(this.v),this.v}generateSync(){return this.incr(),this.v=this.hmacSync(this.v),this.v}}function Yb(e){return fb<e&&e<vb.n}function Vb(e){return fb<e&&e<vb.P}function Gb(e,t,n){const r=Sb(e);if(!Yb(r))return;const{n:i}=vb,o=Pb.BASE.multiply(r),a=Rb(o.x,i);if(a===fb)return;const s=Rb(Fb(r,i)*Rb(t+n*a,i),i);if(s===fb)return;const l=new Mb(a,s);return{sig:l,recovery:(o.x===l.r?0:2)|Number(o.y&db)}}function Kb(e){let t;if("bigint"===typeof e)t=e;else if("number"===typeof e&&Number.isSafeInteger(e)&&e>0)t=BigInt(e);else if("string"===typeof e){if(64!==e.length)throw new Error("Expected 32 bytes of private key");t=Xb(e)}else{if(!Ob(e))throw new TypeError("Expected valid private key");if(32!==e.length)throw new Error("Expected 32 bytes of private key");t=Sb(e)}if(!Yb(t))throw new Error("Expected private key: 0 < key < n");return t}function Jb(e){if(e instanceof Mb)return e.assertValidity(),e;try{return Mb.fromDER(e)}catch(t){return Mb.fromCompact(e)}}function Qb(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Pb.fromPrivateKey(e).toRawBytes(t)}function _b(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return Pb.fromSignature(e,t,n).toRawBytes(r)}function $b(e){return Sb(e.length>32?e.slice(0,32):e)}function eg(e){const t=$b(e),n=Rb(t,vb.n);return tg(n<fb?t:n)}function tg(e){if("bigint"!==typeof e)throw new Error("Expected bigint");return Ab(Lb(e))}function ng(e,t,n){if(null==e)throw new Error(`sign: expected valid message hash, not "${e}"`);const r=Zb(e),i=Kb(t),o=[tg(i),eg(r)];if(null!=n){!0===n&&(n=ag.randomBytes(32));const e=Zb(n);if(32!==e.length)throw new Error("sign: Expected 32 bytes of extra data");o.push(e)}return{seed:Nb(...o),m:$b(r),d:i}}function rg(e,t){let{sig:n,recovery:r}=e;const{canonical:i,der:o,recovered:a}=Object.assign({canonical:!0,der:!0},t);i&&n.hasHighS()&&(n=n.normalizeS(),r^=1);const s=o?n.toDERRawBytes():n.toCompactRawBytes();return a?[s,r]:s}function ig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{seed:r,m:i,d:o}=ng(e,t,n.extraEntropy);let a;const s=new Bb;for(s.reseedSync(r);!(a=Gb(s.generateSync(),i,o));)s.reseedSync();return rg(a,n)}Pb.BASE._setWindowSize(8);const og={node:cb,web:"object"===typeof self&&"crypto"in self?self.crypto:void 0},ag={isValidPrivateKey(e){try{return Kb(e),!0}catch(t){return!1}},hashToPrivateKey:e=>{if((e=Zb(e)).length<40||e.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");const t=Rb(Sb(e),vb.n);if(t===fb||t===db)throw new Error("Invalid private key");return Eb(t)},randomBytes:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;if(og.web)return og.web.getRandomValues(new Uint8Array(e));if(og.node){const{randomBytes:t}=og.node;return Uint8Array.from(t(e))}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>ag.hashToPrivateKey(ag.randomBytes(40)),bytesToHex:jb,mod:Rb,sha256:async e=>{if(og.web){const t=await og.web.subtle.digest("SHA-256",e.buffer);return new Uint8Array(t)}if(og.node){const{createHash:t}=og.node;return Uint8Array.from(t("sha256").update(e).digest())}throw new Error("The environment doesn't have sha256 function")},hmacSha256:async function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(og.web){const t=await og.web.subtle.importKey("raw",e,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),r=Nb(...n),i=await og.web.subtle.sign("HMAC",t,r);return new Uint8Array(i)}if(og.node){const{createHmac:t}=og.node,r=t("sha256",e);return n.forEach((e=>r.update(e))),Uint8Array.from(r.digest())}throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,precompute(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Pb.BASE;const n=t===Pb.BASE?t:new Pb(t.x,t.y);return n._setWindowSize(e),n.multiply(pb),n}};function sg(e,t){if(Bp(32===e.length,"Expected valid 32-byte private key as a seed"),!Ry||!t&&Ny()){const t=oy(e);return{publicKey:t.slice(32),secretKey:t.slice(0,32)}}return{publicKey:Qb(e,!0),secretKey:e}}var lg=n(826);function ug(e,t){if(!t&&Ny()){const t=ny(e);return{publicKey:t.slice(32),secretKey:t.slice(0,64)}}return lg.sign.keyPair.fromSeed(e)}function cg(e){const t=Wy(e);return Bp(96===t.length,(()=>`Expected keypair with 96 bytes, found ${t.length}`)),{publicKey:t.slice(64,96),secretKey:t.slice(0,64)}}function fg(e){const t=Wy(e);return Bp(32===t.length,(()=>`Expected a seed matching 32 bytes, found ${t.length}`)),cg(dy(t))}const dg={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:Iy.US,type:"base64"},hg=Gy(dg),pg=(Vy(hg),By(dg,hg)),mg=Yy(dg);var yg=n(518);function vg(e){return"number"===typeof e}function bg(e){return yg.isBN(e)}function gg(e){return"bigint"===typeof e}function wg(e){return Object.keys(e)}function xg(e){for(let t=0;t<(arguments.length<=1?0:arguments.length-1);t++){const n=t+1<1||arguments.length<=t+1?void 0:arguments[t+1];if(n){const t=wg(n);for(let r=0;r<t.length;r++){const i=t[r];e[i]=n[i]}}}return e}function Pg(e){return"boolean"===typeof e}const kg={isLe:!1,isNegative:!1};function zg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:kg;if(!e||"0x"===e)return new yg(0);const{isLe:n,isNegative:r}=xg({isLe:!1,isNegative:!1},Pg(t)?{isLe:t}:t),i=Sy(e),o=new yg(i,16,n?"le":"be");return r?o.fromTwos(4*i.length):o}function Mg(e){return!!e&&"object"===typeof e}function Ng(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return e=>(Mg(e)||Cp(e))&&t.every((t=>Cp(e[t])))}const Og=Ng("toBigInt"),Tg=Ng("toBn");function jg(e){return yg.isBN(e)?e:e?Ay(e)?zg(e.toString()):gg(e)?new yg(e.toString()):Tg(e)?e.toBn():Og(e)?new yg(e.toBigInt().toString()):new yg(e):new yg(0)}const Lg={bitLength:-1,isLe:!0,isNegative:!1};function Eg(e,t){return-1===t.bitLength?new Uint8Array:new Uint8Array(e)}function Hg(e,t,n){let{isLe:r,isNegative:i}=n;const o=new Uint8Array(t),a=i?e.toTwos(8*t):e;return o.set(a.toArray(r?"le":"be",t),0),o}function Xg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Lg,n=arguments.length>2?arguments[2]:void 0;const r=xg({bitLength:-1,isLe:!0,isNegative:!1},vg(t)?{bitLength:t,isLe:n}:t),i=jg(e),o=-1===r.bitLength?Math.ceil(i.bitLength()/8):Math.ceil((r.bitLength||0)/8);return e?Hg(i,o,r):Eg(o,r)}new yg(0);const Ag=new yg(1),Sg=new yg(2),Zg=(new yg(3),new yg(4),new yg(5),new yg(6),new yg(7),new yg(8),new yg(9),new yg(10),new yg(100),new yg(1e3),new yg(1e6),new yg(1e9)),Dg=(Zg.mul(Zg),new yg(Number.MAX_SAFE_INTEGER),Sg.pow(new yg(6)).isub(Ag)),Rg=Sg.pow(new yg(14)).isub(Ag),Ug=Sg.pow(new yg(30)).isub(Ag);function Fg(e){return qy(function(e){const t=jg(e);if(t.lte(Dg))return new Uint8Array([t.toNumber()<<2]);if(t.lte(Rg))return Xg(t.shln(2).iadd(Ag),16,!0);if(t.lte(Ug))return Xg(t.shln(2).iadd(Sg),32,!0);const n=Xg(t);let r=n.length;for(;0===n[r-1];)r--;return Bp(r>=4,"Invalid length, previous checks match anything less than 2^30"),qy([3+(r-4<<2)],n.subarray(0,r))}(e.length),e)}const Wg={isLe:!1},Cg={isLe:!0},qg={bitLength:32,isLe:!1},Ig={bitLength:32,isLe:!0},Bg={bitLength:256,isLe:!1},Yg={bitLength:256,isLe:!0},Vg=/^\d+$/;class Gg{#e=new Uint8Array(32);#t=!1;static from(e){const t=new Gg,[n,r]=e.startsWith("/")?[e.substr(1),!0]:[e,!1];return t.soft(Vg.test(n)?new yg(n,10):n),r?t.harden():t}get chainCode(){return this.#e}get isHard(){return this.#t}get isSoft(){return!this.#t}hard(e){return this.soft(e).harden()}harden(){return this.#t=!0,this}soft(e){return vg(e)||bg(e)||gg(e)?this.soft(Xg(e,Yg)):Ay(e)?this.soft(Zy(e)):function(e){return"string"===typeof e||e instanceof String}(e)?this.soft(Fg(xm(e))):e.length>32?this.soft(Uv(e)):(this.#e.fill(0),this.#e.set(e,0),this)}soften(){return this.#t=!1,this}}const Kg=/\/(\/?)([^/]+)/g;function Jg(e){const t=e.match(Kg),n=[];let r="";if(t){r=t.join("");for(const e of t)n.push(Gg.from(e.substr(1)))}return Bp(r===e,(()=>`Re-constructed path "${r}" does not match input`)),{parts:t,path:n}}const Qg=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;class _g extends ov{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,iv(e);const n=nv(t);if(this.iHash=e.create(),!(this.iHash instanceof ov))throw new TypeError("Expected instance of class which extends utils.Hash");const r=this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const i=new Uint8Array(r);i.set(n.length>this.iHash.blockLen?e.create().update(n).digest():n);for(let o=0;o<i.length;o++)i[o]^=54;this.iHash.update(i),this.oHash=e.create();for(let o=0;o<i.length;o++)i[o]^=106;this.oHash.update(i),i.fill(0)}update(e){if(this.destroyed)throw new Error("instance is destroyed");return this.iHash.update(e),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length!==this.outputLen)throw new Error("HMAC: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:n,finished:r,destroyed:i,blockLen:o,outputLen:a}=this;return(e=e).finished=r,e.destroyed=i,e.blockLen=o,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const $g=(e,t,n)=>new _g(e,t).update(n).digest();function ew(e,t,n,r){iv(e);const i=av({dkLen:32,asyncTick:10},r),{c:o,dkLen:a,asyncTick:s}=i;if(rv(o),rv(a),rv(s),o<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const l=nv(t),u=nv(n),c=new Uint8Array(a),f=$g.create(e,l),d=f._cloneInto().update(u);return{c:o,dkLen:a,asyncTick:s,DK:c,PRF:f,PRFSalt:d}}function tw(e,t,n,r,i){return e.destroy(),t.destroy(),r&&r.destroy(),i.fill(0),n}function nw(e,t,n,r){const{c:i,dkLen:o,DK:a,PRF:s,PRFSalt:l}=ew(e,t,n,r);let u;const c=new Uint8Array(4),f=ev(c),d=new Uint8Array(s.outputLen);for(let h=1,p=0;p<o;h++,p+=s.outputLen){const e=a.subarray(p,p+s.outputLen);f.setInt32(0,h,!1),(u=l._cloneInto(u)).update(c).digestInto(d),e.set(d.subarray(0,e.length));for(let t=1;t<i;t++){s._cloneInto(u).update(d).digestInto(d);for(let t=0;t<e.length;t++)e[t]^=d[t]}}return tw(s,l,a,u,d)}$g.create=(e,t)=>new _g(e,t);class rw extends ov{constructor(e,t,n,r){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=r,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=ev(this.buffer)}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{view:t,buffer:n,blockLen:r,finished:i}=this;if(i)throw new Error("digest() was already called");const o=(e=nv(e)).length;for(let a=0;a<o;){const i=Math.min(r-this.pos,o-a);if(i!==r)n.set(e.subarray(a,a+i),this.pos),this.pos+=i,a+=i,this.pos===r&&(this.process(t,0),this.pos=0);else{const t=ev(e);for(;r<=o-a;a+=r)this.process(t,a)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Sha2: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0;const{buffer:t,view:n,blockLen:r,isLE:i}=this;let{pos:o}=this;t[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>r-o&&(this.process(n,0),o=0);for(let s=o;s<r;s++)t[s]=0;!function(e,t,n,r){if("function"===typeof e.setBigUint64)return e.setBigUint64(t,n,r);const i=BigInt(32),o=BigInt(4294967295),a=Number(n>>i&o),s=Number(n&o),l=r?4:0,u=r?0:4;e.setUint32(t+l,a,r),e.setUint32(t+u,s,r)}(n,r-8,BigInt(8*this.length),i),this.process(n,0);const a=ev(e);this.get().forEach(((e,t)=>a.setUint32(4*t,e,i)))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:n,length:r,finished:i,destroyed:o,pos:a}=this;return e.length=r,e.pos=a,e.finished=i,e.destroyed=o,r%t&&e.buffer.set(n),e}}const[iw,ow]=pv(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))),aw=new Uint32Array(80),sw=new Uint32Array(80);class lw extends rw{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:n,Bl:r,Ch:i,Cl:o,Dh:a,Dl:s,Eh:l,El:u,Fh:c,Fl:f,Gh:d,Gl:h,Hh:p,Hl:m}=this;return[e,t,n,r,i,o,a,s,l,u,c,f,d,h,p,m]}set(e,t,n,r,i,o,a,s,l,u,c,f,d,h,p,m){this.Ah=0|e,this.Al=0|t,this.Bh=0|n,this.Bl=0|r,this.Ch=0|i,this.Cl=0|o,this.Dh=0|a,this.Dl=0|s,this.Eh=0|l,this.El=0|u,this.Fh=0|c,this.Fl=0|f,this.Gh=0|d,this.Gl=0|h,this.Hh=0|p,this.Hl=0|m}process(e,t){for(let b=0;b<16;b++,t+=4)aw[b]=e.getUint32(t),sw[b]=e.getUint32(t+=4);for(let b=16;b<80;b++){const e=0|aw[b-15],t=0|sw[b-15],n=vv(e,t,1)^vv(e,t,8)^mv(e,0,7),r=bv(e,t,1)^bv(e,t,8)^yv(e,t,7),i=0|aw[b-2],o=0|sw[b-2],a=vv(i,o,19)^gv(i,o,61)^mv(i,0,6),s=bv(i,o,19)^wv(i,o,61)^yv(i,o,6),l=zv(r,s,sw[b-7],sw[b-16]),u=Mv(l,n,a,aw[b-7],aw[b-16]);aw[b]=0|u,sw[b]=0|l}let{Ah:n,Al:r,Bh:i,Bl:o,Ch:a,Cl:s,Dh:l,Dl:u,Eh:c,El:f,Fh:d,Fl:h,Gh:p,Gl:m,Hh:y,Hl:v}=this;for(let b=0;b<80;b++){const e=vv(c,f,14)^vv(c,f,18)^gv(c,f,41),t=bv(c,f,14)^bv(c,f,18)^wv(c,f,41),g=c&d^~c&p,w=Nv(v,t,f&h^~f&m,ow[b],sw[b]),x=Ov(w,y,e,g,iw[b],aw[b]),P=0|w,k=vv(n,r,28)^gv(n,r,34)^gv(n,r,39),z=bv(n,r,28)^wv(n,r,34)^wv(n,r,39),M=n&i^n&a^i&a,N=r&o^r&s^o&s;y=0|p,v=0|m,p=0|d,m=0|h,d=0|c,h=0|f,({h:c,l:f}=xv(0|l,0|u,0|x,0|P)),l=0|a,u=0|s,a=0|i,s=0|o,i=0|n,o=0|r;const O=Pv(P,z,N);n=kv(O,x,k,M),r=0|O}({h:n,l:r}=xv(0|this.Ah,0|this.Al,0|n,0|r)),({h:i,l:o}=xv(0|this.Bh,0|this.Bl,0|i,0|o)),({h:a,l:s}=xv(0|this.Ch,0|this.Cl,0|a,0|s)),({h:l,l:u}=xv(0|this.Dh,0|this.Dl,0|l,0|u)),({h:c,l:f}=xv(0|this.Eh,0|this.El,0|c,0|f)),({h:d,l:h}=xv(0|this.Fh,0|this.Fl,0|d,0|h)),({h:p,l:m}=xv(0|this.Gh,0|this.Gl,0|p,0|m)),({h:y,l:v}=xv(0|this.Hh,0|this.Hl,0|y,0|v)),this.set(n,r,i,o,a,s,l,u,c,f,d,h,p,m,y,v)}roundClean(){aw.fill(0),sw.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class uw extends lw{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class cw extends lw{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const fw=sv((()=>new lw));sv((()=>new uw)),sv((()=>new cw));function dw(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;return Xm(new Uint8Array(e))}Zv(dw);function hw(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dw(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2048,r=arguments.length>3?arguments[3]:void 0;const i=Wy(e),o=Wy(t);return{password:!Ry||!r&&Ny()?Py(i,o,n):nw(fw,i,o,{c:n,dkLen:64}),rounds:n,salt:t}}const pw=(e,t,n)=>e&t^e&n^t&n,mw=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),yw=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),vw=new Uint32Array(64);class bw extends rw{constructor(){super(64,32,8,!1),this.A=0|yw[0],this.B=0|yw[1],this.C=0|yw[2],this.D=0|yw[3],this.E=0|yw[4],this.F=0|yw[5],this.G=0|yw[6],this.H=0|yw[7]}get(){const{A:e,B:t,C:n,D:r,E:i,F:o,G:a,H:s}=this;return[e,t,n,r,i,o,a,s]}set(e,t,n,r,i,o,a,s){this.A=0|e,this.B=0|t,this.C=0|n,this.D=0|r,this.E=0|i,this.F=0|o,this.G=0|a,this.H=0|s}process(e,t){for(let f=0;f<16;f++,t+=4)vw[f]=e.getUint32(t,!1);for(let f=16;f<64;f++){const e=vw[f-15],t=vw[f-2],n=tv(e,7)^tv(e,18)^e>>>3,r=tv(t,17)^tv(t,19)^t>>>10;vw[f]=r+vw[f-7]+n+vw[f-16]|0}let{A:n,B:r,C:i,D:o,E:a,F:s,G:l,H:u}=this;for(let f=0;f<64;f++){const e=u+(tv(a,6)^tv(a,11)^tv(a,25))+((c=a)&s^~c&l)+mw[f]+vw[f]|0,t=(tv(n,2)^tv(n,13)^tv(n,22))+pw(n,r,i)|0;u=l,l=s,s=a,a=o+e|0,o=i,i=r,r=n,n=e+t|0}var c;n=n+this.A|0,r=r+this.B|0,i=i+this.C|0,o=o+this.D|0,a=a+this.E|0,s=s+this.F|0,l=l+this.G|0,u=u+this.H|0,this.set(n,r,i,o,a,s,l,u)}roundClean(){vw.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const gw=sv((()=>new bw)),ww=Rv({256:zy,512:My},{256:gw,512:fw}),xw=Dv(256,ww),Pw=(Dv(512,ww),"abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|")),kw="Invalid mnemonic",zw="Invalid entropy";function Mw(e){return(e||"").normalize("NFKD")}function Nw(e){return parseInt(e,2)}function Ow(e){return e.map((e=>e.toString(2).padStart(8,"0"))).join("")}function Tw(e){return Ow(Array.from(xw(e))).slice(0,8*e.length/32)}function jw(e,t){return hw(xm(Mw(e)),xm(`mnemonic${Mw(t)}`)).password}function Lw(e){var t;const n=Mw(e).split(" ");Bp(n.length%3===0,kw);const r=n.map((e=>{const t=Pw.indexOf(e);return Bp(-1!==t,kw),t.toString(2).padStart(11,"0")})).join(""),i=32*Math.floor(r.length/33),o=r.slice(0,i),a=r.slice(i),s=null===(t=o.match(/(.{1,8})/g))||void 0===t?void 0:t.map(Nw);Bp(s&&s.length%4===0&&s.length>=16&&s.length<=32,zw);const l=Wy(s);return Bp(Tw(l)===a,"Invalid mnemonic checksum"),l}function Ew(e,t){return!Ry||!t&&Ny()?ty(e):function(e){try{Lw(e)}catch(Dz){return!1}return!0}(e)}function Hw(e,t){return!Ry||!t&&Ny()?_m(e):Lw(e)}const Xw={256:gw,512:fw},Aw={256:by,512:gy};function Sw(e){return(t,n,r)=>Zw(t,n,e,r)}function Zw(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:256,r=arguments.length>3?arguments[3]:void 0;const i=Wy(e);return!Ry||!r&&Ny()?Aw[n](i,t):$g(Xw[n],i,t)}Sw(256),Sw(512);const Dw=Dy(0),Rw=Dy(1),Uw=(Dy(1e6),Dy(1e9),Dy(Number.MAX_SAFE_INTEGER),Dy(256)),Fw=Dy(65536);function Ww(e){const t=new Uint8Array(e.length),n=new DataView(e.buffer,e.byteOffset),r=new DataView(t.buffer),i=e.length%2,o=e.length-i;for(let a=0;a<o;a+=2)r.setUint16(a,65535^n.getUint16(a));return i&&r.setUint8(o,255^n.getUint8(o)),t}function Cw(e){const t=new DataView(e.buffer,e.byteOffset),n=e.length%2,r=e.length-n;let i=Dy(0);for(let o=0;o<r;o+=2)i=i*Fw+Dy(t.getUint16(o));return n&&(i=i*Uw+Dy(t.getUint8(r))),i}function qw(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||!e.length)return Dy(0);const{isLe:n,isNegative:r}=xg({isLe:!0,isNegative:!1},t),i=n?e.reverse():e;return r?Cw(Ww(i))*-Rw-Rw:Cw(i)}function Iw(e){return"bigint"===typeof e?e:e?Ay(e)?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e&&"0x"!==e?qw(Zy(e),xg({isLe:!1,isNegative:!1},t)):Dy(0)}(e.toString()):bg(e)?Dy(e.toString()):Og(e)?e.toBigInt():Tg(e)?Dy(e.toBn().toString()):Dy(e):Dy(0)}const Bw=Dy(256),Yw=Dy(255);function Vw(e,t){const n=xg({bitLength:-1,isLe:!0,isNegative:!1},t),r=Iw(e);if(r===Dw)return function(e){let{bitLength:t=0}=e;return-1===t?new Uint8Array:new Uint8Array(Math.ceil(t/8))}(n);const i=function(e,t){let{isLe:n,isNegative:r}=t;const i=[];for(r&&(e=(e+Rw)*-Rw);e!==Dw;){const t=e%Bw,o=Number(r?t^Yw:t);n?i.push(o):i.unshift(o),e=(e-t)/Bw}return Uint8Array.from(i)}(r,n);if(-1===n.bitLength)return i;const o=Math.ceil((n.bitLength||0)/8),a=new Uint8Array(o);return n.isNegative&&a.fill(255),a.set(i,n.isLe?0:o-i.length),a}const Gw="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),Kw=Dy(`0x${Gw}`),Jw=new yg(Gw,"hex");function Qw(e,t,n){return Bp(Fy(e)&&32===e.length,"Expected seckey to be an Uint8Array with length 32"),Bp(Fy(t)&&32===t.length,"Expected tweak to be an Uint8Array with length 32"),!Ry||n?function(e,t){const n=new yg(t);return Bp(n.cmp(Jw)<0,"Tweak parameter is out of range"),n.iadd(new yg(e)),n.cmp(Jw)>=0&&n.isub(Jw),Bp(!n.isZero(),"Invalid resulting private key"),Xg(n,Bg)}(e,t):function(e,t){let n=qw(t,Wg);return Bp(n<Kw,"Tweak parameter is out of range"),n+=qw(e,Wg),n>=Kw&&(n-=Kw),Bp(n!==Dw,"Invalid resulting private key"),Vw(n,Bg)}(e,t)}const _w=2147483648;function $w(e){if(!e.startsWith("m/"))return!1;const t=e.split("/").slice(1);for(const n of t){const e=/^\d+'?$/.test(n)?parseInt(n.replace(/'$/,""),10):Number.NaN;if(isNaN(e)||e>=_w||e<0)return!1}return!0}const ex=xm("Bitcoin seed");function tx(e,t){return{chainCode:t,publicKey:sg(e).publicKey,secretKey:e}}function nx(e,t){const n=Xg(t,qg),r=t>=_w?qy(new Uint8Array(1),e.secretKey,n):qy(e.publicKey,n);try{const t=Zw(e.chainCode,r,512);return tx(Qw(e.secretKey,t.slice(0,32)),t.slice(32))}catch(i){return nx(e,t+1)}}const rx=Fg(xm("Secp256k1HDKD"));function ix(e,t){return(n,r)=>{let{chainCode:i,isHard:o}=r;return Bp(o,"A soft key was found in the path and is not supported"),e(t(n.secretKey.subarray(0,32),i))}}const ox=ix(sg,(function(e,t){return Bp(Fy(t)&&32===t.length,"Invalid chainCode passed to derive"),Uv(qy(rx,e,t),256)})),ax=Fg(xm("Ed25519HDKD"));const sx=ix(ug,(function(e,t){return Bp(Fy(t)&&32===t.length,"Invalid chainCode passed to derive"),Uv(qy(ax,e,t))}));function lx(e){return(t,n)=>(Bp(Fy(n)&&32===n.length,"Invalid chainCode passed to derive"),cg(e(function(e){let{publicKey:t,secretKey:n}=e;return qy(n,t).slice()}(t),n)))}const ux=lx(cy),cx=lx(fy);const fx={ecdsa:ox,ed25519:sx,ethereum:ox,sr25519:function(e,t){let{chainCode:n,isSoft:r}=t;return r?cx(e,n):ux(e,n)}};function dx(e,t,n){const r=fx[n];let i=e;for(const o of t)i=r(i,o);return i}const[hx,px,mx]=[[],[],[]],yx=BigInt(0),vx=BigInt(1),bx=BigInt(2),gx=BigInt(7),wx=BigInt(256),xx=BigInt(113);for(let n=0,Rz=vx,Uz=1,Fz=0;n<24;n++){[Uz,Fz]=[Fz,(2*Uz+3*Fz)%5],hx.push(2*(5*Fz+Uz)),px.push((n+1)*(n+2)/2%64);let e=yx;for(let t=0;t<7;t++)Rz=(Rz<<vx^(Rz>>gx)*xx)%wx,Rz&bx&&(e^=vx<<(vx<<BigInt(t))-vx);mx.push(e)}const[Px,kx]=pv(mx,!0),zx=(e,t,n)=>n>32?((e,t,n)=>t<<n-32|e>>>64-n)(e,t,n):((e,t,n)=>e<<n|t>>>32-n)(e,t,n),Mx=(e,t,n)=>n>32?((e,t,n)=>e<<n-32|t>>>64-n)(e,t,n):((e,t,n)=>t<<n|e>>>32-n)(e,t,n);class Nx extends ov{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:24;if(super(),this.blockLen=e,this.suffix=t,this.outputLen=n,this.enableXOF=r,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,rv(n),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=$y(this.state)}keccak(){!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:24;const n=new Uint32Array(10);for(let r=24-t;r<24;r++){for(let r=0;r<10;r++)n[r]=e[r]^e[r+10]^e[r+20]^e[r+30]^e[r+40];for(let r=0;r<10;r+=2){const t=(r+8)%10,i=(r+2)%10,o=n[i],a=n[i+1],s=zx(o,a,1)^n[t],l=Mx(o,a,1)^n[t+1];for(let n=0;n<50;n+=10)e[r+n]^=s,e[r+n+1]^=l}let t=e[2],i=e[3];for(let n=0;n<24;n++){const r=px[n],o=zx(t,i,r),a=Mx(t,i,r),s=hx[n];t=e[s],i=e[s+1],e[s]=o,e[s+1]=a}for(let r=0;r<50;r+=10){for(let t=0;t<10;t++)n[t]=e[r+t];for(let t=0;t<10;t++)e[r+t]^=~n[(t+2)%10]&n[(t+4)%10]}e[0]^=Px[r],e[1]^=kx[r]}n.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){if(this.destroyed)throw new Error("instance is destroyed");if(this.finished)throw new Error("digest() was already called");const{blockLen:t,state:n}=this,r=(e=nv(e)).length;for(let i=0;i<r;){const o=Math.min(t-this.pos,r-i);for(let t=0;t<o;t++)n[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:n,blockLen:r}=this;e[n]^=t,0!==(128&t)&&n===r-1&&this.keccak(),e[r-1]^=128,this.keccak()}writeInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array))throw new Error("Keccak: invalid output buffer");this.finish();for(let t=0,n=e.length;t<n;){this.posOut>=this.blockLen&&this.keccak();const r=Math.min(this.blockLen-this.posOut,n-t);e.set(this.state.subarray(this.posOut,this.posOut+r),t),this.posOut+=r,t+=r}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return rv(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(e.length<this.outputLen)throw new Error("Keccak: invalid output buffer");if(this.finished)throw new Error("digest() was already called");return this.finish(),this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:n,outputLen:r,rounds:i,enableXOF:o}=this;return e||(e=new Nx(t,n,r,o,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=n,e.outputLen=r,e.enableXOF=o,e.destroyed=this.destroyed,e}}const Ox=(e,t,n)=>sv((()=>new Nx(t,e,n))),Tx=(Ox(6,144,28),Ox(6,136,32),Ox(6,104,48),Ox(6,72,64),Ox(1,144,28),Ox(1,136,32)),jx=(Ox(1,104,48),Ox(1,72,64)),Lx=(e,t,n)=>lv((function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new Nx(t,e,void 0!==r.dkLen?r.dkLen:n,!0)})),Ex=(Lx(31,168,16),Lx(31,136,32),Rv({256:wy,512:xy},{256:Tx,512:jx}));Dv(256,Ex),Dv(512,Ex),Zv(Ex);function Hx(e,t){if(65===e.length)return e.subarray(1);if(Bp(33===e.length,"Invalid publicKey provided"),!Ry||!t&&Ny())return sy(e).subarray(1);const{x:n,y:r}=Pb.fromHex(e);return qy(Xg(n,Bg),Xg(r,Bg))}function Xx(e){if(!e)return"0x";const t=Wy(e);Bp([20,32,33,65].includes(t.length),"Invalid address or publicKey passed");const n=Sv(([33,65].includes((r=t).length)&&(r=Ex(Hx(r))),r.slice(-20)),-1,!1);var r;const i=Sv(Ex(n),-1,!1);let o="";for(let a=0;a<40;a++)o=`${o}${parseInt(i[a],16)>7?n[a].toUpperCase():n[a]}`;return`0x${o}`}function Ax(e,t,n){return"keccak"===e?Ex(t,void 0,n):Uv(t,void 0,void 0,n)}function Sx(e,t){let{secretKey:n}=t,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"blake2",i=arguments.length>3?arguments[3]:void 0;Bp(32===(null===n||void 0===n?void 0:n.length),"Expected valid secp256k1 secretKey, 32-bytes");const o=Ax(r,e,i);if(!Ry||!i&&Ny())return uy(o,n);const[a,s]=ig(o,n,{canonical:!0,recovered:!0}),{r:l,s:u}=Mb.fromHex(a);return qy(Xg(l,Bg),Xg(u,Bg),new Uint8Array([s||0]))}function Zx(e,t,n,r){return lg.box.open(e,t,n,r)||null}var Dx=n(686);function Rx(e){return Dx.convertSecretKey(e)}function Ux(e){return function(e,t){return Bp(!Ip(e)&&!qp(e),t),e}(Dx.convertPublicKey(e),"Unable to convert publicKey to ed25519")}function Fx(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:dw(24);return{nonce:r,sealed:lg.box(e,r,n,t)}}function Wx(e,t){return 33===e.length?e:(Bp(65===e.length,"Invalid publicKey provided"),!Ry||!t&&Ny()?ay(e):Pb.fromHex(e).toRawBytes(!0))}const Cx=Wy("\x19Ethereum Signed Message:\n"),qx=Wy("<Bytes>"),Ix=Wy("</Bytes>"),Bx=qx.length+Ix.length;function Yx(e,t){return e.length>=Bx&&Cy(e.subarray(0,qx.length),qx)&&Cy(e.slice(-Ix.length),Ix)||t&&e.length>=Cx.length&&Cy(e.subarray(0,Cx.length),Cx)}function Vx(e,t,n,r){const i=Wy(e),o=Wy(n),a=Wy(t);return Bp(32===o.length,(()=>`Invalid publicKey, received ${o.length}, expected 32`)),Bp(64===a.length,(()=>`Invalid signature, received ${a.length} bytes, expected 64`)),!r&&Ny()?iy(a,i,o):lg.sign.detached.verify(i,a,o)}function Gx(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"blake2",i=arguments.length>4?arguments[4]:void 0;const o=Wy(t).subarray(0,64),a=Wy(e),s=!Ry||!i&&Ny()?ly(a,o,n):_b(a,Mb.fromCompact(o).toRawBytes(),n);return Bp(s,"Unable to recover publicKey from signature"),"keccak"===r?Hx(s,i):Wx(s,i)}function Kx(e,t,n){const r=Wy(n),i=Wy(t);return Bp(32===r.length,(()=>`Invalid publicKey, received ${r.length} bytes, expected 32`)),Bp(64===i.length,(()=>`Invalid signature, received ${i.length} bytes, expected 64`)),py(i,Wy(e),r)}const Jx=e=>(t,n,r)=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"blake2",i=arguments.length>4?arguments[4]:void 0;const o=Wy(t);Bp(65===o.length,`Expected signature with 65 bytes, ${o.length} found instead`);const a=Gx(Ax(r,e),o,o[64],r,i),s=Ax(r,a,i),l=Wy(n);return Cy(a,l)||("keccak"===r?Cy(s.slice(-20),l.slice(-20)):Cy(s,l))}(t,n,r,e),Qx=[["ecdsa",Jx("blake2")],["ethereum",Jx("keccak")]],_x=[["ed25519",Vx],["sr25519",Kx],...Qx],$x=["ed25519","sr25519","ecdsa"];function eP(e,t){let{message:n,publicKey:r,signature:i}=t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_x;return e.isValid=o.some((t=>{let[o,a]=t;try{if(a(n,i,r))return e.crypto=o,!0}catch(s){}return!1})),e}function tP(e,t){let{message:n,publicKey:r,signature:i}=t;Bp([0,1,2].includes(i[0]),(()=>`Unknown crypto type, expected signature prefix [0..2], found ${i[0]}`));const o=$x[i[0]]||"none";e.crypto=o;try{e.isValid={ecdsa:()=>eP(e,{message:n,publicKey:r,signature:i.subarray(1)},Qx).isValid,ed25519:()=>Vx(n,i.subarray(1),r),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>Kx(n,i.subarray(1),r)}[o]()}catch(a){}return e}function nP(e,t,n){const r=Wy(t);Bp([64,65,66].includes(r.length),(()=>`Invalid signature length, expected [64..66] bytes, found ${r.length}`));const i=Qv(n),o={message:Wy(e),publicKey:i,signature:r},a={crypto:"none",isValid:!1,isWrapped:Yx(o.message,!0),publicKey:i},s=Yx(o.message,!1),l=function(e){return[0,1,2].includes(e[0])&&[65,66].includes(e.length)?tP:eP}(r);return l(a,o),"none"!==a.crypto||a.isWrapped&&!s?a:(o.message=s?function(e){const t=Wy(e);return Yx(t,!1)?t.subarray(qx.length,t.length-Ix.length):t}(o.message):function(e){const t=Wy(e);return Yx(t,!0)?t:qy(qx,t,Ix)}(o.message),l(a,o))}const rP=new Uint8Array;function iP(e,t){let{secretKey:n}=t,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:rP,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:rP;return Bp(64===(null===n||void 0===n?void 0:n.length),"Invalid secretKey, expected 64-bytes"),my(n,Wy(r),Wy(e),Wy(i))}const oP=new Uint8Array;function aP(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:oP,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:oP;const o=Wy(n),a=Wy(t);return Bp(32===o.length,"Invalid publicKey, expected 32-bytes"),Bp(96===a.length,"Invalid vrfSign output, expected 96 bytes"),yy(o,Wy(r),Wy(e),Wy(i),a)}function sP(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Math.ceil(t/8);if(-1===t||e.length===r)return e;if(e.length>r)return e.subarray(0,r);const i=new Uint8Array(r);return i.set(e,n?0:r-e.length),i}function lP(e,t,n){return lg.secretbox.open(e,t,n)||null}const uP={isLe:!0,isNegative:!1};function cP(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:uP;return zg(Sv(e),t)}const fP={N:32768,p:1,r:8};function dP(e){const t=e.subarray(0,32),n=cP(e.subarray(32,36),Cg).toNumber(),r=cP(e.subarray(36,40),Cg).toNumber(),i=cP(e.subarray(40,44),Cg).toNumber();return Bp(n===fP.N&&r===fP.p&&i===fP.r,"Invalid injected scrypt params found"),{params:{N:n,p:r,r:i},salt:t}}const hP=(e,t)=>e<<t|e>>>32-t;function pP(e,t,n,r,i,o){let a=e[t++]^n[r++],s=e[t++]^n[r++],l=e[t++]^n[r++],u=e[t++]^n[r++],c=e[t++]^n[r++],f=e[t++]^n[r++],d=e[t++]^n[r++],h=e[t++]^n[r++],p=e[t++]^n[r++],m=e[t++]^n[r++],y=e[t++]^n[r++],v=e[t++]^n[r++],b=e[t++]^n[r++],g=e[t++]^n[r++],w=e[t++]^n[r++],x=e[t++]^n[r++],P=a,k=s,z=l,M=u,N=c,O=f,T=d,j=h,L=p,E=m,H=y,X=v,A=b,S=g,Z=w,D=x;for(let R=0;R<8;R+=2)N^=hP(P+A|0,7),L^=hP(N+P|0,9),A^=hP(L+N|0,13),P^=hP(A+L|0,18),E^=hP(O+k|0,7),S^=hP(E+O|0,9),k^=hP(S+E|0,13),O^=hP(k+S|0,18),Z^=hP(H+T|0,7),z^=hP(Z+H|0,9),T^=hP(z+Z|0,13),H^=hP(T+z|0,18),M^=hP(D+X|0,7),j^=hP(M+D|0,9),X^=hP(j+M|0,13),D^=hP(X+j|0,18),k^=hP(P+M|0,7),z^=hP(k+P|0,9),M^=hP(z+k|0,13),P^=hP(M+z|0,18),T^=hP(O+N|0,7),j^=hP(T+O|0,9),N^=hP(j+T|0,13),O^=hP(N+j|0,18),X^=hP(H+E|0,7),L^=hP(X+H|0,9),E^=hP(L+X|0,13),H^=hP(E+L|0,18),A^=hP(D+Z|0,7),S^=hP(A+D|0,9),Z^=hP(S+A|0,13),D^=hP(Z+S|0,18);i[o++]=a+P|0,i[o++]=s+k|0,i[o++]=l+z|0,i[o++]=u+M|0,i[o++]=c+N|0,i[o++]=f+O|0,i[o++]=d+T|0,i[o++]=h+j|0,i[o++]=p+L|0,i[o++]=m+E|0,i[o++]=y+H|0,i[o++]=v+X|0,i[o++]=b+A|0,i[o++]=g+S|0,i[o++]=w+Z|0,i[o++]=x+D|0}function mP(e,t,n,r,i){let o=r+0,a=r+16*i;for(let s=0;s<16;s++)n[a+s]=e[t+16*(2*i-1)+s];for(let s=0;s<i;s++,o+=16,t+=16)pP(n,a,e,t,n,o),s>0&&(a+=16),pP(n,o,e,t+=16,n,a)}function yP(e,t,n){const r=av({dkLen:32,asyncTick:10,maxmem:1073742848},n),{N:i,r:o,p:a,dkLen:s,asyncTick:l,maxmem:u,onProgress:c}=r;if(rv(i),rv(o),rv(a),rv(s),rv(l),rv(u),void 0!==c&&"function"!==typeof c)throw new Error("progressCb should be function");const f=128*o,d=f/4;if(i<=1||0!==(i&i-1)||i>=2**(f/8)||i>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(a<0||a>137438953440/f)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(s<0||s>137438953440)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const h=f*(i+a);if(h>u)throw new Error(`Scrypt: parameters too large, ${h} (128 * r * (N + p)) > ${u} (maxmem)`);const p=nw(gw,e,t,{c:1,dkLen:f*a}),m=$y(p),y=$y(new Uint8Array(f*i)),v=$y(new Uint8Array(f));let b=()=>{};if(c){const e=2*i*a,t=Math.max(Math.floor(e/1e4),1);let n=0;b=()=>{n++,!c||n%t&&n!==e||c(n/e)}}return{N:i,r:o,p:a,dkLen:s,blockSize32:d,V:y,B32:m,B:p,tmp:v,blockMixCb:b,asyncTick:l}}function vP(e,t,n,r,i){const o=nw(gw,e,n,{c:1,dkLen:t});return n.fill(0),r.fill(0),i.fill(0),o}function bP(e,t,n){const{N:r,r:i,p:o,dkLen:a,blockSize32:s,V:l,B32:u,B:c,tmp:f,blockMixCb:d}=yP(e,t,n);for(let h=0;h<o;h++){const e=s*h;for(let t=0;t<s;t++)l[t]=u[e+t];for(let t=0,n=0;t<r-1;t++)mP(l,n,l,n+=s,i),d();mP(l,(r-1)*s,u,e,i),d();for(let t=0;t<r;t++){const t=u[e+s-16]%r;for(let n=0;n<s;n++)f[n]=u[e+n]^l[t*s+n];mP(f,0,u,e,i),d()}}return vP(e,a,c,l,f)}function gP(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:dw(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:fP,r=arguments.length>3?arguments[3]:void 0;const i=Wy(e);return{params:n,password:!Ry||!r&&Ny()?ky(i,t,Math.log2(n.N),n.r,n.p):bP(i,t,xg({dkLen:64},n)),salt:t}}const wP=["scrypt","xsalsa20-poly1305"],xP=["none"];const PP=new Uint8Array([161,35,3,33,0]),kP=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]),zP=kP.length;function MP(e,t,n){const r=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:wP;Bp(e,"No encrypted data available to decode"),Bp(t||!n.includes("xsalsa20-poly1305"),"Password required to decode encrypted data");let r=e;if(t){let i;if(n.includes("scrypt")){const{params:n,salt:r}=dP(e);i=gP(t,r,n).password,e=e.subarray(44)}else i=xm(t);r=lP(e.subarray(24),e.subarray(0,24),sP(i,256,!0))}return Bp(r,"Unable to decode using the supplied passphrase"),r}(t,e,Array.isArray(n)||Ip(n)?n:[n]);Bp(Cy(r.subarray(0,kP.length),kP),"Invalid Pkcs8 header found in body");let i=r.subarray(zP,zP+64),o=zP+64,a=r.subarray(o,o+PP.length);Cy(a,PP)||(o=zP+32,i=r.subarray(zP,o),a=r.subarray(o,o+PP.length),Bp(Cy(a,PP),"Invalid Pkcs8 divider found in body"));const s=o+PP.length;return{publicKey:r.subarray(s,s+32),secretKey:i}}function NP(e,t){let{publicKey:n,secretKey:r}=e;Bp(r,"Expected a valid secretKey to be passed to encode");const i=qy(kP,r,PP,n);if(!t)return i;const{params:o,password:a,salt:s}=gP(t),{encrypted:l,nonce:u}=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:dw(24);return{encrypted:lg.secretbox(e,n,t),nonce:n}}(i,a.subarray(0,32));return qy(function(e,t){let{N:n,p:r,r:i}=t;return qy(e,Xg(n,Ig),Xg(r,Ig),Xg(i,Ig))}(s,o),u,l)}function OP(e,t,n,r){let{address:i,meta:o}=t;return xg(function(e,t,n){return{encoded:mg(e),encoding:{content:t,type:n?wP:xP,version:"3"}}}(n,["pkcs8",e],r),{address:i,meta:o})}const TP=new Uint8Array,jP={ecdsa:sg,ed25519:ug,ethereum:sg,sr25519:fg},LP={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},EP={ecdsa:(e,t)=>Sx(e,t,"blake2"),ed25519:function(e,t,n){let{publicKey:r,secretKey:i}=t;Bp(i,"Expected a valid secretKey");const o=Wy(e);return!n&&Ny()?ry(r,i.subarray(0,32),o):lg.sign.detached(o,i)},ethereum:(e,t)=>Sx(e,t,"keccak"),sr25519:function(e,t){let{publicKey:n,secretKey:r}=t;return Bp(32===(null===n||void 0===n?void 0:n.length),"Expected a valid publicKey, 32-bytes"),Bp(64===(null===r||void 0===r?void 0:r.length),"Expected a valid secretKey, 64-bytes"),hy(n,r,Wy(e))}},HP={ecdsa:e=>e.length>32?Uv(e):e,ed25519:e=>e,ethereum:e=>20===e.length?e:Ex(Hx(e)),sr25519:e=>e};function XP(e){return!e||function(e){for(let t=0;t<e.length;t++)if(e[t])return!1;return!0}(e)}function AP(e,t,n){return Uv(qy(t||"",n||"",e))}function SP(e,t){let{toSS58:n,type:r}=e,{publicKey:i,secretKey:o}=t,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,l=arguments.length>4?arguments[4]:void 0;const u=(e,t)=>{const n=MP(e,t||s,l);if(64===n.secretKey.length)i=n.publicKey,o=n.secretKey;else{const e=jP[r](n.secretKey);i=e.publicKey,o=e.secretKey}},c=e=>(XP(o)&&s&&u(e,s),s=NP({publicKey:i,secretKey:o},e),l=void 0,s),f=()=>{const e=HP[r](i);return"ethereum"===r?Xx(e):n(e)};return{get address(){return f()},get addressRaw(){const e=HP[r](i);return"ethereum"===r?e.slice(-20):e},get isLocked(){return XP(o)},get meta(){return a},get publicKey(){return i},get type(){return r},decodePkcs8:u,decryptMessage:(e,t)=>{Bp(!XP(o),"Cannot encrypt with a locked key pair"),Bp(!["ecdsa","ethereum"].includes(r),"Secp256k1 not supported yet");const n=Wy(e);return Zx(n.slice(24,n.length),n.slice(0,24),Ux(Wy(t)),Rx(o))},derive:(e,t)=>{Bp("ethereum"!==r,"Unable to derive on this keypair"),Bp(!XP(o),"Cannot derive on a locked keypair");const{path:a}=Jg(e),s=dx({publicKey:i,secretKey:o},a,r);return SP({toSS58:n,type:r},s,t,null)},encodePkcs8:e=>c(e),encryptMessage:(e,t,n)=>{Bp(!XP(o),"Cannot encrypt with a locked key pair"),Bp(!["ecdsa","ethereum"].includes(r),"Secp256k1 not supported yet");const{nonce:i,sealed:a}=Fx(Wy(e),Rx(o),Ux(Wy(t)),n);return qy(i,a)},lock:()=>{o=new Uint8Array},setMeta:e=>{a=xg({},a,e)},sign:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Bp(!XP(o),"Cannot sign with a locked key pair"),qy(t.withType?LP[r]:TP,EP[r](Wy(e),{publicKey:i,secretKey:o}))},toJson:e=>{const t=["ecdsa","ethereum"].includes(r)?20===i.length?Sv(i):Sv(Wx(i)):f();return OP(r,{address:t,meta:a},c(e),!!e)},unlock:e=>u(e),verify:(e,t,n)=>nP(e,t,HP[r](Wy(n))).isValid,vrfSign:(e,t,n)=>{if(Bp(!XP(o),"Cannot sign with a locked key pair"),"sr25519"===r)return iP(e,{secretKey:o},t,n);const a=EP[r](Wy(e),{publicKey:i,secretKey:o});return qy(AP(a,t,n),a)},vrfVerify:(e,t,n,o,a)=>{if("sr25519"===r)return aP(e,t,i,o,a);return nP(e,qy(LP[r],t.subarray(32)),HP[r](Wy(n))).isValid&&Cy(t.subarray(0,32),AP(t.subarray(32),o,a))}}}class ZP{#n={};add(e){return this.#n[Qv(e.address).toString()]=e,e}all(){return Object.values(this.#n)}get(e){const t=this.#n[Qv(e).toString()];return Bp(t,(()=>`Unable to retrieve keypair '${Fy(e)||Ay(e)?Sv(Wy(e)):e}'`)),t}remove(e){delete this.#n[Qv(e).toString()]}}const DP={ecdsa:e=>sg(e),ed25519:e=>ug(e),ethereum:e=>sg(e),sr25519:e=>fg(e)};function RP(e){let{publicKey:t}=e;return t}class UP{#r;#i;#o;decodeAddress=Qv;constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.type=e.type||"ed25519",Bp(["ecdsa","ethereum","ed25519","sr25519"].includes(e.type||"undefined"),(()=>`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${e.type||"unknown"}`)),this.#r=new ZP,this.#o=e.ss58Format,this.#i=e.type}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return this.#i}addPair(e){return this.#r.add(e)}addFromAddress(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.type,i=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;const a=this.decodeAddress(e,i);return this.addPair(SP({toSS58:this.encodeAddress,type:r},{publicKey:a,secretKey:new Uint8Array},t,n,o))}addFromJson(e,t){return this.addPair(this.createFromJson(e,t))}addFromMnemonic(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addFromUri(e,t,n)}addFromPair(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addPair(this.createFromPair(e,t,n))}addFromSeed(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addPair(SP({toSS58:this.encodeAddress,type:n},DP[n](e),t,null))}addFromUri(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addPair(this.createFromUri(e,t,n))}createFromJson(e,t){let{address:n,encoded:r,encoding:{content:i,type:o,version:a},meta:s}=e;Bp("3"!==a||"pkcs8"===i[0],(()=>`Unable to decode non-pkcs8 type, [${i.join(",")}] found}`));const l="0"!==a&&Array.isArray(i)?i[1]:this.type,u=Array.isArray(o)?o:[o];Bp(["ed25519","sr25519","ecdsa","ethereum"].includes(l),(()=>`Unknown crypto type ${l}`));const c=Ay(n)?Zy(n):this.decodeAddress(n,t),f=Ay(r)?Zy(r):pg(r);return SP({toSS58:this.encodeAddress,type:l},{publicKey:c,secretKey:new Uint8Array},s,f,u)}createFromPair(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return SP({toSS58:this.encodeAddress,type:n},e,t,null)}createFromUri(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;const r=e.startsWith("//")?`bottom drive obey lake curtain smoke basket hold race lonely fit walk${e}`:e,{derivePath:i,password:o,path:a,phrase:s}=function(e){const t=e.match(Qg);Bp(!qp(t),"Unable to match provided value to a secret URI");const[,n,,r,,,i]=t,{path:o}=Jg(r);return{derivePath:r,password:i,path:o,phrase:n}}(r);let l;const u=Ay(s,256);if(u)l=Zy(s);else{const e=s.split(" ");[12,15,18,21,24].includes(e.length)?l="ethereum"===n?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32;return Bp(Ew(e),"Invalid bip39 mnemonic specified"),Bp([32,64].includes(r),(()=>`Invalid seed length ${r}, expected 32 or 64`)),32===r?!Ry||!n&&Ny()?ey(e,t):jw(e,t).subarray(0,32):jw(e,t)}(s,"",!1,64):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0;if(Bp(Ew(e),"Invalid bip39 mnemonic specified"),!n&&Ny())return $m(e,t);const r=Hw(e),i=xm(`mnemonic${t}`);return hw(r,i).password.slice(0,32)}(s,o):(Bp(s.length<=32,"specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes"),l=xm(s.padEnd(32)))}const c="ethereum"===n?u?DP[n](l):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=Zw(ex,e,512);let r=tx(n.slice(0,32),n.slice(32));if(!t||"m"===t||"M"===t||"m'"===t||"M'"===t)return r;Bp($w(t),"Invalid derivation path");const i=t.split("/").slice(1);for(const o of i)r=nx(r,parseInt(o,10)+(o.length>1&&o.endsWith("'")?_w:0));return r}(l,i.substring(1)):dx(DP[n](l),a,n);return SP({toSS58:this.encodeAddress,type:n},c,t,null)}encodeAddress=(e,t)=>"ethereum"===this.type?Xx(e):_v(e,Ip(t)?this.#o:t);getPair(e){return this.#r.get(e)}getPairs(){return this.#r.all()}getPublicKeys(){return this.#r.all().map(RP)}removePair(e){this.#r.remove(e)}setSS58Format(e){this.#o=e}toJson(e,t){return this.#r.get(e).toJson(t)}}const FP=async()=>{let e=new UP({type:"sr25519"}),t=[],n=["//Alice","//Bob","//Charlie","//Dave","//Eve","//Fredie"];for(let i of n)t.push({account:e.createFromUri(i,{name:i.slice(2)})});const r=await function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(!e)throw new Error("You must pass a name for your app to the web3Enable function");const n=t.length?Promise.all(t.map((e=>e().catch((()=>!1))))):Promise.resolve([!0]);return ob=$v((()=>n.then((()=>ab(e).then((e=>e.filter((e=>!!e[1])).map((e=>{let[t,n]=e;return n.accounts.subscribe||(n.accounts.subscribe=e=>(n.accounts.get().then(e).catch(console.error),()=>{})),{...t,...n}})))).catch((()=>[])).then((e=>{const t=e.map((e=>{let{name:t,version:n}=e;return`${t}/${n}`}));return ib=tb(),console.log(`web3Enable: Enabled ${e.length} extension${1!==e.length?"s":""}: ${t.join(", ")}`),e})))))),ob}("tw3t debugger");if(console.log(r),0===r.length)return console.log("no signer extension was found"),t;{const n=await sb();console.log(n);for(const r of n){const n={address:r.address,meta:{...r.meta,isInjected:!0},type:r.type},i=e.addFromAddress(n.address,n.meta,null,n.type);if(null!==i&&void 0!==i&&i.address){const e=await ub(i.address);t.push({account:i,signer:e.signer})}}return t}};let WP=()=>{let e="Welcome to example.dapp.io!\nSign this message and accept the example.dapp.io Terms of Service: example.dapp.io/terms",t=new Date;t.setHours(t.getHours()+24);let n=new Nc({address:"5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty"},{algorithm:"sr25519",token_type:"TW3T",address_type:"ss58"},e).setAudience("uri:test").setExpiration(t),r={information:zc(n.claimInfo),specification:zc(n.sigSpec)};return{statement:e,tomlContent:kc.stringify(r)}};function CP(e){var t,n;let r="";return null!==e&&void 0!==e&&null!==(t=e.meta)&&void 0!==t&&t.name&&(r+=`(${null===e||void 0===e||null===(n=e.meta)||void 0===n?void 0:n.name}) `),null!==e&&void 0!==e&&e.address&&(r+=`${function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;return e.length<=2+2*t?e.toString():`${e.substr(0,t)}\u2026${e.slice(-t)}`}(null===e||void 0===e?void 0:e.address)}`),r}function qP(e){let{signingAccounts:t,selectedSigningAccount:n,selectHandler:r}=e;t=t.filter((e=>{var t;return null===e||void 0===e||null===(t=e.account)||void 0===t?void 0:t.address}));let i=CP(null===n||void 0===n?void 0:n.account);return(0,mt.jsx)(Fn,{id:"dropdown-item-button",variant:"transparent",className:"border border-primary rounded",title:i,onSelect:e=>r&&r(t[e]),children:t.map(((e,t)=>{let n=CP(null===e||void 0===e?void 0:e.account);return(0,mt.jsx)(Sn.Item,{as:"button",eventKey:t,children:n})}))})}function IP(e){if(null!==e&&void 0!==e&&e.current){e.current.style={...e.current.style,height:"0px"};const t=e.current.scrollHeight||0;e.current.style.height=t+"px"}}const BP=function(){let{statement:e,tomlContent:t}=WP()||{};console.log(WP());let[n,i]=(0,r.useState)([]),[o,a]=(0,r.useState)(),[s,l]=(0,r.useState)(e),[u,c]=(0,r.useState)(t),[f,d]=(0,r.useState)(),[h,p]=(0,r.useState)(""),[m,y]=(0,r.useState)(),[v,b]=(0,r.useState)(),g=(0,r.useRef)(),w=(0,r.useRef)(),x=(0,r.useRef)();(0,r.useEffect)((()=>{(async()=>(await Oy(),FP()))().then((e=>{var t,n,r,o,s;e&&console.log((null===(t=e[0])||void 0===t?void 0:t.address)||"noaddress"),i(e),(null===e||void 0===e||null===(n=e[0])||void 0===n||null===(r=n.account)||void 0===r?void 0:r.address)&&k(null===e||void 0===e||null===(o=e[0])||void 0===o||null===(s=o.account)||void 0===s?void 0:s.address),a(e[0])}))}),[]),(0,r.useEffect)((()=>{let e;d(""),IP(g),IP(w),p("");let t=!1;try{e=kc.parse(u)}catch(n){d((null===n||void 0===n?void 0:n.message)||n),t=!0}}),[o,u,s]),(0,r.useEffect)((()=>{y(""),h&&(async e=>{let t=new Wp,n=new Lc(t);return await n.verify(e)})(h).then((e=>{console.log(e),b(!0)})).catch((e=>y((null===e||void 0===e?void 0:e.message)||e)))}),[h]);const P=()=>{if(!f&&o){let e=kc.parse(u);(async(e,t,n,r)=>{let i=new Nc(t,n,e),o=new Wc(r),a=new Tc(o,i),{base64Content:s,base64Sig:l}=await a.getSignature();return`${s}.${l}`})(s,null===e||void 0===e?void 0:e.information,null===e||void 0===e?void 0:e.specification,o).then((e=>p(e))).catch((e=>{y((null===e||void 0===e?void 0:e.message)||e)}))}},k=e=>{!f&&c((t=>{let n=t;try{let r=kc.parse(t);r.information.address=e,n=kc.stringify(r)}catch(r){console.log("can not change the toml.information.address since toml content is not in a valid toml format.")}return n}))};return(0,mt.jsx)(Cn,{className:"py-5",children:(0,mt.jsxs)(In,{children:[(0,mt.jsxs)(Yn,{xl:"12",className:"text-break d-flex flex-column py-2",children:[(0,mt.jsxs)(Pr.Group,{className:"my-2",children:[(0,mt.jsx)(Pr.Label,{children:(0,mt.jsx)("strong",{children:"Statement"})}),(0,mt.jsx)(Pr.Control,{as:"textarea",ref:g,className:"w-100 fw-light",value:s,onChange:e=>{var t;return l(null===e||void 0===e||null===(t=e.target)||void 0===t?void 0:t.value)}})]}),(0,mt.jsxs)(Pr.Group,{className:"my-2",children:[(0,mt.jsx)(Pr.Label,{children:(0,mt.jsx)("strong",{children:"Toml Content"})}),(0,mt.jsx)(Pr.Control,{as:"textarea",ref:w,className:"w-100 fw-light",value:u,onChange:e=>{var t;return c(null===e||void 0===e||null===(t=e.target)||void 0===t?void 0:t.value)}}),f&&(0,mt.jsx)(Pr.Text,{className:"text-danger",children:f})]})]}),(0,mt.jsx)(Yn,{xl:"12",className:"d-flex justify-content-center py-2",children:(0,mt.jsx)(qP,{signingAccounts:n,selectedSigningAccount:o,selectHandler:e=>(e=>{var t,n;a(e),(null===e||void 0===e||null===(t=e.account)||void 0===t?void 0:t.address)&&k(null===e||void 0===e||null===(n=e.account)||void 0===n?void 0:n.address)})(e)})}),(0,mt.jsx)(Yn,{xl:"12",className:"d-flex justify-content-center py-2",children:(0,mt.jsx)(Mn,{className:"ms-2",onClick:()=>{P()},children:"Sign token"})}),(0,mt.jsx)(Yn,{xl:"12",className:"text-break py-2",children:(0,mt.jsxs)(Pr.Group,{className:"my-2",children:[(0,mt.jsx)(Pr.Label,{children:(0,mt.jsx)("strong",{children:"Encoded TW3T"})}),(0,mt.jsx)(Pr.Control,{as:"textarea",ref:x,style:{resize:"none"},className:"w-100 fw-light",value:h}),m&&(0,mt.jsx)(Pr.Text,{className:"text-danger",children:m})]})})]})})},YP=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:r,as:i,...o}=e;n=cn(n,"navbar-brand");const a=i||(o.href?"a":"span");return(0,mt.jsx)(a,{...o,ref:t,className:l()(r,n)})}));YP.displayName="NavbarBrand";const VP=YP;function GP(e,t){return function(e){var t=ot(e);return t&&t.defaultView||window}(e).getComputedStyle(e,t)}var KP=/([A-Z])/g;var JP=/^ms-/;function QP(e){return function(e){return e.replace(KP,"-$1").toLowerCase()}(e).replace(JP,"-ms-")}var _P=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;const $P=function(e,t){var n="",r="";if("string"===typeof t)return e.style.getPropertyValue(QP(t))||GP(e).getPropertyValue(QP(t));Object.keys(t).forEach((function(i){var o=t[i];o||0===o?!function(e){return!(!e||!_P.test(e))}(i)?n+=QP(i)+": "+o+";":r+=i+"("+o+") ":e.style.removeProperty(QP(i))})),r&&(n+="transform: "+r+";"),e.style.cssText+=";"+n};function ek(e,t){return ek=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},ek(e,t)}const tk=!1,nk=r.createContext(null);var rk="unmounted",ik="exited",ok="entering",ak="entered",sk="exiting",lk=function(e){var t,n;function o(t,n){var r;r=e.call(this,t,n)||this;var i,o=n&&!n.isMounting?t.enter:t.appear;return r.appearStatus=null,t.in?o?(i=ik,r.appearStatus=ok):i=ak:i=t.unmountOnExit||t.mountOnEnter?rk:ik,r.state={status:i},r.nextCallback=null,r}n=e,(t=o).prototype=Object.create(n.prototype),t.prototype.constructor=t,ek(t,n),o.getDerivedStateFromProps=function(e,t){return e.in&&t.status===rk?{status:ik}:null};var a=o.prototype;return a.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},a.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?n!==ok&&n!==ak&&(t=ok):n!==ok&&n!==ak||(t=sk)}this.updateStatus(!1,t)},a.componentWillUnmount=function(){this.cancelNextCallback()},a.getTimeouts=function(){var e,t,n,r=this.props.timeout;return e=t=n=r,null!=r&&"number"!==typeof r&&(e=r.exit,t=r.enter,n=void 0!==r.appear?r.appear:t),{exit:e,enter:t,appear:n}},a.updateStatus=function(e,t){void 0===e&&(e=!1),null!==t?(this.cancelNextCallback(),t===ok?this.performEnter(e):this.performExit()):this.props.unmountOnExit&&this.state.status===ik&&this.setState({status:rk})},a.performEnter=function(e){var t=this,n=this.props.enter,r=this.context?this.context.isMounting:e,o=this.props.nodeRef?[r]:[i.findDOMNode(this),r],a=o[0],s=o[1],l=this.getTimeouts(),u=r?l.appear:l.enter;!e&&!n||tk?this.safeSetState({status:ak},(function(){t.props.onEntered(a)})):(this.props.onEnter(a,s),this.safeSetState({status:ok},(function(){t.props.onEntering(a,s),t.onTransitionEnd(u,(function(){t.safeSetState({status:ak},(function(){t.props.onEntered(a,s)}))}))})))},a.performExit=function(){var e=this,t=this.props.exit,n=this.getTimeouts(),r=this.props.nodeRef?void 0:i.findDOMNode(this);t&&!tk?(this.props.onExit(r),this.safeSetState({status:sk},(function(){e.props.onExiting(r),e.onTransitionEnd(n.exit,(function(){e.safeSetState({status:ik},(function(){e.props.onExited(r)}))}))}))):this.safeSetState({status:ik},(function(){e.props.onExited(r)}))},a.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},a.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},a.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,t.nextCallback=null,e(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},a.onTransitionEnd=function(e,t){this.setNextCallback(t);var n=this.props.nodeRef?this.props.nodeRef.current:i.findDOMNode(this),r=null==e&&!this.props.addEndListener;if(n&&!r){if(this.props.addEndListener){var o=this.props.nodeRef?[this.nextCallback]:[n,this.nextCallback],a=o[0],s=o[1];this.props.addEndListener(a,s)}null!=e&&setTimeout(this.nextCallback,e)}else setTimeout(this.nextCallback,0)},a.render=function(){var e=this.state.status;if(e===rk)return null;var t=this.props,n=t.children,i=(t.in,t.mountOnEnter,t.unmountOnExit,t.appear,t.enter,t.exit,t.timeout,t.addEndListener,t.onEnter,t.onEntering,t.onEntered,t.onExit,t.onExiting,t.onExited,t.nodeRef,v(t,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]));return r.createElement(nk.Provider,{value:null},"function"===typeof n?n(e,i):r.cloneElement(r.Children.only(n),i))},o}(r.Component);function uk(){}lk.contextType=nk,lk.propTypes={},lk.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:uk,onEntering:uk,onEntered:uk,onExit:uk,onExiting:uk,onExited:uk},lk.UNMOUNTED=rk,lk.EXITED=ik,lk.ENTERING=ok,lk.ENTERED=ak,lk.EXITING=sk;const ck=lk;function fk(e,t,n){void 0===n&&(n=5);var r=!1,i=setTimeout((function(){r||function(e,t,n,r){if(void 0===n&&(n=!1),void 0===r&&(r=!0),e){var i=document.createEvent("HTMLEvents");i.initEvent(t,n,r),e.dispatchEvent(i)}}(e,"transitionend",!0)}),t+n),o=it(e,"transitionend",(function(){r=!0}),{once:!0});return function(){clearTimeout(i),o()}}function dk(e,t,n,r){null==n&&(n=function(e){var t=$P(e,"transitionDuration")||"",n=-1===t.indexOf("ms")?1e3:1;return parseFloat(t)*n}(e)||0);var i=fk(e,n,r),o=it(e,"transitionend",t);return function(){i(),o()}}function hk(e,t){const n=$P(e,t)||"",r=-1===n.indexOf("ms")?1e3:1;return parseFloat(n)*r}function pk(e,t){const n=hk(e,"transitionDuration"),r=hk(e,"transitionDelay"),i=dk(e,(n=>{n.target===e&&(i(),t(n))}),n+r)}const mk=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((e=>null!=e)).reduce(((e,t)=>{if("function"!==typeof t)throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return null===e?t:function(){for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];e.apply(this,r),t.apply(this,r)}}),null)};function yk(e){e.offsetHeight}const vk=r.forwardRef(((e,t)=>{let{onEnter:n,onEntering:o,onEntered:a,onExit:s,onExiting:l,onExited:u,addEndListener:c,children:f,childRef:d,...h}=e;const p=(0,r.useRef)(null),m=mn(p,d),y=e=>{var t;m((t=e)&&"setState"in t?i.findDOMNode(t):null!=t?t:null)},v=e=>t=>{e&&p.current&&e(p.current,t)},b=(0,r.useCallback)(v(n),[n]),g=(0,r.useCallback)(v(o),[o]),w=(0,r.useCallback)(v(a),[a]),x=(0,r.useCallback)(v(s),[s]),P=(0,r.useCallback)(v(l),[l]),k=(0,r.useCallback)(v(u),[u]),z=(0,r.useCallback)(v(c),[c]);return(0,mt.jsx)(ck,{ref:t,...h,onEnter:b,onEntered:w,onEntering:g,onExit:x,onExited:k,onExiting:P,addEndListener:z,nodeRef:p,children:"function"===typeof f?(e,t)=>f(e,{...t,ref:y}):r.cloneElement(f,{ref:y})})})),bk=vk,gk={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};function wk(e,t){const n=t[`offset${e[0].toUpperCase()}${e.slice(1)}`],r=gk[e];return n+parseInt($P(t,r[0]),10)+parseInt($P(t,r[1]),10)}const xk={[ik]:"collapse",[sk]:"collapsing",[ok]:"collapsing",[ak]:"collapse show"},Pk={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,getDimensionValue:wk},kk=r.forwardRef(((e,t)=>{let{onEnter:n,onEntering:i,onEntered:o,onExit:a,onExiting:s,className:u,children:c,dimension:f="height",getDimensionValue:d=wk,...h}=e;const p="function"===typeof f?f():f,m=(0,r.useMemo)((()=>mk((e=>{e.style[p]="0"}),n)),[p,n]),y=(0,r.useMemo)((()=>mk((e=>{const t=`scroll${p[0].toUpperCase()}${p.slice(1)}`;e.style[p]=`${e[t]}px`}),i)),[p,i]),v=(0,r.useMemo)((()=>mk((e=>{e.style[p]=null}),o)),[p,o]),b=(0,r.useMemo)((()=>mk((e=>{e.style[p]=`${d(p,e)}px`,yk(e)}),a)),[a,d,p]),g=(0,r.useMemo)((()=>mk((e=>{e.style[p]=null}),s)),[p,s]);return(0,mt.jsx)(bk,{ref:t,addEndListener:pk,...h,"aria-expanded":h.role?h.in:null,onEnter:m,onEntering:y,onEntered:v,onExit:b,onExiting:g,childRef:c.ref,children:(e,t)=>r.cloneElement(c,{...t,className:l()(u,c.props.className,xk[e],"width"===p&&"collapse-horizontal")})})}));kk.defaultProps=Pk;const zk=kk,Mk=r.forwardRef(((e,t)=>{let{children:n,bsPrefix:i,...o}=e;i=cn(i,"navbar-collapse");const a=(0,r.useContext)(gn);return(0,mt.jsx)(zk,{in:!(!a||!a.expanded),...o,children:(0,mt.jsx)("div",{ref:t,className:i,children:n})})}));Mk.displayName="NavbarCollapse";const Nk=Mk,Ok=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:i,children:o,label:a,as:s="button",onClick:u,...c}=e;n=cn(n,"navbar-toggler");const{onToggle:f,expanded:d}=(0,r.useContext)(gn)||{},h=T((e=>{u&&u(e),f&&f()}));return"button"===s&&(c.type="button"),(0,mt.jsx)(s,{...c,ref:t,onClick:h,"aria-label":a,className:l()(i,n,!d&&"collapsed"),children:o||(0,mt.jsx)("span",{className:`${n}-icon`})})}));Ok.displayName="NavbarToggle",Ok.defaultProps={label:"Toggle navigation"};const Tk=Ok;function jk(e){void 0===e&&(e=ot());try{var t=e.activeElement;return t&&t.nodeName?t:null}catch(Dz){return e.body}}function Lk(e){var t=function(e){var t=(0,r.useRef)(e);return t.current=e,t}(e);(0,r.useEffect)((function(){return function(){return t.current()}}),[])}const Ek=Ct("modal-open");const Hk=class{constructor(){let{ownerDocument:e,handleContainerOverflow:t=!0,isRTL:n=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.handleContainerOverflow=t,this.isRTL=n,this.modals=[],this.ownerDocument=e}getScrollbarWidth(){return function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document;const t=e.defaultView;return Math.abs(t.innerWidth-e.documentElement.clientWidth)}(this.ownerDocument)}getElement(){return(this.ownerDocument||document).body}setModalAttributes(e){}removeModalAttributes(e){}setContainerStyle(e){const t={overflow:"hidden"},n=this.isRTL?"paddingLeft":"paddingRight",r=this.getElement();e.style={overflow:r.style.overflow,[n]:r.style[n]},e.scrollBarWidth&&(t[n]=`${parseInt($P(r,n)||"0",10)+e.scrollBarWidth}px`),r.setAttribute(Ek,""),$P(r,t)}reset(){[...this.modals].forEach((e=>this.remove(e)))}removeContainerStyle(e){const t=this.getElement();t.removeAttribute(Ek),Object.assign(t.style,e.style)}add(e){let t=this.modals.indexOf(e);return-1!==t?t:(t=this.modals.length,this.modals.push(e),this.setModalAttributes(e),0!==t||(this.state={scrollBarWidth:this.getScrollbarWidth(),style:{}},this.handleContainerOverflow&&this.setContainerStyle(this.state)),t)}remove(e){const t=this.modals.indexOf(e);-1!==t&&(this.modals.splice(t,1),!this.modals.length&&this.handleContainerOverflow&&this.removeContainerStyle(this.state),this.removeModalAttributes(e))}isTopModal(e){return!!this.modals.length&&this.modals[this.modals.length-1]===e}},Xk=(e,t)=>{var n;return f?null==e?(t||ot()).body:("function"===typeof e&&(e=e()),e&&"current"in e&&(e=e.current),null!=(n=e)&&n.nodeType&&e||null):null};const Ak=["show","role","className","style","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","manager","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered"];let Sk;function Zk(e){const t=Gt(),n=e||function(e){return Sk||(Sk=new Hk({ownerDocument:null==e?void 0:e.document})),Sk}(t),i=(0,r.useRef)({dialog:null,backdrop:null});return Object.assign(i.current,{add:()=>n.add(i.current),remove:()=>n.remove(i.current),isTopModal:()=>n.isTopModal(i.current),setDialogRef:(0,r.useCallback)((e=>{i.current.dialog=e}),[]),setBackdropRef:(0,r.useCallback)((e=>{i.current.backdrop=e}),[])})}const Dk=(0,r.forwardRef)(((e,t)=>{let{show:n=!1,role:o="dialog",className:a,style:s,children:l,backdrop:u=!0,keyboard:c=!0,onBackdropClick:d,onEscapeKeyDown:h,transition:p,backdropTransition:m,autoFocus:y=!0,enforceFocus:v=!0,restoreFocus:b=!0,restoreFocusOptions:g,renderDialog:w,renderBackdrop:x=(e=>(0,mt.jsx)("div",Object.assign({},e))),manager:P,container:k,onShow:z,onHide:N=(()=>{}),onExit:O,onExited:j,onExiting:L,onEnter:E,onEntering:H,onEntered:X}=e,S=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,Ak);const Z=function(e,t){const n=Gt(),[i,o]=(0,r.useState)((()=>Xk(e,null==n?void 0:n.document)));if(!i){const t=Xk(e);t&&o(t)}return(0,r.useEffect)((()=>{t&&i&&t(i)}),[t,i]),(0,r.useEffect)((()=>{const t=Xk(e);t!==i&&o(t)}),[e,i]),i}(k),D=Zk(P),R=A(),U=M(n),[F,W]=(0,r.useState)(!n),C=(0,r.useRef)(null);(0,r.useImperativeHandle)(t,(()=>D),[D]),f&&!U&&n&&(C.current=jk()),p||n||F?n&&F&&W(!1):W(!0);const q=T((()=>{if(D.add(),K.current=it(document,"keydown",V),G.current=it(document,"focus",(()=>setTimeout(B)),!0),z&&z(),y){const e=jk(document);D.dialog&&e&&!nt(D.dialog,e)&&(C.current=e,D.dialog.focus())}})),I=T((()=>{var e;(D.remove(),null==K.current||K.current(),null==G.current||G.current(),b)&&(null==(e=C.current)||null==e.focus||e.focus(g),C.current=null)}));(0,r.useEffect)((()=>{n&&Z&&q()}),[n,Z,q]),(0,r.useEffect)((()=>{F&&I()}),[F,I]),Lk((()=>{I()}));const B=T((()=>{if(!v||!R()||!D.isTopModal())return;const e=jk();D.dialog&&e&&!nt(D.dialog,e)&&D.dialog.focus()})),Y=T((e=>{e.target===e.currentTarget&&(null==d||d(e),!0===u&&N())})),V=T((e=>{c&&27===e.keyCode&&D.isTopModal()&&(null==h||h(e),e.defaultPrevented||N())})),G=(0,r.useRef)(),K=(0,r.useRef)(),J=function(){W(!0),null==j||j(...arguments)},Q=p;if(!Z||!(n||Q&&!F))return null;const _=Object.assign({role:o,ref:D.setDialogRef,"aria-modal":"dialog"===o||void 0},S,{style:s,className:a,tabIndex:-1});let $=w?w(_):(0,mt.jsx)("div",Object.assign({},_,{children:r.cloneElement(l,{role:"document"})}));Q&&($=(0,mt.jsx)(Q,{appear:!0,unmountOnExit:!0,in:!!n,onExit:O,onExiting:L,onExited:J,onEnter:E,onEntering:H,onEntered:X,children:$}));let ee=null;if(u){const e=m;ee=x({ref:D.setBackdropRef,onClick:Y}),e&&(ee=(0,mt.jsx)(e,{appear:!0,in:!!n,children:ee}))}return(0,mt.jsx)(mt.Fragment,{children:i.createPortal((0,mt.jsxs)(mt.Fragment,{children:[ee,$]}),Z)})}));Dk.displayName="Modal";const Rk=Object.assign(Dk,{Manager:Hk}),Uk={[ok]:"show",[ak]:"show"},Fk=r.forwardRef(((e,t)=>{let{className:n,children:i,transitionClasses:o={},...a}=e;const s=(0,r.useCallback)(((e,t)=>{yk(e),null==a.onEnter||a.onEnter(e,t)}),[a]);return(0,mt.jsx)(bk,{ref:t,addEndListener:pk,...a,onEnter:s,childRef:i.ref,children:(e,t)=>r.cloneElement(i,{...t,className:l()("fade",n,i.props.className,Uk[e],o[e])})})}));Fk.defaultProps={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1},Fk.displayName="Fade";const Wk=Fk,Ck=Ln("offcanvas-body"),qk={[ok]:"show",[ak]:"show"},Ik=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:i,children:o,...a}=e;return n=cn(n,"offcanvas"),(0,mt.jsx)(bk,{ref:t,addEndListener:pk,...a,childRef:o.ref,children:(e,t)=>r.cloneElement(o,{...t,className:l()(i,o.props.className,(e===ok||e===sk)&&`${n}-toggling`,qk[e])})})}));Ik.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1},Ik.displayName="OffcanvasToggling";const Bk=Ik,Yk=r.createContext({onHide(){}}),Vk={"aria-label":a().string,onClick:a().func,variant:a().oneOf(["white"])},Gk=r.forwardRef(((e,t)=>{let{className:n,variant:r,...i}=e;return(0,mt.jsx)("button",{ref:t,type:"button",className:l()("btn-close",r&&`btn-close-${r}`,n),...i})}));Gk.displayName="CloseButton",Gk.propTypes=Vk,Gk.defaultProps={"aria-label":"Close"};const Kk=Gk,Jk=r.forwardRef(((e,t)=>{let{closeLabel:n,closeVariant:i,closeButton:o,onHide:a,children:s,...l}=e;const u=(0,r.useContext)(Yk),c=T((()=>{null==u||u.onHide(),null==a||a()}));return(0,mt.jsxs)("div",{ref:t,...l,children:[s,o&&(0,mt.jsx)(Kk,{"aria-label":n,variant:i,onClick:c})]})}));Jk.defaultProps={closeLabel:"Close",closeButton:!1};const Qk=Jk,_k=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:r,...i}=e;return n=cn(n,"offcanvas-header"),(0,mt.jsx)(Qk,{ref:t,...i,className:l()(r,n)})}));_k.displayName="OffcanvasHeader",_k.defaultProps={closeLabel:"Close",closeButton:!1};const $k=_k;var ez;const tz=Ln("offcanvas-title",{Component:(ez="h5",r.forwardRef(((e,t)=>(0,mt.jsx)("div",{...e,ref:t,className:l()(e.className,ez)}))))});function nz(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}const rz=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",iz=".sticky-top",oz=".navbar-toggler";class az extends Hk{adjustAndStore(e,t,n){const r=t.style[e];t.dataset[e]=r,$P(t,{[e]:`${parseFloat($P(t,e))+n}px`})}restore(e,t){const n=t.dataset[e];void 0!==n&&(delete t.dataset[e],$P(t,{[e]:n}))}setContainerStyle(e){super.setContainerStyle(e);const t=this.getElement();if(function(e,t){e.classList?e.classList.add(t):function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")}(e,t)||("string"===typeof e.className?e.className=e.className+" "+t:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+t))}(t,"modal-open"),!e.scrollBarWidth)return;const n=this.isRTL?"paddingLeft":"paddingRight",r=this.isRTL?"marginLeft":"marginRight";c(t,rz).forEach((t=>this.adjustAndStore(n,t,e.scrollBarWidth))),c(t,iz).forEach((t=>this.adjustAndStore(r,t,-e.scrollBarWidth))),c(t,oz).forEach((t=>this.adjustAndStore(r,t,e.scrollBarWidth)))}removeContainerStyle(e){super.removeContainerStyle(e);const t=this.getElement();!function(e,t){e.classList?e.classList.remove(t):"string"===typeof e.className?e.className=nz(e.className,t):e.setAttribute("class",nz(e.className&&e.className.baseVal||"",t))}(t,"modal-open");const n=this.isRTL?"paddingLeft":"paddingRight",r=this.isRTL?"marginLeft":"marginRight";c(t,rz).forEach((e=>this.restore(n,e))),c(t,iz).forEach((e=>this.restore(r,e))),c(t,oz).forEach((e=>this.restore(r,e)))}}let sz;const lz=az;function uz(e){return(0,mt.jsx)(Bk,{...e})}function cz(e){return(0,mt.jsx)(Wk,{...e})}const fz=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:i,children:o,"aria-labelledby":a,placement:s,show:u,backdrop:c,keyboard:f,scroll:d,onEscapeKeyDown:h,onShow:p,onHide:m,container:y,autoFocus:v,enforceFocus:b,restoreFocus:g,restoreFocusOptions:w,onEntered:x,onExit:P,onExiting:k,onEnter:z,onEntering:M,onExited:N,backdropClassName:O,manager:j,...L}=e;const E=(0,r.useRef)();n=cn(n,"offcanvas");const{onToggle:H}=(0,r.useContext)(gn)||{},X=T((()=>{null==H||H(),null==m||m()})),A=(0,r.useMemo)((()=>({onHide:X})),[X]);const S=(0,r.useCallback)((e=>(0,mt.jsx)("div",{...e,className:l()(`${n}-backdrop`,O)})),[O,n]);return(0,mt.jsx)(Yk.Provider,{value:A,children:(0,mt.jsx)(Rk,{show:u,ref:t,backdrop:c,container:y,keyboard:f,autoFocus:v,enforceFocus:b&&!d,restoreFocus:g,restoreFocusOptions:w,onEscapeKeyDown:h,onShow:p,onHide:X,onEnter:function(e){e&&(e.style.visibility="visible");for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];null==z||z(e,...n)},onEntering:M,onEntered:x,onExit:P,onExiting:k,onExited:function(e){e&&(e.style.visibility="");for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];null==N||N(...n)},manager:j||(d?(E.current||(E.current=new lz({handleContainerOverflow:!1})),E.current):function(e){return sz||(sz=new az(e)),sz}()),transition:uz,backdropTransition:cz,renderBackdrop:S,renderDialog:e=>(0,mt.jsx)("div",{role:"dialog",...e,...L,className:l()(i,n,`${n}-${s}`),"aria-labelledby":a,children:o})})})}));fz.displayName="Offcanvas",fz.defaultProps={show:!1,backdrop:!0,keyboard:!0,scroll:!1,autoFocus:!0,enforceFocus:!0,restoreFocus:!0,placement:"start"};const dz=Object.assign(fz,{Body:Ck,Header:$k,Title:tz}),hz=r.forwardRef(((e,t)=>{const n=(0,r.useContext)(gn);return(0,mt.jsx)(dz,{ref:t,show:!(null==n||!n.expanded),...e})}));hz.displayName="NavbarOffcanvas";const pz=hz,mz=Ln("navbar-text",{Component:"span"}),yz=r.forwardRef(((e,t)=>{const{bsPrefix:n,expand:i,variant:o,bg:a,fixed:s,sticky:u,className:c,as:f="nav",expanded:d,onToggle:h,onSelect:p,collapseOnSelect:m,...y}=x(e,{expanded:"onToggle"}),v=cn(n,"navbar"),b=(0,r.useCallback)((function(){null==p||p(...arguments),m&&d&&(null==h||h(!1))}),[p,m,d,h]);void 0===y.role&&"nav"!==f&&(y.role="navigation");let g=`${v}-expand`;"string"===typeof i&&(g=`${g}-${i}`);const w=(0,r.useMemo)((()=>({onToggle:()=>null==h?void 0:h(!d),bsPrefix:v,expanded:!!d})),[v,d,h]);return(0,mt.jsx)(gn.Provider,{value:w,children:(0,mt.jsx)(St.Provider,{value:b,children:(0,mt.jsx)(f,{ref:t,...y,className:l()(c,v,i&&g,o&&`${v}-${o}`,a&&`bg-${a}`,u&&`sticky-${u}`,s&&`fixed-${s}`)})})})}));yz.defaultProps={expand:!0,variant:"light",collapseOnSelect:!1},yz.displayName="Navbar";const vz=Object.assign(yz,{Brand:VP,Collapse:Nk,Offcanvas:pz,Text:mz,Toggle:Tk});n(573);const bz=r.createContext(null),gz=["as","active","eventKey"];function wz(e){let{key:t,onClick:n,active:i,id:o,role:a,disabled:s}=e;const l=(0,r.useContext)(St),u=(0,r.useContext)(Dt),c=(0,r.useContext)(bz);let f=i;const d={role:a};if(u){a||"tablist"!==u.role||(d.role="tab");const e=u.getControllerId(null!=t?t:null),n=u.getControlledId(null!=t?t:null);d[Ct("event-key")]=t,d.id=e||o,f=null==i&&null!=t?u.activeKey===t:i,!f&&(null!=c&&c.unmountOnExit||null!=c&&c.mountOnEnter)||(d["aria-controls"]=n)}return"tab"===d.role&&(s&&(d.tabIndex=-1,d["aria-disabled"]=!0),f?d["aria-selected"]=f:d.tabIndex=-1),d.onClick=T((e=>{s||(null==n||n(e),null!=t&&l&&!e.isPropagationStopped()&&l(t,e))})),[d,{isActive:f}]}const xz=r.forwardRef(((e,t)=>{let{as:n=Wt,active:r,eventKey:i}=e,o=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,gz);const[a,s]=wz(Object.assign({key:At(i,o.href),active:r},o));return a[Ct("active")]=s.isActive,(0,mt.jsx)(n,Object.assign({},o,a,{ref:t}))}));xz.displayName="NavItem";const Pz=xz,kz=["as","onSelect","activeKey","role","onKeyDown"];const zz=()=>{},Mz=Ct("event-key"),Nz=r.forwardRef(((e,t)=>{let{as:n="div",onSelect:i,activeKey:o,role:a,onKeyDown:s}=e,l=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,kz);const u=N(),f=(0,r.useRef)(!1),d=(0,r.useContext)(St),h=(0,r.useContext)(bz);let p,m;h&&(a=a||"tablist",o=h.activeKey,p=h.getControlledId,m=h.getControllerId);const y=(0,r.useRef)(null),v=e=>{const t=y.current;if(!t)return null;const n=c(t,`[${Mz}]:not([aria-disabled=true])`),r=t.querySelector("[aria-selected=true]");if(!r||r!==document.activeElement)return null;const i=n.indexOf(r);if(-1===i)return null;let o=i+e;return o>=n.length&&(o=0),o<0&&(o=n.length-1),n[o]},b=(e,t)=>{null!=e&&(null==i||i(e,t),null==d||d(e,t))};(0,r.useEffect)((()=>{if(y.current&&f.current){const e=y.current.querySelector(`[${Mz}][aria-selected=true]`);null==e||e.focus()}f.current=!1}));const g=mn(t,y);return(0,mt.jsx)(St.Provider,{value:b,children:(0,mt.jsx)(Dt.Provider,{value:{role:a,activeKey:At(o),getControlledId:p||zz,getControllerId:m||zz},children:(0,mt.jsx)(n,Object.assign({},l,{onKeyDown:e=>{if(null==s||s(e),!h)return;let t;switch(e.key){case"ArrowLeft":case"ArrowUp":t=v(-1);break;case"ArrowRight":case"ArrowDown":t=v(1);break;default:return}var n;t&&(e.preventDefault(),b(t.dataset[(n="EventKey",`rrUi${n}`)]||null,e),f.current=!0,u())},ref:g,role:a}))})})}));Nz.displayName="Nav";const Oz=Object.assign(Nz,{Item:Pz}),Tz=r.createContext(null);Tz.displayName="CardHeaderContext";const jz=Tz,Lz=Ln("nav-item"),Ez=r.forwardRef(((e,t)=>{let{bsPrefix:n,className:r,as:i=on,active:o,eventKey:a,...s}=e;n=cn(n,"nav-link");const[u,c]=wz({key:At(a,s.href),active:o,...s});return(0,mt.jsx)(i,{...s,...u,ref:t,className:l()(r,n,s.disabled&&"disabled",c.isActive&&"active")})}));Ez.displayName="NavLink",Ez.defaultProps={disabled:!1};const Hz=Ez,Xz=r.forwardRef(((e,t)=>{const{as:n="div",bsPrefix:i,variant:o,fill:a,justify:s,navbar:u,navbarScroll:c,className:f,activeKey:d,...h}=x(e,{activeKey:"onSelect"}),p=cn(i,"nav");let m,y,v=!1;const b=(0,r.useContext)(gn),g=(0,r.useContext)(jz);return b?(m=b.bsPrefix,v=null==u||u):g&&({cardHeaderBsPrefix:y}=g),(0,mt.jsx)(Oz,{as:n,ref:t,activeKey:d,className:l()(f,{[p]:!v,[`${m}-nav`]:v,[`${m}-nav-scroll`]:v&&c,[`${y}-${o}`]:!!y,[`${p}-${o}`]:!!o,[`${p}-fill`]:a,[`${p}-justified`]:s}),...h})}));Xz.displayName="Nav",Xz.defaultProps={justify:!1,fill:!1};const Az=Object.assign(Xz,{Item:Lz,Link:Hz});function Sz(){return(0,mt.jsx)(vz,{collapseOnSelect:!0,expand:"md",bg:"secondary",variant:"dark",children:(0,mt.jsxs)(Cn,{children:[(0,mt.jsx)(vz.Brand,{className:"fs-3 fw-bold",href:"./",children:"TW3t"}),(0,mt.jsx)(vz.Toggle,{"aria-controls":"responsive-navbar-nav"}),(0,mt.jsxs)(vz.Collapse,{id:"responsive-navbar-nav",children:[(0,mt.jsx)(Az,{className:"me-auto"}),(0,mt.jsx)(Az,{children:(0,mt.jsx)(Az.Link,{target:"_blank",href:"https://github.com/hamidra/tw3t",children:"What is TW3T?!"})})]})]})})}const Zz=e=>{e&&e instanceof Function&&n.e(787).then(n.bind(n,787)).then((t=>{let{getCLS:n,getFID:r,getFCP:i,getLCP:o,getTTFB:a}=t;n(e),r(e),i(e),o(e),a(e)}))};i.render((0,mt.jsxs)(r.StrictMode,{children:[(0,mt.jsx)(Sz,{}),(0,mt.jsx)(BP,{})]}),document.getElementById("root")),Zz()})()})();
//# sourceMappingURL=main.3730b357.js.map